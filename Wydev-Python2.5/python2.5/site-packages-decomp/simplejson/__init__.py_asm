--== Disasm ==--
00000008 CODE:
             argcount:
00000009         LONG: 0L (00 00 00 00)
             nlocals:
0000000D         LONG: 0L (00 00 00 00)
             stacksize:
00000011         LONG: 19L (13 00 00 00)
             flags:
00000015         LONG: 64L (40 00 00 00)
                 (NOFREE)
             code:
00000019         STR: 'd\x00\x00Z\x00\x00d\x01\x00Z\x01\x00d\x02\x00d\x03\x00d\x04\x00d\x05\x00d\x06\x00d\x07\x00g\x06\x00Z\x02...' (14 01 00 00 64 00 00 5A 00 00 64 01...)
                 00000000     64 - LOAD_CONST          'A simple, fast, extensible JSON encoder and decoder\n\nJSON (JavaScript Object Notation) <http://json.org> is a subset of\nJavaScript syntax (ECMA-262 3rd edition) used as a lightweight data\ninterchange format.\n\nsimplejson exposes an API familiar to uses of the standard library\nmarshal and pickle modules.\n\nEncoding basic Python object hierarchies::\n\n    >>> import simplejson\n    >>> simplejson.dumps([\'foo\', {\'bar\': (\'baz\', None, 1.0, 2)}])\n    \'["foo", {"bar": ["baz", null, 1.0, 2]}]\'\n    >>> print simplejson.dumps("\\"foo\\bar")\n    "\\"foo\\bar"\n    >>> print simplejson.dumps(u\'\\u1234\')\n    "\\u1234"\n    >>> print simplejson.dumps(\'\\\\\')\n    "\\\\"\n    >>> print simplejson.dumps({"c": 0, "b": 0, "a": 0}, sort_keys=True)\n    {"a": 0, "b": 0, "c": 0}\n    >>> from StringIO import StringIO\n    >>> io = StringIO()\n    >>> simplejson.dump([\'streaming API\'], io)\n    >>> io.getvalue()\n    \'["streaming API"]\'\n\nCompact encoding::\n\n    >>> import simplejson\n    >>> compact = simplejson.dumps([1,2,3,{\'4\': 5, \'6\': 7}], separators=(\',\',\':\'))\n    >>> # Can\'t assume dict ordering\n    >>> compact in (\'[1,2,3,{"4":5,"6":7}]\', \'[1,2,3,{"6":7,"4":5}]\')\n    True\n\nPretty printing (using repr() because of extraneous whitespace in the output)::\n\n    >>> import simplejson\n    >>> print repr(simplejson.dumps({\'4\': 5, \'6\': 7}, sort_keys=True, indent=4))\n    \'{\\n    "4": 5, \\n    "6": 7\\n}\'\n\nDecoding JSON::\n\n    >>> import simplejson\n    >>> simplejson.loads(\'["foo", {"bar":["baz", null, 1.0, 2]}]\') == ["foo", {"bar":["baz", None, 1.0, 2]}]\n    True\n    >>> simplejson.loads(\'"\\\\"foo\\\\bar"\') == \'"foo\\x08ar\'\n    True\n    >>> from StringIO import StringIO\n    >>> io = StringIO(\'["streaming API"]\')\n    >>> simplejson.load(io) == ["streaming API"]\n    True\n\nSpecializing JSON object decoding::\n\n    >>> import simplejson\n    >>> def as_complex(dct):\n    ...     if \'__complex__\' in dct:\n    ...         return complex(dct[\'real\'], dct[\'imag\'])\n    ...     return dct\n    ...\n    >>> simplejson.loads(\'{"__complex__": true, "real": 1, "imag": 2}\',\n    ...     object_hook=as_complex)\n    (1+2j)\n    >>> from decimal import Decimal\n    >>> simplejson.loads(\'1.1\', parse_float=Decimal) == Decimal("1.1")\n    True\n\nExtending JSONEncoder::\n\n    >>> import simplejson\n    >>> class ComplexEncoder(simplejson.JSONEncoder):\n    ...     def default(self, obj):\n    ...         if isinstance(obj, complex):\n    ...             return [obj.real, obj.imag]\n    ...         return simplejson.JSONEncoder.default(self, obj)\n    ...\n    >>> dumps(2 + 1j, cls=ComplexEncoder)\n    \'[2.0, 1.0]\'\n    >>> ComplexEncoder().encode(2 + 1j)\n    \'[2.0, 1.0]\'\n    >>> \'\'.join(ComplexEncoder().iterencode(2 + 1j))\n    \'[2.0, 1.0]\'\n\n\nUsing simplejson from the shell to validate and\npretty-print::\n\n    $ echo \'{"json":"obj"}\' | python -msimplejson.tool\n    {\n        "json": "obj"\n    }\n    $ echo \'{ 1.2:3.4}\' | python -msimplejson.tool\n    Expecting property name: line 1 column 2 (char 2)\n'
                 00000003     5A - STORE_NAME          '__doc__'
                 00000006     64 - LOAD_CONST          '2.0.4'
                 00000009     5A - STORE_NAME          '__version__'
                 0000000C     64 - LOAD_CONST          'dump'
                 0000000F     64 - LOAD_CONST          'dumps'
                 00000012     64 - LOAD_CONST          'load'
                 00000015     64 - LOAD_CONST          'loads'
                 00000018     64 - LOAD_CONST          'JSONDecoder'
                 0000001B     64 - LOAD_CONST          'JSONEncoder'
                 0000001E     67 - BUILD_LIST          
                 00000021     5A - STORE_NAME          '__all__'
                 00000024     64 - LOAD_CONST          -1
                 00000027     64 - LOAD_CONST          ('JSONDecoder')
                 0000002A     6B - IMPORT_NAME         'decoder'
                 0000002D     6C - IMPORT_FROM         'JSONDecoder'
                 00000030     5A - STORE_NAME          'JSONDecoder'
                 00000033     01 - POP_TOP             
                 00000034     64 - LOAD_CONST          -1
                 00000037     64 - LOAD_CONST          ('JSONEncoder')
                 0000003A     6B - IMPORT_NAME         'encoder'
                 0000003D     6C - IMPORT_FROM         'JSONEncoder'
                 00000040     5A - STORE_NAME          'JSONEncoder'
                 00000043     01 - POP_TOP             
                 00000044     65 - LOAD_NAME           'JSONEncoder'
                 00000047     64 - LOAD_CONST          'skipkeys'
                 0000004A     65 - LOAD_NAME           'False'
                 0000004D     64 - LOAD_CONST          'ensure_ascii'
                 00000050     65 - LOAD_NAME           'True'
                 00000053     64 - LOAD_CONST          'check_circular'
                 00000056     65 - LOAD_NAME           'True'
                 00000059     64 - LOAD_CONST          'allow_nan'
                 0000005C     65 - LOAD_NAME           'True'
                 0000005F     64 - LOAD_CONST          'indent'
                 00000062     64 - LOAD_CONST          None
                 00000065     64 - LOAD_CONST          'separators'
                 00000068     64 - LOAD_CONST          None
                 0000006B     64 - LOAD_CONST          'encoding'
                 0000006E     64 - LOAD_CONST          'utf-8'
                 00000071     64 - LOAD_CONST          'default'
                 00000074     64 - LOAD_CONST          None
                 00000077     83 - CALL_FUNCTION       
                 0000007A     5A - STORE_NAME          '_default_encoder'
                 0000007D     65 - LOAD_NAME           'False'
                 00000080     65 - LOAD_NAME           'True'
                 00000083     65 - LOAD_NAME           'True'
                 00000086     65 - LOAD_NAME           'True'
                 00000089     64 - LOAD_CONST          None
                 0000008C     64 - LOAD_CONST          None
                 0000008F     64 - LOAD_CONST          None
                 00000092     64 - LOAD_CONST          'utf-8'
                 00000095     64 - LOAD_CONST          None
                 00000098     64 - LOAD_CONST          CODE('dump')
                 0000009B     84 - MAKE_FUNCTION       
                 0000009E     5A - STORE_NAME          'dump'
                 000000A1     65 - LOAD_NAME           'False'
                 000000A4     65 - LOAD_NAME           'True'
                 000000A7     65 - LOAD_NAME           'True'
                 000000AA     65 - LOAD_NAME           'True'
                 000000AD     64 - LOAD_CONST          None
                 000000B0     64 - LOAD_CONST          None
                 000000B3     64 - LOAD_CONST          None
                 000000B6     64 - LOAD_CONST          'utf-8'
                 000000B9     64 - LOAD_CONST          None
                 000000BC     64 - LOAD_CONST          CODE('dumps')
                 000000BF     84 - MAKE_FUNCTION       
                 000000C2     5A - STORE_NAME          'dumps'
                 000000C5     65 - LOAD_NAME           'JSONDecoder'
                 000000C8     64 - LOAD_CONST          'encoding'
                 000000CB     64 - LOAD_CONST          None
                 000000CE     64 - LOAD_CONST          'object_hook'
                 000000D1     64 - LOAD_CONST          None
                 000000D4     83 - CALL_FUNCTION       
                 000000D7     5A - STORE_NAME          '_default_decoder'
                 000000DA     64 - LOAD_CONST          None
                 000000DD     64 - LOAD_CONST          None
                 000000E0     64 - LOAD_CONST          None
                 000000E3     64 - LOAD_CONST          None
                 000000E6     64 - LOAD_CONST          None
                 000000E9     64 - LOAD_CONST          None
                 000000EC     64 - LOAD_CONST          CODE('load')
                 000000EF     84 - MAKE_FUNCTION       
                 000000F2     5A - STORE_NAME          'load'
                 000000F5     64 - LOAD_CONST          None
                 000000F8     64 - LOAD_CONST          None
                 000000FB     64 - LOAD_CONST          None
                 000000FE     64 - LOAD_CONST          None
                 00000101     64 - LOAD_CONST          None
                 00000104     64 - LOAD_CONST          None
                 00000107     64 - LOAD_CONST          CODE('loads')
                 0000010A     84 - MAKE_FUNCTION       
                 0000010D     5A - STORE_NAME          'loads'
                 00000110     64 - LOAD_CONST          None
                 00000113     53 - RETURN_VALUE        
             consts:
00000132         TUPLE: (
00000137             STR: 'A simple, fast, extensible JSON enc...' (88 0B 00 00 41 20 73 69 6D 70 6C 65...),
00000CC4             STR: '2.0.4' (05 00 00 00 32 2E 30 2E 34),
00000CCE             STR: 'dump' (04 00 00 00 64 75 6D 70),
00000CD7             STR: 'dumps' (05 00 00 00 64 75 6D 70 73),
00000CE1             STR: 'load' (04 00 00 00 6C 6F 61 64),
00000CEA             STR: 'loads' (05 00 00 00 6C 6F 61 64 73),
00000CF4             STR: 'JSONDecoder' (0B 00 00 00 4A 53 4F 4E 44 65 63 6F...),
00000D04             STR: 'JSONEncoder' (0B 00 00 00 4A 53 4F 4E 45 6E 63 6F...),
00000D14             INT: -1 (FF FF FF FF),
00000D19             TUPLE: (
00000D1E                 STR: 'JSONDecoder' (04 00 00 00)
                     ),
00000D23             TUPLE: (
00000D28                 STR: 'JSONEncoder' (05 00 00 00)
                     ),
00000D2D             STR: 'skipkeys' (08 00 00 00 73 6B 69 70 6B 65 79 73),
00000D3A             STR: 'ensure_ascii' (0C 00 00 00 65 6E 73 75 72 65 5F 61...),
00000D4B             STR: 'check_circular' (0E 00 00 00 63 68 65 63 6B 5F 63 69...),
00000D5E             STR: 'allow_nan' (09 00 00 00 61 6C 6C 6F 77 5F 6E 61...),
00000D6C             STR: 'indent' (06 00 00 00 69 6E 64 65 6E 74),
00000D77             STR: 'separators' (0A 00 00 00 73 65 70 61 72 61 74 6F...),
00000D86             STR: 'encoding' (08 00 00 00 65 6E 63 6F 64 69 6E 67),
00000D93             STR: 'utf-8' (05 00 00 00 75 74 66 2D 38),
00000D9D             STR: 'default' (07 00 00 00 64 65 66 61 75 6C 74),
00000DA9             CODE:
                         argcount:
00000DAA                     LONG: 11L (0B 00 00 00)
                         nlocals:
00000DAE                     LONG: 14L (0E 00 00 00)
                         stacksize:
00000DB2                     LONG: 18L (12 00 00 00)
                         flags:
00000DB6                     LONG: 75L (4B 00 00 00)
                             (OPTIMIZED, NEWLOCALS, VARKEYWORDS, NOFREE)
                         code:
00000DBA                     STR: '|\x02\x00t\x00\x00j\x08\x00o\x83\x00\x01|\x03\x00t\x01\x00j\x08\x00ov\x00\x01|\x04\x00t\x01\x00j\x08\x00...' (0E 01 00 00 7C 02 00 74 00 00 6A 08...)
                             00000000     7C - LOAD_FAST           'skipkeys'
                             00000003     74 - LOAD_GLOBAL         'False'
                             00000006     6A - COMPARE_OP          "is"
                             00000009     6F - JUMP_IF_FALSE       -> 0000008F
                             0000000C     01 - POP_TOP             
                             0000000D     7C - LOAD_FAST           'ensure_ascii'
                             00000010     74 - LOAD_GLOBAL         'True'
                             00000013     6A - COMPARE_OP          "is"
                             00000016     6F - JUMP_IF_FALSE       -> 0000008F
                             00000019     01 - POP_TOP             
                             0000001A     7C - LOAD_FAST           'check_circular'
                             0000001D     74 - LOAD_GLOBAL         'True'
                             00000020     6A - COMPARE_OP          "is"
                             00000023     6F - JUMP_IF_FALSE       -> 0000008F
                             00000026     01 - POP_TOP             
                             00000027     7C - LOAD_FAST           'allow_nan'
                             0000002A     74 - LOAD_GLOBAL         'True'
                             0000002D     6A - COMPARE_OP          "is"
                             00000030     6F - JUMP_IF_FALSE       -> 0000008F
                             00000033     01 - POP_TOP             
                             00000034     7C - LOAD_FAST           'cls'
                             00000037     64 - LOAD_CONST          None
                             0000003A     6A - COMPARE_OP          "is"
                             0000003D     6F - JUMP_IF_FALSE       -> 0000008F
                             00000040     01 - POP_TOP             
                             00000041     7C - LOAD_FAST           'indent'
                             00000044     64 - LOAD_CONST          None
                             00000047     6A - COMPARE_OP          "is"
                             0000004A     6F - JUMP_IF_FALSE       -> 0000008F
                             0000004D     01 - POP_TOP             
                             0000004E     7C - LOAD_FAST           'separators'
                             00000051     64 - LOAD_CONST          None
                             00000054     6A - COMPARE_OP          "is"
                             00000057     6F - JUMP_IF_FALSE       -> 0000008F
                             0000005A     01 - POP_TOP             
                             0000005B     7C - LOAD_FAST           'encoding'
                             0000005E     64 - LOAD_CONST          'utf-8'
                             00000061     6A - COMPARE_OP          "=="
                             00000064     6F - JUMP_IF_FALSE       -> 0000008F
                             00000067     01 - POP_TOP             
                             00000068     7C - LOAD_FAST           'default'
                             0000006B     64 - LOAD_CONST          None
                             0000006E     6A - COMPARE_OP          "is"
                             00000071     6F - JUMP_IF_FALSE       -> 0000008F
                             00000074     01 - POP_TOP             
                             00000075     7C - LOAD_FAST           'kw'
                             00000078     0C - UNARY_NOT           
                             00000079     6F - JUMP_IF_FALSE       -> 0000008F
                             0000007C     01 - POP_TOP             
                             0000007D     74 - LOAD_GLOBAL         '_default_encoder'
                             00000080     69 - LOAD_ATTR           'iterencode'
                             00000083     7C - LOAD_FAST           'obj'
                             00000086     83 - CALL_FUNCTION       
                             00000089     7D - STORE_FAST          'iterable'
                             0000008C     6E - JUMP_FORWARD        -> 000000EC
                             0000008F     01 - POP_TOP             
                             00000090     7C - LOAD_FAST           'cls'
                             00000093     64 - LOAD_CONST          None
                             00000096     6A - COMPARE_OP          "is"
                             00000099     6F - JUMP_IF_FALSE       -> 000000A6
                             0000009C     01 - POP_TOP             
                             0000009D     74 - LOAD_GLOBAL         'JSONEncoder'
                             000000A0     7D - STORE_FAST          'cls'
                             000000A3     6E - JUMP_FORWARD        -> 000000A7
                             000000A6     01 - POP_TOP             
                             000000A7     7C - LOAD_FAST           'cls'
                             000000AA     64 - LOAD_CONST          'skipkeys'
                             000000AD     7C - LOAD_FAST           'skipkeys'
                             000000B0     64 - LOAD_CONST          'ensure_ascii'
                             000000B3     7C - LOAD_FAST           'ensure_ascii'
                             000000B6     64 - LOAD_CONST          'check_circular'
                             000000B9     7C - LOAD_FAST           'check_circular'
                             000000BC     64 - LOAD_CONST          'allow_nan'
                             000000BF     7C - LOAD_FAST           'allow_nan'
                             000000C2     64 - LOAD_CONST          'indent'
                             000000C5     7C - LOAD_FAST           'indent'
                             000000C8     64 - LOAD_CONST          'separators'
                             000000CB     7C - LOAD_FAST           'separators'
                             000000CE     64 - LOAD_CONST          'encoding'
                             000000D1     7C - LOAD_FAST           'encoding'
                             000000D4     64 - LOAD_CONST          'default'
                             000000D7     7C - LOAD_FAST           'default'
                             000000DA     7C - LOAD_FAST           'kw'
                             000000DD     8D - CALL_FUNCTION_KW    
                             000000E0     69 - LOAD_ATTR           'iterencode'
                             000000E3     7C - LOAD_FAST           'obj'
                             000000E6     83 - CALL_FUNCTION       
                             000000E9     7D - STORE_FAST          'iterable'
                             000000EC     78 - SETUP_LOOP          -> 0000010A
                             000000EF     7C - LOAD_FAST           'iterable'
                             000000F2     44 - GET_ITER            
                             000000F3     5D - FOR_ITER            -> 00000109
                             000000F6     7D - STORE_FAST          'chunk'
                             000000F9     7C - LOAD_FAST           'fp'
                             000000FC     69 - LOAD_ATTR           'write'
                             000000FF     7C - LOAD_FAST           'chunk'
                             00000102     83 - CALL_FUNCTION       
                             00000105     01 - POP_TOP             
                             00000106     71 - JUMP_ABSOLUTE       -> 000000F3
                             00000109     57 - POP_BLOCK           
                             0000010A     64 - LOAD_CONST          None
                             0000010D     53 - RETURN_VALUE        
                         consts:
00000ECD                     TUPLE: (
00000ED2                         STR: 'Serialize ``obj`` as a JSON formatt...' (A1 07 00 00 53 65 72 69 61 6C 69 7A...),
00001678                         STR: 'utf-8' (05 00 00 00 75 74 66 2D 38),
00001682                         STR: 'skipkeys' (06 00 00 00),
00001687                         STR: 'ensure_ascii' (07 00 00 00),
0000168C                         STR: 'check_circular' (08 00 00 00),
00001691                         STR: 'allow_nan' (09 00 00 00),
00001696                         STR: 'indent' (0A 00 00 00),
0000169B                         STR: 'separators' (0B 00 00 00),
000016A0                         STR: 'encoding' (0C 00 00 00),
000016A5                         STR: 'default' (0D 00 00 00),
000016AA                         None (4E)
                             )
                         names:
000016AB                     TUPLE: (
000016B0                         STR: 'False' (05 00 00 00 46 61 6C 73 65),
000016BA                         STR: 'True' (04 00 00 00 54 72 75 65),
000016C3                         STR: 'None' (04 00 00 00 4E 6F 6E 65),
000016CC                         STR: '_default_encoder' (10 00 00 00 5F 64 65 66 61 75 6C 74...),
000016E1                         STR: 'iterencode' (0A 00 00 00 69 74 65 72 65 6E 63 6F...),
000016F0                         STR: 'JSONEncoder' (05 00 00 00),
000016F5                         STR: 'write' (05 00 00 00 77 72 69 74 65)
                             )
                         varnames:
000016FF                     TUPLE: (
00001704                         STR: 'obj' (03 00 00 00 6F 62 6A),
0000170C                         STR: 'fp' (02 00 00 00 66 70),
00001713                         STR: 'skipkeys' (06 00 00 00),
00001718                         STR: 'ensure_ascii' (07 00 00 00),
0000171D                         STR: 'check_circular' (08 00 00 00),
00001722                         STR: 'allow_nan' (09 00 00 00),
00001727                         STR: 'cls' (03 00 00 00 63 6C 73),
0000172F                         STR: 'indent' (0A 00 00 00),
00001734                         STR: 'separators' (0B 00 00 00),
00001739                         STR: 'encoding' (0C 00 00 00),
0000173E                         STR: 'default' (0D 00 00 00),
00001743                         STR: 'kw' (02 00 00 00 6B 77),
0000174A                         STR: 'iterable' (08 00 00 00 69 74 65 72 61 62 6C 65),
00001757                         STR: 'chunk' (05 00 00 00 63 68 75 6E 6B)
                             )
                         freevars:
00001761                     TUPLE: ()
                         cellvars:
00001766                     TUPLE: ()
                         filename:
0000176B                     STR: '/usr/targets/wyplayer-1.3.17-beta-s...' (83 00 00 00 2F 75 73 72 2F 74 61 72...)
                         name:
000017F3                     STR: 'dump' (00 00 00 00)
                         firstlineno:
000017F8                     LONG: 117L (75 00 00 00)
                         lnotab:
000017FC                     STR: '\x00,\x1a\x01\x1a\x01\'\x01"\x01\x13\x02\r\x01\n\x01\x12\x01\x12\x01\x0c\x01\x15\x03\x07\x00\x06\x01' (1C 00 00 00 00 2C 1A 01 1A 01 27 01...),
0000181D             CODE:
                         argcount:
0000181E                     LONG: 10L (0A 00 00 00)
                         nlocals:
00001822                     LONG: 11L (0B 00 00 00)
                         stacksize:
00001826                     LONG: 18L (12 00 00 00)
                         flags:
0000182A                     LONG: 75L (4B 00 00 00)
                             (OPTIMIZED, NEWLOCALS, VARKEYWORDS, NOFREE)
                         code:
0000182E                     STR: '|\x01\x00t\x00\x00j\x08\x00o\x81\x00\x01|\x02\x00t\x01\x00j\x08\x00ot\x00\x01|\x03\x00t\x01\x00j\x08\x00...' (E8 00 00 00 7C 01 00 74 00 00 6A 08...)
                             00000000     7C - LOAD_FAST           'skipkeys'
                             00000003     74 - LOAD_GLOBAL         'False'
                             00000006     6A - COMPARE_OP          "is"
                             00000009     6F - JUMP_IF_FALSE       -> 0000008D
                             0000000C     01 - POP_TOP             
                             0000000D     7C - LOAD_FAST           'ensure_ascii'
                             00000010     74 - LOAD_GLOBAL         'True'
                             00000013     6A - COMPARE_OP          "is"
                             00000016     6F - JUMP_IF_FALSE       -> 0000008D
                             00000019     01 - POP_TOP             
                             0000001A     7C - LOAD_FAST           'check_circular'
                             0000001D     74 - LOAD_GLOBAL         'True'
                             00000020     6A - COMPARE_OP          "is"
                             00000023     6F - JUMP_IF_FALSE       -> 0000008D
                             00000026     01 - POP_TOP             
                             00000027     7C - LOAD_FAST           'allow_nan'
                             0000002A     74 - LOAD_GLOBAL         'True'
                             0000002D     6A - COMPARE_OP          "is"
                             00000030     6F - JUMP_IF_FALSE       -> 0000008D
                             00000033     01 - POP_TOP             
                             00000034     7C - LOAD_FAST           'cls'
                             00000037     64 - LOAD_CONST          None
                             0000003A     6A - COMPARE_OP          "is"
                             0000003D     6F - JUMP_IF_FALSE       -> 0000008D
                             00000040     01 - POP_TOP             
                             00000041     7C - LOAD_FAST           'indent'
                             00000044     64 - LOAD_CONST          None
                             00000047     6A - COMPARE_OP          "is"
                             0000004A     6F - JUMP_IF_FALSE       -> 0000008D
                             0000004D     01 - POP_TOP             
                             0000004E     7C - LOAD_FAST           'separators'
                             00000051     64 - LOAD_CONST          None
                             00000054     6A - COMPARE_OP          "is"
                             00000057     6F - JUMP_IF_FALSE       -> 0000008D
                             0000005A     01 - POP_TOP             
                             0000005B     7C - LOAD_FAST           'encoding'
                             0000005E     64 - LOAD_CONST          'utf-8'
                             00000061     6A - COMPARE_OP          "=="
                             00000064     6F - JUMP_IF_FALSE       -> 0000008D
                             00000067     01 - POP_TOP             
                             00000068     7C - LOAD_FAST           'default'
                             0000006B     64 - LOAD_CONST          None
                             0000006E     6A - COMPARE_OP          "is"
                             00000071     6F - JUMP_IF_FALSE       -> 0000008D
                             00000074     01 - POP_TOP             
                             00000075     7C - LOAD_FAST           'kw'
                             00000078     0C - UNARY_NOT           
                             00000079     6F - JUMP_IF_FALSE       -> 0000008D
                             0000007C     01 - POP_TOP             
                             0000007D     74 - LOAD_GLOBAL         '_default_encoder'
                             00000080     69 - LOAD_ATTR           'encode'
                             00000083     7C - LOAD_FAST           'obj'
                             00000086     83 - CALL_FUNCTION       
                             00000089     53 - RETURN_VALUE        
                             0000008A     6E - JUMP_FORWARD        -> 0000008E
                             0000008D     01 - POP_TOP             
                             0000008E     7C - LOAD_FAST           'cls'
                             00000091     64 - LOAD_CONST          None
                             00000094     6A - COMPARE_OP          "is"
                             00000097     6F - JUMP_IF_FALSE       -> 000000A4
                             0000009A     01 - POP_TOP             
                             0000009B     74 - LOAD_GLOBAL         'JSONEncoder'
                             0000009E     7D - STORE_FAST          'cls'
                             000000A1     6E - JUMP_FORWARD        -> 000000A5
                             000000A4     01 - POP_TOP             
                             000000A5     7C - LOAD_FAST           'cls'
                             000000A8     64 - LOAD_CONST          'skipkeys'
                             000000AB     7C - LOAD_FAST           'skipkeys'
                             000000AE     64 - LOAD_CONST          'ensure_ascii'
                             000000B1     7C - LOAD_FAST           'ensure_ascii'
                             000000B4     64 - LOAD_CONST          'check_circular'
                             000000B7     7C - LOAD_FAST           'check_circular'
                             000000BA     64 - LOAD_CONST          'allow_nan'
                             000000BD     7C - LOAD_FAST           'allow_nan'
                             000000C0     64 - LOAD_CONST          'indent'
                             000000C3     7C - LOAD_FAST           'indent'
                             000000C6     64 - LOAD_CONST          'separators'
                             000000C9     7C - LOAD_FAST           'separators'
                             000000CC     64 - LOAD_CONST          'encoding'
                             000000CF     7C - LOAD_FAST           'encoding'
                             000000D2     64 - LOAD_CONST          'default'
                             000000D5     7C - LOAD_FAST           'default'
                             000000D8     7C - LOAD_FAST           'kw'
                             000000DB     8D - CALL_FUNCTION_KW    
                             000000DE     69 - LOAD_ATTR           'encode'
                             000000E1     7C - LOAD_FAST           'obj'
                             000000E4     83 - CALL_FUNCTION       
                             000000E7     53 - RETURN_VALUE        
                         consts:
0000191B                     TUPLE: (
00001920                         STR: 'Serialize ``obj`` to a JSON formatt...' (06 07 00 00 53 65 72 69 61 6C 69 7A...),
0000202B                         STR: 'utf-8' (05 00 00 00 75 74 66 2D 38),
00002035                         STR: 'skipkeys' (06 00 00 00),
0000203A                         STR: 'ensure_ascii' (07 00 00 00),
0000203F                         STR: 'check_circular' (08 00 00 00),
00002044                         STR: 'allow_nan' (09 00 00 00),
00002049                         STR: 'indent' (0A 00 00 00),
0000204E                         STR: 'separators' (0B 00 00 00),
00002053                         STR: 'encoding' (0C 00 00 00),
00002058                         STR: 'default' (0D 00 00 00),
0000205D                         None (4E)
                             )
                         names:
0000205E                     TUPLE: (
00002063                         STR: 'False' (0E 00 00 00),
00002068                         STR: 'True' (0F 00 00 00),
0000206D                         STR: 'None' (10 00 00 00),
00002072                         STR: '_default_encoder' (11 00 00 00),
00002077                         STR: 'encode' (06 00 00 00 65 6E 63 6F 64 65),
00002082                         STR: 'JSONEncoder' (05 00 00 00)
                             )
                         varnames:
00002087                     TUPLE: (
0000208C                         STR: 'obj' (14 00 00 00),
00002091                         STR: 'skipkeys' (06 00 00 00),
00002096                         STR: 'ensure_ascii' (07 00 00 00),
0000209B                         STR: 'check_circular' (08 00 00 00),
000020A0                         STR: 'allow_nan' (09 00 00 00),
000020A5                         STR: 'cls' (16 00 00 00),
000020AA                         STR: 'indent' (0A 00 00 00),
000020AF                         STR: 'separators' (0B 00 00 00),
000020B4                         STR: 'encoding' (0C 00 00 00),
000020B9                         STR: 'default' (0D 00 00 00),
000020BE                         STR: 'kw' (17 00 00 00)
                             )
                         freevars:
000020C3                     TUPLE: ()
                         cellvars:
000020C8                     TUPLE: ()
                         filename:
000020CD                     STR: '/usr/targets/wyplayer-1.3.17-beta-s...' (83 00 00 00 2F 75 73 72 2F 74 61 72...)
                         name:
00002155                     STR: 'dumps' (01 00 00 00)
                         firstlineno:
0000215A                     LONG: 179L (B3 00 00 00)
                         lnotab:
0000215E                     STR: '\x00*\x1a\x01\x1a\x01\'\x01"\x01\x11\x01\r\x01\n\x01\x06\x01\x0c\x01\x12\x01\x0f\x01' (18 00 00 00 00 2A 1A 01 1A 01 27 01...),
0000217B             STR: 'object_hook' (0B 00 00 00 6F 62 6A 65 63 74 5F 68...),
0000218B             CODE:
                         argcount:
0000218C                     LONG: 7L (07 00 00 00)
                         nlocals:
00002190                     LONG: 8L (08 00 00 00)
                         stacksize:
00002194                     LONG: 15L (0F 00 00 00)
                         flags:
00002198                     LONG: 75L (4B 00 00 00)
                             (OPTIMIZED, NEWLOCALS, VARKEYWORDS, NOFREE)
                         code:
0000219C                     STR: 't\x00\x00|\x00\x00i\x01\x00\x83\x00\x00d\x01\x00|\x01\x00d\x02\x00|\x02\x00d\x03\x00|\x03\x00d\x04\x00|\x04...' (37 00 00 00 74 00 00 7C 00 00 69 01...)
                             00000000     74 - LOAD_GLOBAL         'loads'
                             00000003     7C - LOAD_FAST           'fp'
                             00000006     69 - LOAD_ATTR           'read'
                             00000009     83 - CALL_FUNCTION       
                             0000000C     64 - LOAD_CONST          'encoding'
                             0000000F     7C - LOAD_FAST           'encoding'
                             00000012     64 - LOAD_CONST          'cls'
                             00000015     7C - LOAD_FAST           'cls'
                             00000018     64 - LOAD_CONST          'object_hook'
                             0000001B     7C - LOAD_FAST           'object_hook'
                             0000001E     64 - LOAD_CONST          'parse_float'
                             00000021     7C - LOAD_FAST           'parse_float'
                             00000024     64 - LOAD_CONST          'parse_int'
                             00000027     7C - LOAD_FAST           'parse_int'
                             0000002A     64 - LOAD_CONST          'parse_constant'
                             0000002D     7C - LOAD_FAST           'parse_constant'
                             00000030     7C - LOAD_FAST           'kw'
                             00000033     8D - CALL_FUNCTION_KW    
                             00000036     53 - RETURN_VALUE        
                         consts:
000021D8                     TUPLE: (
000021DD                         STR: 'Deserialize ``fp`` (a ``.read()``-s...' (70 03 00 00 44 65 73 65 72 69 61 6C...),
00002552                         STR: 'encoding' (0C 00 00 00),
00002557                         STR: 'cls' (16 00 00 00),
0000255C                         STR: 'object_hook' (1B 00 00 00),
00002561                         STR: 'parse_float' (0B 00 00 00 70 61 72 73 65 5F 66 6C...),
00002571                         STR: 'parse_int' (09 00 00 00 70 61 72 73 65 5F 69 6E...),
0000257F                         STR: 'parse_constant' (0E 00 00 00 70 61 72 73 65 5F 63 6F...)
                             )
                         names:
00002592                     TUPLE: (
00002597                         STR: 'loads' (03 00 00 00),
0000259C                         STR: 'read' (04 00 00 00 72 65 61 64)
                             )
                         varnames:
000025A5                     TUPLE: (
000025AA                         STR: 'fp' (15 00 00 00),
000025AF                         STR: 'encoding' (0C 00 00 00),
000025B4                         STR: 'cls' (16 00 00 00),
000025B9                         STR: 'object_hook' (1B 00 00 00),
000025BE                         STR: 'parse_float' (1C 00 00 00),
000025C3                         STR: 'parse_int' (1D 00 00 00),
000025C8                         STR: 'parse_constant' (1E 00 00 00),
000025CD                         STR: 'kw' (17 00 00 00)
                             )
                         freevars:
000025D2                     TUPLE: ()
                         cellvars:
000025D7                     TUPLE: ()
                         filename:
000025DC                     STR: '/usr/targets/wyplayer-1.3.17-beta-s...' (83 00 00 00 2F 75 73 72 2F 74 61 72...)
                         name:
00002664                     STR: 'load' (02 00 00 00)
                         firstlineno:
00002669                     LONG: 238L (EE 00 00 00)
                         lnotab:
0000266D                     STR: '\x00\x15\x0f\x01\x12\x01\x0c\x01' (08 00 00 00 00 15 0F 01 12 01 0C 01),
0000267A             CODE:
                         argcount:
0000267B                     LONG: 7L (07 00 00 00)
                         nlocals:
0000267F                     LONG: 8L (08 00 00 00)
                         stacksize:
00002683                     LONG: 4L (04 00 00 00)
                         flags:
00002687                     LONG: 75L (4B 00 00 00)
                             (OPTIMIZED, NEWLOCALS, VARKEYWORDS, NOFREE)
                         code:
0000268B                     STR: '|\x02\x00d\x06\x00j\x08\x00oZ\x00\x01|\x01\x00d\x06\x00j\x08\x00oM\x00\x01|\x03\x00d\x06\x00j\x08\x00...' (03 01 00 00 7C 02 00 64 06 00 6A 08...)
                             00000000     7C - LOAD_FAST           'cls'
                             00000003     64 - LOAD_CONST          None
                             00000006     6A - COMPARE_OP          "is"
                             00000009     6F - JUMP_IF_FALSE       -> 00000066
                             0000000C     01 - POP_TOP             
                             0000000D     7C - LOAD_FAST           'encoding'
                             00000010     64 - LOAD_CONST          None
                             00000013     6A - COMPARE_OP          "is"
                             00000016     6F - JUMP_IF_FALSE       -> 00000066
                             00000019     01 - POP_TOP             
                             0000001A     7C - LOAD_FAST           'object_hook'
                             0000001D     64 - LOAD_CONST          None
                             00000020     6A - COMPARE_OP          "is"
                             00000023     6F - JUMP_IF_FALSE       -> 00000066
                             00000026     01 - POP_TOP             
                             00000027     7C - LOAD_FAST           'parse_int'
                             0000002A     64 - LOAD_CONST          None
                             0000002D     6A - COMPARE_OP          "is"
                             00000030     6F - JUMP_IF_FALSE       -> 00000066
                             00000033     01 - POP_TOP             
                             00000034     7C - LOAD_FAST           'parse_float'
                             00000037     64 - LOAD_CONST          None
                             0000003A     6A - COMPARE_OP          "is"
                             0000003D     6F - JUMP_IF_FALSE       -> 00000066
                             00000040     01 - POP_TOP             
                             00000041     7C - LOAD_FAST           'parse_constant'
                             00000044     64 - LOAD_CONST          None
                             00000047     6A - COMPARE_OP          "is"
                             0000004A     6F - JUMP_IF_FALSE       -> 00000066
                             0000004D     01 - POP_TOP             
                             0000004E     7C - LOAD_FAST           'kw'
                             00000051     0C - UNARY_NOT           
                             00000052     6F - JUMP_IF_FALSE       -> 00000066
                             00000055     01 - POP_TOP             
                             00000056     74 - LOAD_GLOBAL         '_default_decoder'
                             00000059     69 - LOAD_ATTR           'decode'
                             0000005C     7C - LOAD_FAST           's'
                             0000005F     83 - CALL_FUNCTION       
                             00000062     53 - RETURN_VALUE        
                             00000063     6E - JUMP_FORWARD        -> 00000067
                             00000066     01 - POP_TOP             
                             00000067     7C - LOAD_FAST           'cls'
                             0000006A     64 - LOAD_CONST          None
                             0000006D     6A - COMPARE_OP          "is"
                             00000070     6F - JUMP_IF_FALSE       -> 0000007D
                             00000073     01 - POP_TOP             
                             00000074     74 - LOAD_GLOBAL         'JSONDecoder'
                             00000077     7D - STORE_FAST          'cls'
                             0000007A     6E - JUMP_FORWARD        -> 0000007E
                             0000007D     01 - POP_TOP             
                             0000007E     7C - LOAD_FAST           'object_hook'
                             00000081     64 - LOAD_CONST          None
                             00000084     6A - COMPARE_OP          "is not"
                             00000087     6F - JUMP_IF_FALSE       -> 00000098
                             0000008A     01 - POP_TOP             
                             0000008B     7C - LOAD_FAST           'object_hook'
                             0000008E     7C - LOAD_FAST           'kw'
                             00000091     64 - LOAD_CONST          'object_hook'
                             00000094     3C - STORE_SUBSCR        
                             00000095     6E - JUMP_FORWARD        -> 00000099
                             00000098     01 - POP_TOP             
                             00000099     7C - LOAD_FAST           'parse_float'
                             0000009C     64 - LOAD_CONST          None
                             0000009F     6A - COMPARE_OP          "is not"
                             000000A2     6F - JUMP_IF_FALSE       -> 000000B3
                             000000A5     01 - POP_TOP             
                             000000A6     7C - LOAD_FAST           'parse_float'
                             000000A9     7C - LOAD_FAST           'kw'
                             000000AC     64 - LOAD_CONST          'parse_float'
                             000000AF     3C - STORE_SUBSCR        
                             000000B0     6E - JUMP_FORWARD        -> 000000B4
                             000000B3     01 - POP_TOP             
                             000000B4     7C - LOAD_FAST           'parse_int'
                             000000B7     64 - LOAD_CONST          None
                             000000BA     6A - COMPARE_OP          "is not"
                             000000BD     6F - JUMP_IF_FALSE       -> 000000CE
                             000000C0     01 - POP_TOP             
                             000000C1     7C - LOAD_FAST           'parse_int'
                             000000C4     7C - LOAD_FAST           'kw'
                             000000C7     64 - LOAD_CONST          'parse_int'
                             000000CA     3C - STORE_SUBSCR        
                             000000CB     6E - JUMP_FORWARD        -> 000000CF
                             000000CE     01 - POP_TOP             
                             000000CF     7C - LOAD_FAST           'parse_constant'
                             000000D2     64 - LOAD_CONST          None
                             000000D5     6A - COMPARE_OP          "is not"
                             000000D8     6F - JUMP_IF_FALSE       -> 000000E9
                             000000DB     01 - POP_TOP             
                             000000DC     7C - LOAD_FAST           'parse_constant'
                             000000DF     7C - LOAD_FAST           'kw'
                             000000E2     64 - LOAD_CONST          'parse_constant'
                             000000E5     3C - STORE_SUBSCR        
                             000000E6     6E - JUMP_FORWARD        -> 000000EA
                             000000E9     01 - POP_TOP             
                             000000EA     7C - LOAD_FAST           'cls'
                             000000ED     64 - LOAD_CONST          'encoding'
                             000000F0     7C - LOAD_FAST           'encoding'
                             000000F3     7C - LOAD_FAST           'kw'
                             000000F6     8D - CALL_FUNCTION_KW    
                             000000F9     69 - LOAD_ATTR           'decode'
                             000000FC     7C - LOAD_FAST           's'
                             000000FF     83 - CALL_FUNCTION       
                             00000102     53 - RETURN_VALUE        
                         consts:
00002793                     TUPLE: (
00002798                         STR: 'Deserialize ``s`` (a ``str`` or ``u...' (DF 05 00 00 44 65 73 65 72 69 61 6C...),
00002D7C                         STR: 'object_hook' (1B 00 00 00),
00002D81                         STR: 'parse_float' (1C 00 00 00),
00002D86                         STR: 'parse_int' (1D 00 00 00),
00002D8B                         STR: 'parse_constant' (1E 00 00 00),
00002D90                         STR: 'encoding' (0C 00 00 00),
00002D95                         None (4E)
                             )
                         names:
00002D96                     TUPLE: (
00002D9B                         STR: 'None' (10 00 00 00),
00002DA0                         STR: '_default_decoder' (10 00 00 00 5F 64 65 66 61 75 6C 74...),
00002DB5                         STR: 'decode' (06 00 00 00 64 65 63 6F 64 65),
00002DC0                         STR: 'JSONDecoder' (04 00 00 00)
                             )
                         varnames:
00002DC5                     TUPLE: (
00002DCA                         STR: 's' (01 00 00 00 73),
00002DD0                         STR: 'encoding' (0C 00 00 00),
00002DD5                         STR: 'cls' (16 00 00 00),
00002DDA                         STR: 'object_hook' (1B 00 00 00),
00002DDF                         STR: 'parse_float' (1C 00 00 00),
00002DE4                         STR: 'parse_int' (1D 00 00 00),
00002DE9                         STR: 'parse_constant' (1E 00 00 00),
00002DEE                         STR: 'kw' (17 00 00 00)
                             )
                         freevars:
00002DF3                     TUPLE: ()
                         cellvars:
00002DF8                     TUPLE: ()
                         filename:
00002DFD                     STR: '/usr/targets/wyplayer-1.3.17-beta-s...' (83 00 00 00 2F 75 73 72 2F 74 61 72...)
                         name:
00002E85                     STR: 'loads' (03 00 00 00)
                         firstlineno:
00002E8A                     LONG: 265L (09 01 00 00)
                         lnotab:
00002E8E                     STR: '\x00"\'\x01\x1a\x01\x15\x01\x11\x01\r\x01\n\x01\r\x01\x0e\x01\r\x01\x0e\x01\r\x01\x0e\x01\r\x01\x0e\x01' (1E 00 00 00 00 22 27 01 1A 01 15 01...),
00002EB1             None (4E)
                 )
             names:
00002EB2         TUPLE: (
00002EB7             STR: '__doc__' (07 00 00 00 5F 5F 64 6F 63 5F 5F),
00002EC3             STR: '__version__' (0B 00 00 00 5F 5F 76 65 72 73 69 6F...),
00002ED3             STR: '__all__' (07 00 00 00 5F 5F 61 6C 6C 5F 5F),
00002EDF             STR: 'decoder' (07 00 00 00 64 65 63 6F 64 65 72),
00002EEB             STR: 'JSONDecoder' (04 00 00 00),
00002EF0             STR: 'encoder' (07 00 00 00 65 6E 63 6F 64 65 72),
00002EFC             STR: 'JSONEncoder' (05 00 00 00),
00002F01             STR: 'False' (0E 00 00 00),
00002F06             STR: 'True' (0F 00 00 00),
00002F0B             STR: 'None' (10 00 00 00),
00002F10             STR: '_default_encoder' (11 00 00 00),
00002F15             STR: 'dump' (00 00 00 00),
00002F1A             STR: 'dumps' (01 00 00 00),
00002F1F             STR: '_default_decoder' (20 00 00 00),
00002F24             STR: 'load' (02 00 00 00),
00002F29             STR: 'loads' (03 00 00 00)
                 )
             varnames:
00002F2E         TUPLE: ()
             freevars:
00002F33         TUPLE: ()
             cellvars:
00002F38         TUPLE: ()
             filename:
00002F3D         STR: '/usr/targets/wyplayer-1.3.17-beta-s...' (83 00 00 00 2F 75 73 72 2F 74 61 72...)
             name:
00002FC5         STR: '<module>' (08 00 00 00 3C 6D 6F 64 75 6C 65 3E)
             firstlineno:
00002FD2         LONG: 96L (60 00 00 00)
             lnotab:
00002FD6         STR: '\x06\x01\x06\x02\x0c\x01\x0c\x03\x10\x01\x10\x02\x06\x01\x06\x01\x06\x01\x06\x01\x06\x01\x06\x01\x06\x01\x06\x01\t\x03\t\x01\x0c\x01\x0f...' (32 00 00 00 06 01 06 02 0C 01 0C 03...)
