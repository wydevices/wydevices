# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[self.tag = tag
self.attrib = attrib
self._children = []
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb75986ac>}
nname: 0
n 0(None)[return "<Element '%s'>" % self.tag
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb759848c>}
nname: 0
n 0(None)[return iter(self._children)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb759864c>}
nname: 0
n 0(None)[self._children.append(elt)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb759872c>}
nname: 0
n 0(None)[return self.attrib.get(key, default)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb759848c>}
nname: 6
n 6(None)[__doc__ = ' Class used to mock cElementTree.Element (not pickable...) '
__slots__ = ['tag', 'attrib', '_children']
def __init__(self, tag, attrib):
	self.tag = tag
	self.attrib = attrib
	self._children = []

def __repr__(self):
	return "<Element '%s'>" % self.tag

def __iter__(self):
	return iter(self._children)

def append(self, elt):
	self._children.append(elt)

def get(self, key, default=None):
	return self.attrib.get(key, default)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb758ee4c>}
nname: 0
n 0(None)[class SerializableElement(object):
	__doc__ = ' Class used to mock cElementTree.Element (not pickable...) '
	__slots__ = ['tag', 'attrib', '_children']
	def __init__(self, tag, attrib):
		self.tag = tag
		self.attrib = attrib
		self._children = []

	def __repr__(self):
		return "<Element '%s'>" % self.tag

	def __iter__(self):
		return iter(self._children)

	def append(self, elt):
		self._children.append(elt)

	def get(self, key, default=None):
		return self.attrib.get(key, default)



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb758e70c>}
class SerializableElement(object):
	__doc__ = ' Class used to mock cElementTree.Element (not pickable...) '
	__slots__ = ['tag', 'attrib', '_children']
	def __init__(self, tag, attrib):
		self.tag = tag
		self.attrib = attrib
		self._children = []

	def __repr__(self):
		return "<Element '%s'>" % self.tag

	def __iter__(self):
		return iter(self._children)

	def append(self, elt):
		self._children.append(elt)

	def get(self, key, default=None):
		return self.attrib.get(key, default)



