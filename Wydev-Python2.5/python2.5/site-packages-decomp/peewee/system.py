# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 207
n 207(None)[log.info('System date changed')
return date_str
]:
	i: 185(), 206()
	o: 

nname: 206
n 206(None)[]:
	i: 148(f)
	o: 207()

nname: 185
n 185(None)[os.system('date -s %s' % date_str)
]:
	i: 148(t)
	o: 207()

nname: 148
n 148(write)[date_.append(year)
]:
	i: 109(), 122()
	o: 185(t), 206(f)

nname: 122
n 122(None)[]:
	i: 79(f)
	o: 148()

nname: 109
n 109(None)[]:
	i: 79(t)
	o: 148()

nname: 79
n 79(len(str(year)) == 4)[del _[1]
for date_ in (month, day, hour, min):
]:
	i: 0(AF), 48()
	o: 109(t), 122(f)

nname: 48
n 48(None)[for elt in (month, day, hour, min):
]:
	i: 0(for)
	o: 79()

nname: 0
n 0(None)[from time import mktime, ctime
]:
	i: 
	o: 48(for), 79(AF)

nname: 207
n 207(None)[log.info('System date changed')
return date_str
]:
	i: 79()
	o: 

nname: 79
n 79(None)[del _[1]
for date_ in (month, day, hour, min):
if len(str(year)) == 4:
	pass
date_.append(year)
if write:
	os.system('date -s %s' % date_str)
]:
	i: 0(AF), 48()
	o: 207()

nname: 48
n 48(None)[for elt in (month, day, hour, min):
]:
	i: 0(for)
	o: 79()

nname: 0
n 0(None)[from time import mktime, ctime
]:
	i: 
	o: 48(for), 79(AF)

nname: 79
n 79(None)[del _[1]
for date_ in (month, day, hour, min):
if len(str(year)) == 4:
	pass
date_.append(year)
if write:
	os.system('date -s %s' % date_str)
log.info('System date changed')
return date_str
]:
	i: 0(AF), 48()
	o: 

nname: 48
n 48(None)[for elt in (month, day, hour, min):
]:
	i: 0(for)
	o: 79()

nname: 0
n 0(None)[from time import mktime, ctime
]:
	i: 
	o: 48(for), 79(AF)

self.nodes: {0: <unpyclib.structure.node instance at 0xb769678c>, 79: <unpyclib.structure.node instance at 0xb769642c>, 48: <unpyclib.structure.node instance at 0xb769630c>}
nname: 87
n 87(None)[]:
	i: 48(), 67()
	o: 

nname: 67
n 67(None)[return bytes_to_human(part.f_bfree * part.f_bsize)
]:
	i: 19(), 65(AE)
	o: 87()

nname: 65
n 65(None)[]:
	i: 38(f)
	o: 67(AE)

nname: 48
n 48(None)[return _('N/A')
]:
	i: 38(t)
	o: 87()

nname: 38
n 38(<dummy_ex3> EXC_MATCH OSError)[]:
	i: 0(except)
	o: 48(t), 65(f)

nname: 19
n 19(None)[part = os.statvfs(path)
]:
	i: 0(try)
	o: 67()

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
]:
	i: 
	o: 19(try), 38(except)

nname: 87
n 87(None)[]:
	i: 48(), 67(), 38(f)
	o: 

nname: 48
n 48(None)[return _('N/A')
]:
	i: 38(t)
	o: 87()

nname: 38
n 38(<dummy_ex3> EXC_MATCH OSError)[]:
	i: 0(except)
	o: 48(t), 87(f)

nname: 67
n 67(None)[return bytes_to_human(part.f_bfree * part.f_bsize)
]:
	i: 19(), 65(AE)
	o: 87()

nname: 19
n 19(None)[part = os.statvfs(path)
]:
	i: 0(try)
	o: 67()

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
]:
	i: 
	o: 19(try), 38(except)

nname: 87
n 87(None)[]:
	i: 38()
	o: 

nname: 38
n 38(None)[except OSError:
	return _('N/A')
else:
	return bytes_to_human(part.f_bfree * part.f_bsize)
]:
	i: 0()
	o: 87()

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
try:
	part = os.statvfs(path)
]:
	i: 
	o: 38()

nname: 87
n 87(None)[]:
	i: 0()
	o: 

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
try:
	part = os.statvfs(path)
except OSError:
	return _('N/A')
else:
	return bytes_to_human(part.f_bfree * part.f_bsize)
]:
	i: 
	o: 87()

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
try:
	part = os.statvfs(path)
except OSError:
	return _('N/A')
else:
	return bytes_to_human(part.f_bfree * part.f_bsize)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7690e2c>}
nname: 87
n 87(None)[]:
	i: 48(), 67()
	o: 

nname: 67
n 67(None)[return bytes_to_human(part.f_blocks * part.f_bsize)
]:
	i: 19(), 65(AE)
	o: 87()

nname: 65
n 65(None)[]:
	i: 38(f)
	o: 67(AE)

nname: 48
n 48(None)[return _('N/A')
]:
	i: 38(t)
	o: 87()

nname: 38
n 38(<dummy_ex3> EXC_MATCH OSError)[]:
	i: 0(except)
	o: 48(t), 65(f)

nname: 19
n 19(None)[part = os.statvfs(path)
]:
	i: 0(try)
	o: 67()

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
]:
	i: 
	o: 19(try), 38(except)

nname: 87
n 87(None)[]:
	i: 48(), 67(), 38(f)
	o: 

nname: 48
n 48(None)[return _('N/A')
]:
	i: 38(t)
	o: 87()

nname: 38
n 38(<dummy_ex3> EXC_MATCH OSError)[]:
	i: 0(except)
	o: 48(t), 87(f)

nname: 67
n 67(None)[return bytes_to_human(part.f_blocks * part.f_bsize)
]:
	i: 19(), 65(AE)
	o: 87()

nname: 19
n 19(None)[part = os.statvfs(path)
]:
	i: 0(try)
	o: 67()

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
]:
	i: 
	o: 19(try), 38(except)

nname: 87
n 87(None)[]:
	i: 38()
	o: 

nname: 38
n 38(None)[except OSError:
	return _('N/A')
else:
	return bytes_to_human(part.f_blocks * part.f_bsize)
]:
	i: 0()
	o: 87()

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
try:
	part = os.statvfs(path)
]:
	i: 
	o: 38()

nname: 87
n 87(None)[]:
	i: 0()
	o: 

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
try:
	part = os.statvfs(path)
except OSError:
	return _('N/A')
else:
	return bytes_to_human(part.f_blocks * part.f_bsize)
]:
	i: 
	o: 87()

nname: 0
n 0(None)[from peewee.formatters import bytes_to_human
try:
	part = os.statvfs(path)
except OSError:
	return _('N/A')
else:
	return bytes_to_human(part.f_blocks * part.f_bsize)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7690ecc>}
nname: 0
n 0(None)[from __future__ import absolute_import
import os
from .debug import GET_LOGGER
log = GET_LOGGER('system')
def set_date(day, month, year, hour, min, write=True):
	from time import mktime, ctime

def get_free_available_space(path):
	from peewee.formatters import bytes_to_human
	try:
		part = os.statvfs(path)
	except OSError:
		return _('N/A')
	else:
		return bytes_to_human(part.f_bfree * part.f_bsize)

def get_space(path):
	from peewee.formatters import bytes_to_human
	try:
		part = os.statvfs(path)
	except OSError:
		return _('N/A')
	else:
		return bytes_to_human(part.f_blocks * part.f_bsize)

]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb769048c>}
from __future__ import absolute_import
import os
from .debug import GET_LOGGER
log = GET_LOGGER('system')
def set_date(day, month, year, hour, min, write=True):
	from time import mktime, ctime

def get_free_available_space(path):
	from peewee.formatters import bytes_to_human
	try:
		part = os.statvfs(path)
	except OSError:
		return _('N/A')
	else:
		return bytes_to_human(part.f_bfree * part.f_bsize)

def get_space(path):
	from peewee.formatters import bytes_to_human
	try:
		part = os.statvfs(path)
	except OSError:
		return _('N/A')
	else:
		return bytes_to_human(part.f_blocks * part.f_bsize)

