# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7619bcc>}
nname: 69
n 69(None)[wyrecord_global_lock.release()
return f_result
]:
	i: 13(), 42(), 67(AE)
	o: 

nname: 67
n 67(None)[]:
	i: 32(f)
	o: 69(AE)

nname: 42
n 42(None)[#, e
wyrecord_global_lock.release()
raise e
]:
	i: 32(t)
	o: 69()

nname: 32
n 32(<dummy_ex3> EXC_MATCH Exception)[]:
	i: 0(except)
	o: 42(t), 67(f)

nname: 13
n 13(None)[f_result = f(*args, **kwds)
]:
	i: 0(try)
	o: 69()

nname: 0
n 0(None)[wyrecord_global_lock.acquire()
]:
	i: 
	o: 13(try), 32(except)

nname: 32
n 32(None)[except Exception, e:
	wyrecord_global_lock.release()
	raise e
wyrecord_global_lock.release()
return f_result
]:
	i: 0()
	o: 

nname: 0
n 0(None)[wyrecord_global_lock.acquire()
try:
	f_result = f(*args, **kwds)
]:
	i: 
	o: 32()

nname: 0
n 0(None)[wyrecord_global_lock.acquire()
try:
	f_result = f(*args, **kwds)
except Exception, e:
	wyrecord_global_lock.release()
	raise e
wyrecord_global_lock.release()
return f_result
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb761fdac>}
nname: 0
n 0(None)[def manage_wyrecord_lock(*args, **args):
	wyrecord_global_lock.acquire()
	try:
		f_result = f(*args, **kwds)
	except Exception, e:
		wyrecord_global_lock.release()
		raise e
	wyrecord_global_lock.release()
	return f_result

return manage_wyrecord_lock
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7619e4c>}
nname: 6
n 6(None)[__doc__ = ' Decorator which \n    '
def __init__(self):
	pass

def __call__(self, f):
	def manage_wyrecord_lock(*args, **args):
		wyrecord_global_lock.acquire()
		try:
			f_result = f(*args, **kwds)
		except Exception, e:
			wyrecord_global_lock.release()
			raise e
		wyrecord_global_lock.release()
		return f_result

	return manage_wyrecord_lock

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb76198cc>}
nname: 0
n 0(None)[from threading import Lock
class GlobalLock(object):
	__doc__ = ' Decorator which \n    '
	def __init__(self):
		pass

	def __call__(self, f):
		def manage_wyrecord_lock(*args, **args):
			wyrecord_global_lock.acquire()
			try:
				f_result = f(*args, **kwds)
			except Exception, e:
				wyrecord_global_lock.release()
				raise e
			wyrecord_global_lock.release()
			return f_result

		return manage_wyrecord_lock



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7691fac>}
from threading import Lock
class GlobalLock(object):
	__doc__ = ' Decorator which \n    '
	def __init__(self):
		pass

	def __call__(self, f):
		def manage_wyrecord_lock(*args, **args):
			wyrecord_global_lock.acquire()
			try:
				f_result = f(*args, **kwds)
			except Exception, e:
				wyrecord_global_lock.release()
				raise e
			wyrecord_global_lock.release()
			return f_result

		return manage_wyrecord_lock



