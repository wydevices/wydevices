# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 357
n 357(None)[return 'Unknown error'
]:
	i: 348(), 356()
	o: 

nname: 356
n 356(None)[]:
	i: 336(f)
	o: 357()

nname: 348
n 348(None)[return 'Recording list is corrupted'
]:
	i: 336(t)
	o: 357()

nname: 336
n 336(nError == WYRECORD_RECORDING_LIST_CORRUPTED)[]:
	i: 327(), 335()
	o: 348(t), 356(f)

nname: 335
n 335(None)[]:
	i: 315(f)
	o: 336()

nname: 327
n 327(None)[return 'Live is recording'
]:
	i: 315(t)
	o: 336()

nname: 315
n 315(nError == WYRECORD_LIVE_IS_RECORDING)[]:
	i: 306(), 314()
	o: 327(t), 335(f)

nname: 314
n 314(None)[]:
	i: 294(f)
	o: 315()

nname: 306
n 306(None)[return 'Duration too big'
]:
	i: 294(t)
	o: 315()

nname: 294
n 294(nError == WYRECORD_DURATION_TOO_BIG)[]:
	i: 285(), 293()
	o: 306(t), 314(f)

nname: 293
n 293(None)[]:
	i: 273(f)
	o: 294()

nname: 285
n 285(None)[return 'No live available'
]:
	i: 273(t)
	o: 294()

nname: 273
n 273(nError == WYRECORD_NO_LIVE_AVAILABLE)[]:
	i: 264(), 272()
	o: 285(t), 293(f)

nname: 272
n 272(None)[]:
	i: 252(f)
	o: 273()

nname: 264
n 264(None)[return 'Bad path'
]:
	i: 252(t)
	o: 273()

nname: 252
n 252(nError == WYRECORD_BAD_PATH)[]:
	i: 243(), 251()
	o: 264(t), 272(f)

nname: 251
n 251(None)[]:
	i: 231(f)
	o: 252()

nname: 243
n 243(None)[return 'No record info available'
]:
	i: 231(t)
	o: 252()

nname: 231
n 231(nError == WYRECORD_NO_RECORD_INFO_AVAILABLE)[]:
	i: 222(), 230()
	o: 243(t), 251(f)

nname: 230
n 230(None)[]:
	i: 210(f)
	o: 231()

nname: 222
n 222(None)[return 'Can not stop live'
]:
	i: 210(t)
	o: 231()

nname: 210
n 210(nError == WYRECORD_CAN_NOT_STOP_LIVE)[]:
	i: 201(), 209()
	o: 222(t), 230(f)

nname: 209
n 209(None)[]:
	i: 189(f)
	o: 210()

nname: 201
n 201(None)[return 'Live not started'
]:
	i: 189(t)
	o: 210()

nname: 189
n 189(nError == WYRECORD_LIVE_NOT_STARTED)[]:
	i: 180(), 188()
	o: 201(t), 209(f)

nname: 188
n 188(None)[]:
	i: 168(f)
	o: 189()

nname: 180
n 180(None)[return 'Can not start live'
]:
	i: 168(t)
	o: 189()

nname: 168
n 168(nError == WYRECORD_CAN_NOT_START_LIVE)[]:
	i: 159(), 167()
	o: 180(t), 188(f)

nname: 167
n 167(None)[]:
	i: 147(f)
	o: 168()

nname: 159
n 159(None)[return 'Live already used'
]:
	i: 147(t)
	o: 168()

nname: 147
n 147(nError == WYRECORD_LIVE_ALREADY_USED)[]:
	i: 138(), 146()
	o: 159(t), 167(f)

nname: 146
n 146(None)[]:
	i: 126(f)
	o: 147()

nname: 138
n 138(None)[return 'Bad live ID'
]:
	i: 126(t)
	o: 147()

nname: 126
n 126(nError == WYRECORD_BAD_LIVE_ID)[]:
	i: 117(), 125()
	o: 138(t), 146(f)

nname: 125
n 125(None)[]:
	i: 105(f)
	o: 126()

nname: 117
n 117(None)[return 'Bad recording ID'
]:
	i: 105(t)
	o: 126()

nname: 105
n 105(nError == WYRECORD_BAD_RECORDING_ID)[]:
	i: 96(), 104()
	o: 117(t), 125(f)

nname: 104
n 104(None)[]:
	i: 84(f)
	o: 105()

nname: 96
n 96(None)[return 'Schedule conflict'
]:
	i: 84(t)
	o: 105()

nname: 84
n 84(nError == WYRECORD_SCHEDULE_CONFLICT)[]:
	i: 75(), 83()
	o: 96(t), 104(f)

nname: 83
n 83(None)[]:
	i: 63(f)
	o: 84()

nname: 75
n 75(None)[return 'No device for service'
]:
	i: 63(t)
	o: 84()

nname: 63
n 63(nError == WYRECORD_NO_DEVICE_FOR_SERVICE)[]:
	i: 54(), 62()
	o: 75(t), 83(f)

nname: 62
n 62(None)[]:
	i: 42(f)
	o: 63()

nname: 54
n 54(None)[return 'Bad service ID'
]:
	i: 42(t)
	o: 63()

nname: 42
n 42(nError == WYRECORD_BAD_SERVICE_ID)[]:
	i: 33(), 41()
	o: 54(t), 62(f)

nname: 41
n 41(None)[]:
	i: 21(f)
	o: 42()

nname: 33
n 33(None)[return 'Failed'
]:
	i: 21(t)
	o: 42()

nname: 21
n 21(nError == WYRECORD_UNKNOWN_ERROR)[]:
	i: 12(), 20()
	o: 33(t), 41(f)

nname: 20
n 20(None)[]:
	i: 0(f)
	o: 21()

nname: 12
n 12(None)[return 'SUCCESS'
]:
	i: 0(t)
	o: 21()

nname: 0
n 0(nError == WYRECORD_SUCCESS)[]:
	i: 
	o: 12(t), 20(f)

nname: 336
n 336(None)[if nError == WYRECORD_RECORDING_LIST_CORRUPTED:
	return 'Recording list is corrupted'
return 'Unknown error'
]:
	i: 294()
	o: 

nname: 294
n 294(None)[if nError == WYRECORD_DURATION_TOO_BIG:
	return 'Duration too big'
if nError == WYRECORD_LIVE_IS_RECORDING:
	return 'Live is recording'
]:
	i: 252()
	o: 336()

nname: 252
n 252(None)[if nError == WYRECORD_BAD_PATH:
	return 'Bad path'
if nError == WYRECORD_NO_LIVE_AVAILABLE:
	return 'No live available'
]:
	i: 210()
	o: 294()

nname: 210
n 210(None)[if nError == WYRECORD_CAN_NOT_STOP_LIVE:
	return 'Can not stop live'
if nError == WYRECORD_NO_RECORD_INFO_AVAILABLE:
	return 'No record info available'
]:
	i: 168()
	o: 252()

nname: 168
n 168(None)[if nError == WYRECORD_CAN_NOT_START_LIVE:
	return 'Can not start live'
if nError == WYRECORD_LIVE_NOT_STARTED:
	return 'Live not started'
]:
	i: 126()
	o: 210()

nname: 126
n 126(None)[if nError == WYRECORD_BAD_LIVE_ID:
	return 'Bad live ID'
if nError == WYRECORD_LIVE_ALREADY_USED:
	return 'Live already used'
]:
	i: 84()
	o: 168()

nname: 84
n 84(None)[if nError == WYRECORD_SCHEDULE_CONFLICT:
	return 'Schedule conflict'
if nError == WYRECORD_BAD_RECORDING_ID:
	return 'Bad recording ID'
]:
	i: 42()
	o: 126()

nname: 42
n 42(None)[if nError == WYRECORD_BAD_SERVICE_ID:
	return 'Bad service ID'
if nError == WYRECORD_NO_DEVICE_FOR_SERVICE:
	return 'No device for service'
]:
	i: 0()
	o: 84()

nname: 0
n 0(None)[if nError == WYRECORD_SUCCESS:
	return 'SUCCESS'
if nError == WYRECORD_UNKNOWN_ERROR:
	return 'Failed'
]:
	i: 
	o: 42()

nname: 336
n 336(None)[if nError == WYRECORD_RECORDING_LIST_CORRUPTED:
	return 'Recording list is corrupted'
return 'Unknown error'
]:
	i: 252()
	o: 

nname: 252
n 252(None)[if nError == WYRECORD_BAD_PATH:
	return 'Bad path'
if nError == WYRECORD_NO_LIVE_AVAILABLE:
	return 'No live available'
if nError == WYRECORD_DURATION_TOO_BIG:
	return 'Duration too big'
if nError == WYRECORD_LIVE_IS_RECORDING:
	return 'Live is recording'
]:
	i: 168()
	o: 336()

nname: 168
n 168(None)[if nError == WYRECORD_CAN_NOT_START_LIVE:
	return 'Can not start live'
if nError == WYRECORD_LIVE_NOT_STARTED:
	return 'Live not started'
if nError == WYRECORD_CAN_NOT_STOP_LIVE:
	return 'Can not stop live'
if nError == WYRECORD_NO_RECORD_INFO_AVAILABLE:
	return 'No record info available'
]:
	i: 84()
	o: 252()

nname: 84
n 84(None)[if nError == WYRECORD_SCHEDULE_CONFLICT:
	return 'Schedule conflict'
if nError == WYRECORD_BAD_RECORDING_ID:
	return 'Bad recording ID'
if nError == WYRECORD_BAD_LIVE_ID:
	return 'Bad live ID'
if nError == WYRECORD_LIVE_ALREADY_USED:
	return 'Live already used'
]:
	i: 0()
	o: 168()

nname: 0
n 0(None)[if nError == WYRECORD_SUCCESS:
	return 'SUCCESS'
if nError == WYRECORD_UNKNOWN_ERROR:
	return 'Failed'
if nError == WYRECORD_BAD_SERVICE_ID:
	return 'Bad service ID'
if nError == WYRECORD_NO_DEVICE_FOR_SERVICE:
	return 'No device for service'
]:
	i: 
	o: 84()

nname: 336
n 336(None)[if nError == WYRECORD_RECORDING_LIST_CORRUPTED:
	return 'Recording list is corrupted'
return 'Unknown error'
]:
	i: 168()
	o: 

nname: 168
n 168(None)[if nError == WYRECORD_CAN_NOT_START_LIVE:
	return 'Can not start live'
if nError == WYRECORD_LIVE_NOT_STARTED:
	return 'Live not started'
if nError == WYRECORD_CAN_NOT_STOP_LIVE:
	return 'Can not stop live'
if nError == WYRECORD_NO_RECORD_INFO_AVAILABLE:
	return 'No record info available'
if nError == WYRECORD_BAD_PATH:
	return 'Bad path'
if nError == WYRECORD_NO_LIVE_AVAILABLE:
	return 'No live available'
if nError == WYRECORD_DURATION_TOO_BIG:
	return 'Duration too big'
if nError == WYRECORD_LIVE_IS_RECORDING:
	return 'Live is recording'
]:
	i: 0()
	o: 336()

nname: 0
n 0(None)[if nError == WYRECORD_SUCCESS:
	return 'SUCCESS'
if nError == WYRECORD_UNKNOWN_ERROR:
	return 'Failed'
if nError == WYRECORD_BAD_SERVICE_ID:
	return 'Bad service ID'
if nError == WYRECORD_NO_DEVICE_FOR_SERVICE:
	return 'No device for service'
if nError == WYRECORD_SCHEDULE_CONFLICT:
	return 'Schedule conflict'
if nError == WYRECORD_BAD_RECORDING_ID:
	return 'Bad recording ID'
if nError == WYRECORD_BAD_LIVE_ID:
	return 'Bad live ID'
if nError == WYRECORD_LIVE_ALREADY_USED:
	return 'Live already used'
]:
	i: 
	o: 168()

nname: 336
n 336(None)[if nError == WYRECORD_RECORDING_LIST_CORRUPTED:
	return 'Recording list is corrupted'
return 'Unknown error'
]:
	i: 0()
	o: 

nname: 0
n 0(None)[if nError == WYRECORD_SUCCESS:
	return 'SUCCESS'
if nError == WYRECORD_UNKNOWN_ERROR:
	return 'Failed'
if nError == WYRECORD_BAD_SERVICE_ID:
	return 'Bad service ID'
if nError == WYRECORD_NO_DEVICE_FOR_SERVICE:
	return 'No device for service'
if nError == WYRECORD_SCHEDULE_CONFLICT:
	return 'Schedule conflict'
if nError == WYRECORD_BAD_RECORDING_ID:
	return 'Bad recording ID'
if nError == WYRECORD_BAD_LIVE_ID:
	return 'Bad live ID'
if nError == WYRECORD_LIVE_ALREADY_USED:
	return 'Live already used'
if nError == WYRECORD_CAN_NOT_START_LIVE:
	return 'Can not start live'
if nError == WYRECORD_LIVE_NOT_STARTED:
	return 'Live not started'
if nError == WYRECORD_CAN_NOT_STOP_LIVE:
	return 'Can not stop live'
if nError == WYRECORD_NO_RECORD_INFO_AVAILABLE:
	return 'No record info available'
if nError == WYRECORD_BAD_PATH:
	return 'Bad path'
if nError == WYRECORD_NO_LIVE_AVAILABLE:
	return 'No live available'
if nError == WYRECORD_DURATION_TOO_BIG:
	return 'Duration too big'
if nError == WYRECORD_LIVE_IS_RECORDING:
	return 'Live is recording'
]:
	i: 
	o: 336()

nname: 0
n 0(None)[if nError == WYRECORD_SUCCESS:
	return 'SUCCESS'
if nError == WYRECORD_UNKNOWN_ERROR:
	return 'Failed'
if nError == WYRECORD_BAD_SERVICE_ID:
	return 'Bad service ID'
if nError == WYRECORD_NO_DEVICE_FOR_SERVICE:
	return 'No device for service'
if nError == WYRECORD_SCHEDULE_CONFLICT:
	return 'Schedule conflict'
if nError == WYRECORD_BAD_RECORDING_ID:
	return 'Bad recording ID'
if nError == WYRECORD_BAD_LIVE_ID:
	return 'Bad live ID'
if nError == WYRECORD_LIVE_ALREADY_USED:
	return 'Live already used'
if nError == WYRECORD_CAN_NOT_START_LIVE:
	return 'Can not start live'
if nError == WYRECORD_LIVE_NOT_STARTED:
	return 'Live not started'
if nError == WYRECORD_CAN_NOT_STOP_LIVE:
	return 'Can not stop live'
if nError == WYRECORD_NO_RECORD_INFO_AVAILABLE:
	return 'No record info available'
if nError == WYRECORD_BAD_PATH:
	return 'Bad path'
if nError == WYRECORD_NO_LIVE_AVAILABLE:
	return 'No live available'
if nError == WYRECORD_DURATION_TOO_BIG:
	return 'Duration too big'
if nError == WYRECORD_LIVE_IS_RECORDING:
	return 'Live is recording'
if nError == WYRECORD_RECORDING_LIST_CORRUPTED:
	return 'Recording list is corrupted'
return 'Unknown error'
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb775baac>}
nname: 0
n 0(None)[__doc__ = '\nError codes\n'
WYRECORD_SUCCESS = 0
WYRECORD_UNKNOWN_ERROR = 1
WYRECORD_BAD_SERVICE_ID = 2
WYRECORD_NO_DEVICE_FOR_SERVICE = 3
WYRECORD_SCHEDULE_CONFLICT = 4
WYRECORD_BAD_RECORDING_ID = 5
WYRECORD_BAD_LIVE_ID = 6
WYRECORD_LIVE_ALREADY_USED = 7
WYRECORD_CAN_NOT_START_LIVE = 8
WYRECORD_LIVE_NOT_STARTED = 10
WYRECORD_CAN_NOT_STOP_LIVE = 11
WYRECORD_NO_RECORD_INFO_AVAILABLE = 12
WYRECORD_BAD_PATH = 13
WYRECORD_NO_LIVE_AVAILABLE = 18
WYRECORD_DURATION_TOO_BIG = 19
WYRECORD_LIVE_IS_RECORDING = 20
WYRECORD_RECORDING_LIST_CORRUPTED = 21
WYRECORD_NOT_ENOUGH_DISK_SPACE = 22
WYRECORD_FORCED_DEVICE_INVALID = 22
def GetErrorString(nError):
	if nError == WYRECORD_SUCCESS:
		return 'SUCCESS'
	if nError == WYRECORD_UNKNOWN_ERROR:
		return 'Failed'
	if nError == WYRECORD_BAD_SERVICE_ID:
		return 'Bad service ID'
	if nError == WYRECORD_NO_DEVICE_FOR_SERVICE:
		return 'No device for service'
	if nError == WYRECORD_SCHEDULE_CONFLICT:
		return 'Schedule conflict'
	if nError == WYRECORD_BAD_RECORDING_ID:
		return 'Bad recording ID'
	if nError == WYRECORD_BAD_LIVE_ID:
		return 'Bad live ID'
	if nError == WYRECORD_LIVE_ALREADY_USED:
		return 'Live already used'
	if nError == WYRECORD_CAN_NOT_START_LIVE:
		return 'Can not start live'
	if nError == WYRECORD_LIVE_NOT_STARTED:
		return 'Live not started'
	if nError == WYRECORD_CAN_NOT_STOP_LIVE:
		return 'Can not stop live'
	if nError == WYRECORD_NO_RECORD_INFO_AVAILABLE:
		return 'No record info available'
	if nError == WYRECORD_BAD_PATH:
		return 'Bad path'
	if nError == WYRECORD_NO_LIVE_AVAILABLE:
		return 'No live available'
	if nError == WYRECORD_DURATION_TOO_BIG:
		return 'Duration too big'
	if nError == WYRECORD_LIVE_IS_RECORDING:
		return 'Live is recording'
	if nError == WYRECORD_RECORDING_LIST_CORRUPTED:
		return 'Recording list is corrupted'
	return 'Unknown error'

]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb774356c>}
__doc__ = '\nError codes\n'
WYRECORD_SUCCESS = 0
WYRECORD_UNKNOWN_ERROR = 1
WYRECORD_BAD_SERVICE_ID = 2
WYRECORD_NO_DEVICE_FOR_SERVICE = 3
WYRECORD_SCHEDULE_CONFLICT = 4
WYRECORD_BAD_RECORDING_ID = 5
WYRECORD_BAD_LIVE_ID = 6
WYRECORD_LIVE_ALREADY_USED = 7
WYRECORD_CAN_NOT_START_LIVE = 8
WYRECORD_LIVE_NOT_STARTED = 10
WYRECORD_CAN_NOT_STOP_LIVE = 11
WYRECORD_NO_RECORD_INFO_AVAILABLE = 12
WYRECORD_BAD_PATH = 13
WYRECORD_NO_LIVE_AVAILABLE = 18
WYRECORD_DURATION_TOO_BIG = 19
WYRECORD_LIVE_IS_RECORDING = 20
WYRECORD_RECORDING_LIST_CORRUPTED = 21
WYRECORD_NOT_ENOUGH_DISK_SPACE = 22
WYRECORD_FORCED_DEVICE_INVALID = 22
def GetErrorString(nError):
	if nError == WYRECORD_SUCCESS:
		return 'SUCCESS'
	if nError == WYRECORD_UNKNOWN_ERROR:
		return 'Failed'
	if nError == WYRECORD_BAD_SERVICE_ID:
		return 'Bad service ID'
	if nError == WYRECORD_NO_DEVICE_FOR_SERVICE:
		return 'No device for service'
	if nError == WYRECORD_SCHEDULE_CONFLICT:
		return 'Schedule conflict'
	if nError == WYRECORD_BAD_RECORDING_ID:
		return 'Bad recording ID'
	if nError == WYRECORD_BAD_LIVE_ID:
		return 'Bad live ID'
	if nError == WYRECORD_LIVE_ALREADY_USED:
		return 'Live already used'
	if nError == WYRECORD_CAN_NOT_START_LIVE:
		return 'Can not start live'
	if nError == WYRECORD_LIVE_NOT_STARTED:
		return 'Live not started'
	if nError == WYRECORD_CAN_NOT_STOP_LIVE:
		return 'Can not stop live'
	if nError == WYRECORD_NO_RECORD_INFO_AVAILABLE:
		return 'No record info available'
	if nError == WYRECORD_BAD_PATH:
		return 'Bad path'
	if nError == WYRECORD_NO_LIVE_AVAILABLE:
		return 'No live available'
	if nError == WYRECORD_DURATION_TOO_BIG:
		return 'Duration too big'
	if nError == WYRECORD_LIVE_IS_RECORDING:
		return 'Live is recording'
	if nError == WYRECORD_RECORDING_LIST_CORRUPTED:
		return 'Recording list is corrupted'
	return 'Unknown error'

