# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7656e2c>}
nname: 0
n 0(None)[return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7656fac>}
nname: 0
n 0(None)[Menu.__init__(self, name='BSOD', type='bsod')
self._task = Task((lambda : None))
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb765698c>}
nname: 0
n 0(None)[Menu.show(self, hide_previous_menu)
self._task.start(loop=True, delay=1, consider_idle=False)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7656a2c>}
nname: 0
n 0(None)[self._task.stop()
Menu.hide(self)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76569ec>}
nname: 6
n 6(None)[def __init__(self):
	Menu.__init__(self, name='BSOD', type='bsod')
	self._task = Task((lambda : None))

def show(self, hide_previous_menu=True):
	Menu.show(self, hide_previous_menu)
	self._task.start(loop=True, delay=1, consider_idle=False)

def hide(self):
	self._task.stop()
	Menu.hide(self)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb765628c>}
nname: 0
n 0(None)[from .core import Menu
from peewee.notifier import Task
class BSoDMenu(Menu):
	def __init__(self):
		Menu.__init__(self, name='BSOD', type='bsod')
		self._task = Task((lambda : None))

	def show(self, hide_previous_menu=True):
		Menu.show(self, hide_previous_menu)
		self._task.start(loop=True, delay=1, consider_idle=False)

	def hide(self):
		self._task.stop()
		Menu.hide(self)



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7650c8c>}
from .core import Menu
from peewee.notifier import Task
class BSoDMenu(Menu):
	def __init__(self):
		Menu.__init__(self, name='BSOD', type='bsod')
		self._task = Task((lambda : None))

	def show(self, hide_previous_menu=True):
		Menu.show(self, hide_previous_menu)
		self._task.start(loop=True, delay=1, consider_idle=False)

	def hide(self):
		self._task.stop()
		Menu.hide(self)



