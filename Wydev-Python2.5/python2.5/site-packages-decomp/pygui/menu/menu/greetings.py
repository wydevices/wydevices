# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[return ''
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76ab50c>}
nname: 0
n 0(None)[return self._next_item()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76ab58c>}
nname: 150
n 150(None)[def self.eventhandler.event_down(ev):
	return self._next_item()

Task(self._next_item).start(0.29999999999999999)
]:
	i: 27(AL), 149()
	o: 

nname: 149
n 149(None)[]:
	i: 107(AF), 120()
	o: 150()

nname: 120
n 120(None)[for evt in 'wheel_rwd wheel_fwd left right up down select toggle_menu action_menu record stop info marker'.split():
setattr(self.eventhandler, 'event_' + evt, default_evt)
]:
	i: 107(for)
	o: 149()

nname: 107
n 107(None)[]:
	i: 27(loop)
	o: 120(for), 149(AF)

nname: 27
n 27(None)[filename = kw.pop('filename')
self.fd = file(filename)
Menu.__init__(self, *args, **kw)
def self._getitems_keywords['full_text']():
	return ''

default_evt = self.eventhandler.event_home
]:
	i: 12(), 26()
	o: 107(loop), 150(AL)

nname: 26
n 26(None)[]:
	i: 0(f)
	o: 27()

nname: 12
n 12(None)[kw['type'] = 'scroller'
]:
	i: 0(t)
	o: 27()

nname: 0
n 0('type' not in kw)[]:
	i: 
	o: 12(t), 26(f)

nname: 149
n 149(None)[def self.eventhandler.event_down(ev):
	return self._next_item()

Task(self._next_item).start(0.29999999999999999)
]:
	i: 107()
	o: 

nname: 107
n 107(None)[for evt in 'wheel_rwd wheel_fwd left right up down select toggle_menu action_menu record stop info marker'.split():
	setattr(self.eventhandler, 'event_' + evt, default_evt)
]:
	i: 0(loop)
	o: 149()

nname: 0
n 0(None)[if 'type' not in kw:
	kw['type'] = 'scroller'
filename = kw.pop('filename')
self.fd = file(filename)
Menu.__init__(self, *args, **kw)
def self._getitems_keywords['full_text']():
	return ''

default_evt = self.eventhandler.event_home
]:
	i: 
	o: 107(loop)

nname: 149
n 149(None)[def self.eventhandler.event_down(ev):
	return self._next_item()

Task(self._next_item).start(0.29999999999999999)
]:
	i: 0()
	o: 

nname: 0
n 0(None)[if 'type' not in kw:
	kw['type'] = 'scroller'
filename = kw.pop('filename')
self.fd = file(filename)
Menu.__init__(self, *args, **kw)
def self._getitems_keywords['full_text']():
	return ''

default_evt = self.eventhandler.event_home
for evt in 'wheel_rwd wheel_fwd left right up down select toggle_menu action_menu record stop info marker'.split():
	setattr(self.eventhandler, 'event_' + evt, default_evt)
]:
	i: 
	o: 149()

nname: 0
n 0(None)[if 'type' not in kw:
	kw['type'] = 'scroller'
filename = kw.pop('filename')
self.fd = file(filename)
Menu.__init__(self, *args, **kw)
def self._getitems_keywords['full_text']():
	return ''

default_evt = self.eventhandler.event_home
for evt in 'wheel_rwd wheel_fwd left right up down select toggle_menu action_menu record stop info marker'.split():
	setattr(self.eventhandler, 'event_' + evt, default_evt)
def self.eventhandler.event_down(ev):
	return self._next_item()

Task(self._next_item).start(0.29999999999999999)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76a9c0c>}
nname: 0
n 0(None)[self.fd.close()
Menu.stop(self)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76a6ecc>}
nname: 198
n 198(None)[return None
]:
	i: 149(), 163()
	o: 

nname: 163
n 163(None)[Task(send, 'full_text', sender=self, value=txt).start(1)
]:
	i: 128(t)
	o: 198()

nname: 149
n 149(None)[self.hide()
]:
	i: 128(f)
	o: 198()

nname: 128
n 128(txt)[txt = ''.join(vals)
]:
	i: 100(), 104(), 127(AE)
	o: 149(f), 163(t)

nname: 104
n 104(None)[PRINT_EXCEPTION()
self.hide()
]:
	i: 0(except)
	o: 128()

nname: 100
n 100(None)[]:
	i: 31(AL), 98()
	o: 128()

nname: 98
n 98(None)[]:
	i: 34(f), 82()
	o: 100()

nname: 82
n 82(None)[vals.append(l)
]:
	i: 76(), 81()
	o: 98()

nname: 81
n 81(None)[]:
	i: 40&63(f)
	o: 82()

nname: 76
n 76(None)[break
]:
	i: 40&63(t)
	o: 82()

nname: 40&63
n 40&63(not l or l == '\\n\n')[l = self.fd.readline()
]:
	i: 34(t)
	o: 76(t), 81(f)

nname: 34
n 34(True)[]:
	i: 31(loop)
	o: 40&63(t), 98(f)

nname: 31
n 31(None)[]:
	i: 0(try)
	o: 34(loop), 100(AL)

nname: 0
n 0(None)[send('on_scroll', sender=self)
vals = []
l = None
]:
	i: 
	o: 31(try), 104(except)

nname: 128
n 128(None)[txt = ''.join(vals)
if not txt:
	self.hide()
else:
	Task(send, 'full_text', sender=self, value=txt).start(1)
return None
]:
	i: 104(), 0(AL), 34(f), 40&63()
	o: 

nname: 104
n 104(None)[except:
	PRINT_EXCEPTION()
	self.hide()
]:
	i: 0()
	o: 128()

nname: 128
n 128(None)[txt = ''.join(vals)
if not txt:
	self.hide()
else:
	Task(send, 'full_text', sender=self, value=txt).start(1)
return None
]:
	i: 104(), 0(AL), 34(f), 40&63()
	o: 

nname: 40&63
n 40&63(None)[l = self.fd.readline()
if not l or l == '\\n\n':
	break
vals.append(l)
]:
	i: 34(t)
	o: 128()

nname: 34
n 34(True)[]:
	i: 0(loop)
	o: 40&63(t), 128(f)

nname: 0
n 0(None)[send('on_scroll', sender=self)
vals = []
l = None
try:
]:
	i: 
	o: 34(loop), 128(AL), 104()

self.nodes: {0: <unpyclib.structure.node instance at 0xb76a9bec>, 128: <unpyclib.structure.node instance at 0xb76a98ac>, 34: <unpyclib.structure.node instance at 0xb76a9bcc>, '40&63': <unpyclib.structure.node instance at 0xb76a9cac>, 104: <unpyclib.structure.node instance at 0xb76a97ec>}
nname: 6
n 6(None)[def __init__(self, *args, **args):
	if 'type' not in kw:
		kw['type'] = 'scroller'
	filename = kw.pop('filename')
	self.fd = file(filename)
	Menu.__init__(self, *args, **kw)
	def self._getitems_keywords['full_text']():
		return ''

	default_evt = self.eventhandler.event_home
	for evt in 'wheel_rwd wheel_fwd left right up down select toggle_menu action_menu record stop info marker'.split():
		setattr(self.eventhandler, 'event_' + evt, default_evt)
	def self.eventhandler.event_down(ev):
		return self._next_item()

	Task(self._next_item).start(0.29999999999999999)

def stop(self):
	self.fd.close()
	Menu.stop(self)

def _next_item(self):
	send('on_scroll', sender=self)
	vals = []
	l = None
	try:

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb76a686c>}
nname: 0
n 0(None)[from itertools import count
from .core import Menu
from peewee.messages import send
from peewee.notifier import Task
from peewee.debug import PRINT_EXCEPTION
class LicenseMenu(Menu):
	def __init__(self, *args, **args):
		if 'type' not in kw:
			kw['type'] = 'scroller'
		filename = kw.pop('filename')
		self.fd = file(filename)
		Menu.__init__(self, *args, **kw)
		def self._getitems_keywords['full_text']():
			return ''

		default_evt = self.eventhandler.event_home
		for evt in 'wheel_rwd wheel_fwd left right up down select toggle_menu action_menu record stop info marker'.split():
			setattr(self.eventhandler, 'event_' + evt, default_evt)
		def self.eventhandler.event_down(ev):
			return self._next_item()

		Task(self._next_item).start(0.29999999999999999)

	def stop(self):
		self.fd.close()
		Menu.stop(self)

	def _next_item(self):
		send('on_scroll', sender=self)
		vals = []
		l = None
		try:



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb769cd8c>}
from itertools import count
from .core import Menu
from peewee.messages import send
from peewee.notifier import Task
from peewee.debug import PRINT_EXCEPTION
class LicenseMenu(Menu):
	def __init__(self, *args, **args):
		if 'type' not in kw:
			kw['type'] = 'scroller'
		filename = kw.pop('filename')
		self.fd = file(filename)
		Menu.__init__(self, *args, **kw)
		def self._getitems_keywords['full_text']():
			return ''

		default_evt = self.eventhandler.event_home
		for evt in 'wheel_rwd wheel_fwd left right up down select toggle_menu action_menu record stop info marker'.split():
			setattr(self.eventhandler, 'event_' + evt, default_evt)
		def self.eventhandler.event_down(ev):
			return self._next_item()

		Task(self._next_item).start(0.29999999999999999)

	def stop(self):
		self.fd.close()
		Menu.stop(self)

	def _next_item(self):
		send('on_scroll', sender=self)
		vals = []
		l = None
		try:



