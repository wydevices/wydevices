# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[Window.__init__(self)
self.title = title
self.description = description
self.total = ''
self.elapsed = ''
self.remaining = ''
self._cancel_fn = None
self.eventhandler = CancelOnlyEventHandler(self)
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb774e6ec>}
nname: 0
n 0(None)[self._cancel_fn = fn
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb774afcc>}
nname: 0
n 0(None)[return self._progress
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb774af4c>}
nname: 6
n 6(None)[__doc__ = '\n    A simple window showing a progressbar and misc infos, can be canceled.\n    '
type = 'progress'
_progress = 0
def __init__(self, title='Progress status', description=''):
	Window.__init__(self)
	self.title = title
	self.description = description
	self.total = ''
	self.elapsed = ''
	self.remaining = ''
	self._cancel_fn = None
	self.eventhandler = CancelOnlyEventHandler(self)
	return None

def set_cancel(self, fn):
	self._cancel_fn = fn

def _get_progress(self):
	return self._progress

_set_progress = gui_updater()
progress = property(_get_progress, _set_progress)
del _get_progress
del _set_progress
]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb774ac8c>}
nname: 0
n 0(None)[ProgressWindow.__init__(self, *args, **kw)
self.eventhandler = NoHomeEventHandler(self)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb774aa8c>}
nname: 6
n 6(None)[__doc__ = '\n    A progress window with custom eventhandler to avoid some\n    operations during progress (home key)\n    '
def __init__(self, *args, **args):
	ProgressWindow.__init__(self, *args, **kw)
	self.eventhandler = NoHomeEventHandler(self)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb774a5ec>}
nname: 0
n 0(None)[from __future__ import absolute_import
__all__ = ['ProgressWindow', 'NoHomeProgressWindow']
from .core import Window, gui_updater
from pygui.eventmanager.windows import CancelOnlyEventHandler, NoHomeEventHandler
class ProgressWindow(Window):
	__doc__ = '\n    A simple window showing a progressbar and misc infos, can be canceled.\n    '
	type = 'progress'
	_progress = 0
	def __init__(self, title='Progress status', description=''):
		Window.__init__(self)
		self.title = title
		self.description = description
		self.total = ''
		self.elapsed = ''
		self.remaining = ''
		self._cancel_fn = None
		self.eventhandler = CancelOnlyEventHandler(self)
		return None

	def set_cancel(self, fn):
		self._cancel_fn = fn

	def _get_progress(self):
		return self._progress

	_set_progress = gui_updater()
	progress = property(_get_progress, _set_progress)
	del _get_progress
	del _set_progress


class NoHomeProgressWindow(ProgressWindow):
	__doc__ = '\n    A progress window with custom eventhandler to avoid some\n    operations during progress (home key)\n    '
	def __init__(self, *args, **args):
		ProgressWindow.__init__(self, *args, **kw)
		self.eventhandler = NoHomeEventHandler(self)



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7742aec>}
from __future__ import absolute_import
__all__ = ['ProgressWindow', 'NoHomeProgressWindow']
from .core import Window, gui_updater
from pygui.eventmanager.windows import CancelOnlyEventHandler, NoHomeEventHandler
class ProgressWindow(Window):
	__doc__ = '\n    A simple window showing a progressbar and misc infos, can be canceled.\n    '
	type = 'progress'
	_progress = 0
	def __init__(self, title='Progress status', description=''):
		Window.__init__(self)
		self.title = title
		self.description = description
		self.total = ''
		self.elapsed = ''
		self.remaining = ''
		self._cancel_fn = None
		self.eventhandler = CancelOnlyEventHandler(self)
		return None

	def set_cancel(self, fn):
		self._cancel_fn = fn

	def _get_progress(self):
		return self._progress

	_set_progress = gui_updater()
	progress = property(_get_progress, _set_progress)
	del _get_progress
	del _set_progress


class NoHomeProgressWindow(ProgressWindow):
	__doc__ = '\n    A progress window with custom eventhandler to avoid some\n    operations during progress (home key)\n    '
	def __init__(self, *args, **args):
		ProgressWindow.__init__(self, *args, **kw)
		self.eventhandler = NoHomeEventHandler(self)



