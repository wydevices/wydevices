# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[from pygui.menu.menu import ActionMenu
context = dict(menu=self.player, parent=None)
ActionMenu(context, category='webbrowser', type_='playeraction', universe=self.player.universe).show()
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7604cac>}
nname: 0
n 0(None)[self.player.browse_action('up')
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7604a6c>}
nname: 0
n 0(None)[self.player.browse_action('down')
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7604a8c>}
nname: 0
n 0(None)[self.player.browse_action('left')
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76049ac>}
nname: 0
n 0(None)[self.player.browse_action('right')
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7604acc>}
nname: 0
n 0(None)[kbd = SilentKeyboardWindow(insert_char_action=self.player.insert_char)
kbd.show()
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7604aac>}
nname: 0
n 0(None)[self.player.browse_action('previous')
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7604b2c>}
nname: 0
n 0(None)[self.player.browse_action('next')
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7604a4c>}
nname: 0
n 0(None)[self.player.browse_action('click')
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7604b0c>}
nname: 6
n 6(None)[def event_action_menu(self, event):
	from pygui.menu.menu import ActionMenu
	context = dict(menu=self.player, parent=None)
	ActionMenu(context, category='webbrowser', type_='playeraction', universe=self.player.universe).show()
	return True

def event_up(self, event):
	self.player.browse_action('up')
	return True

def event_down(self, event):
	self.player.browse_action('down')
	return True

def event_left(self, event):
	self.player.browse_action('left')
	return True

def event_right(self, event):
	self.player.browse_action('right')
	return True

def event_toggle_menu(self, event):
	kbd = SilentKeyboardWindow(insert_char_action=self.player.insert_char)
	kbd.show()
	return True

def event_wheel_rwd(self, event):
	self.player.browse_action('previous')
	return True

def event_wheel_fwd(self, event):
	self.player.browse_action('next')
	return True

def event_select(self, event):
	self.player.browse_action('click')
	return True

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb760466c>}
nname: 0
n 0(None)[from __future__ import absolute_import
from .core import GenericPlayerEventHandler
from pygui.window import SilentKeyboardWindow
class WebBrowserEventHandler(GenericPlayerEventHandler):
	def event_action_menu(self, event):
		from pygui.menu.menu import ActionMenu
		context = dict(menu=self.player, parent=None)
		ActionMenu(context, category='webbrowser', type_='playeraction', universe=self.player.universe).show()
		return True

	def event_up(self, event):
		self.player.browse_action('up')
		return True

	def event_down(self, event):
		self.player.browse_action('down')
		return True

	def event_left(self, event):
		self.player.browse_action('left')
		return True

	def event_right(self, event):
		self.player.browse_action('right')
		return True

	def event_toggle_menu(self, event):
		kbd = SilentKeyboardWindow(insert_char_action=self.player.insert_char)
		kbd.show()
		return True

	def event_wheel_rwd(self, event):
		self.player.browse_action('previous')
		return True

	def event_wheel_fwd(self, event):
		self.player.browse_action('next')
		return True

	def event_select(self, event):
		self.player.browse_action('click')
		return True



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb75feaec>}
from __future__ import absolute_import
from .core import GenericPlayerEventHandler
from pygui.window import SilentKeyboardWindow
class WebBrowserEventHandler(GenericPlayerEventHandler):
	def event_action_menu(self, event):
		from pygui.menu.menu import ActionMenu
		context = dict(menu=self.player, parent=None)
		ActionMenu(context, category='webbrowser', type_='playeraction', universe=self.player.universe).show()
		return True

	def event_up(self, event):
		self.player.browse_action('up')
		return True

	def event_down(self, event):
		self.player.browse_action('down')
		return True

	def event_left(self, event):
		self.player.browse_action('left')
		return True

	def event_right(self, event):
		self.player.browse_action('right')
		return True

	def event_toggle_menu(self, event):
		kbd = SilentKeyboardWindow(insert_char_action=self.player.insert_char)
		kbd.show()
		return True

	def event_wheel_rwd(self, event):
		self.player.browse_action('previous')
		return True

	def event_wheel_fwd(self, event):
		self.player.browse_action('next')
		return True

	def event_select(self, event):
		self.player.browse_action('click')
		return True



