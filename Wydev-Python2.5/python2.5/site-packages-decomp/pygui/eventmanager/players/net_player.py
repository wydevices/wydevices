# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[self.player._error_spawner()
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76cccec>}
nname: 0
n 0(None)[self.player.action_play_pause()
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76ccf4c>}
nname: 0
n 0(None)[self.player.scroll_description(event.arg['count'])
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76ccfec>}
nname: 0
n 0(None)[self.player.scroll_description(-event.arg['count'])
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76cce4c>}
nname: 0
n 0(None)[return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76ccacc>}
nname: 0
n 0(None)[return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76ccd4c>}
nname: 0
n 0(None)[self.player.select(-event.arg['count'])
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76ccdac>}
nname: 0
n 0(None)[self.player.select(event.arg['count'])
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76ccd6c>}
nname: 6
n 6(None)[def event_DEFAULT(self, event):
	self.player._error_spawner()
	return True

def event_select(self, event):
	self.player.action_play_pause()
	return True

def event_wheel_fwd(self, event):
	self.player.scroll_description(event.arg['count'])
	return True

def event_wheel_rwd(self, event):
	self.player.scroll_description(-event.arg['count'])
	return True

def event_right(self, event):
	return True

def event_left(self, event):
	return True

def event_up(self, event):
	self.player.select(-event.arg['count'])
	return True

def event_down(self, event):
	self.player.select(event.arg['count'])
	return True

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb76cc8ac>}
nname: 0
n 0(None)[from __future__ import absolute_import
from pygui.eventmanager.players import GenericPlayerEventHandler
from pygui.shared import pygui_globs
class NetPlayerEventHandler(GenericPlayerEventHandler):
	def event_DEFAULT(self, event):
		self.player._error_spawner()
		return True

	def event_select(self, event):
		self.player.action_play_pause()
		return True

	def event_wheel_fwd(self, event):
		self.player.scroll_description(event.arg['count'])
		return True

	def event_wheel_rwd(self, event):
		self.player.scroll_description(-event.arg['count'])
		return True

	def event_right(self, event):
		return True

	def event_left(self, event):
		return True

	def event_up(self, event):
		self.player.select(-event.arg['count'])
		return True

	def event_down(self, event):
		self.player.select(event.arg['count'])
		return True



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76c4dac>}
from __future__ import absolute_import
from pygui.eventmanager.players import GenericPlayerEventHandler
from pygui.shared import pygui_globs
class NetPlayerEventHandler(GenericPlayerEventHandler):
	def event_DEFAULT(self, event):
		self.player._error_spawner()
		return True

	def event_select(self, event):
		self.player.action_play_pause()
		return True

	def event_wheel_fwd(self, event):
		self.player.scroll_description(event.arg['count'])
		return True

	def event_wheel_rwd(self, event):
		self.player.scroll_description(-event.arg['count'])
		return True

	def event_right(self, event):
		return True

	def event_left(self, event):
		return True

	def event_up(self, event):
		self.player.select(-event.arg['count'])
		return True

	def event_down(self, event):
		self.player.select(event.arg['count'])
		return True



