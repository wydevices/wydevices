# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 50
n 50(None)[self.player._update_marker()
return True
]:
	i: 31(), 49()
	o: 

nname: 49
n 49(None)[]:
	i: 0(t)
	o: 50()

nname: 31
n 31(None)[pygui_globs['menustack'].back_one_menu()
]:
	i: 0(f)
	o: 50()

nname: 0
n 0(bool(self.player.markerlist))[self.player.unmark_selected()
]:
	i: 
	o: 31(f), 49(t)

nname: 0
n 0(None)[self.player.unmark_selected()
if not bool(self.player.markerlist):
	pygui_globs['menustack'].back_one_menu()
self.player._update_marker()
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb763b50c>}
nname: 0
n 0(None)[pygui_globs['menustack'].back_one_menu()
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb763b2cc>}
nname: 33
n 33(None)[return True
]:
	i: 12(), 32()
	o: 

nname: 32
n 32(None)[]:
	i: 0(f)
	o: 33()

nname: 12
n 12(None)[return NavigatorEventHandler.event_left(self, event)
]:
	i: 0(t)
	o: 33()

nname: 0
n 0(self.player._history)[]:
	i: 
	o: 12(t), 32(f)

nname: 0
n 0(None)[if self.player._history:
	return NavigatorEventHandler.event_left(self, event)
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb763b24c>}
nname: 6
n 6(None)[def event_marker(self, event):
	self.player.unmark_selected()
	if not bool(self.player.markerlist):
		pygui_globs['menustack'].back_one_menu()
	self.player._update_marker()
	return True

def event_action_menu(self, event):
	pygui_globs['menustack'].back_one_menu()
	return True

def event_left(self, event):
	if self.player._history:
		return NavigatorEventHandler.event_left(self, event)
	return True

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb7634d6c>}
nname: 0
n 0(None)[from __future__ import absolute_import
from .navigator_menu import NavigatorEventHandler
from pygui.shared import pygui_globs
class MarkerListEventHandler(NavigatorEventHandler):
	def event_marker(self, event):
		self.player.unmark_selected()
		if not bool(self.player.markerlist):
			pygui_globs['menustack'].back_one_menu()
		self.player._update_marker()
		return True

	def event_action_menu(self, event):
		pygui_globs['menustack'].back_one_menu()
		return True

	def event_left(self, event):
		if self.player._history:
			return NavigatorEventHandler.event_left(self, event)
		return True



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb763478c>}
from __future__ import absolute_import
from .navigator_menu import NavigatorEventHandler
from pygui.shared import pygui_globs
class MarkerListEventHandler(NavigatorEventHandler):
	def event_marker(self, event):
		self.player.unmark_selected()
		if not bool(self.player.markerlist):
			pygui_globs['menustack'].back_one_menu()
		self.player._update_marker()
		return True

	def event_action_menu(self, event):
		pygui_globs['menustack'].back_one_menu()
		return True

	def event_left(self, event):
		if self.player._history:
			return NavigatorEventHandler.event_left(self, event)
		return True



