# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[self.player.focus_next()
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb75b752c>}
nname: 0
n 0(None)[self.player.focus_previous()
return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb75b778c>}
nname: 60
n 60(None)[return None
]:
	i: 3(), 39(), 58(AE)
	o: 

nname: 58
n 58(None)[]:
	i: 29(f)
	o: 60(AE)

nname: 39
n 39(None)[#, e
PRINT_EXCEPTION(e)
]:
	i: 29(t)
	o: 60()

nname: 29
n 29(<dummy_ex3> EXC_MATCH Exception)[]:
	i: 0(except)
	o: 39(t), 58(f)

nname: 3
n 3(None)[return MenuEventHandler.event_select(self, event, list_name=None)
]:
	i: 0(try)
	o: 60()

nname: 0
n 0(None)[]:
	i: 
	o: 3(try), 29(except)

nname: 29
n 29(None)[except Exception, e:
	PRINT_EXCEPTION(e)
return None
]:
	i: 0()
	o: 

nname: 0
n 0(None)[try:
	return MenuEventHandler.event_select(self, event, list_name=None)
]:
	i: 
	o: 29()

nname: 0
n 0(None)[try:
	return MenuEventHandler.event_select(self, event, list_name=None)
except Exception, e:
	PRINT_EXCEPTION(e)
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb75b7eec>}
nname: 77
n 77(None)[return True
]:
	i: 54(), 76()
	o: 

nname: 76
n 76(None)[]:
	i: 0&38(f)
	o: 77()

nname: 54
n 54(None)[player.paused = player.paused_hand_status
del player.paused_hand_status
]:
	i: 0&38(t)
	o: 77()

nname: 0&38
n 0&38(player and hasattr(player, 'paused_hand_status'))[ms = pygui_globs['menustack']
ms.back_one_menu()
player = ms.get_player()
]:
	i: 
	o: 54(t), 76(f)

nname: 0&38
n 0&38(None)[ms = pygui_globs['menustack']
ms.back_one_menu()
player = ms.get_player()
if player and hasattr(player, 'paused_hand_status'):
	player.paused = player.paused_hand_status
	del player.paused_hand_status
return True
]:
	i: 
	o: 

self.nodes: {'0&38': <unpyclib.structure.node instance at 0xb75b7b6c>}
nname: 0
n 0(None)[return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb75b730c>}
nname: 6
n 6(None)[def event_right(self, event):
	self.player.focus_next()
	return True

def event_left(self, event):
	self.player.focus_previous()
	return True

def event_select(self, event):
	try:
		return MenuEventHandler.event_select(self, event, list_name=None)
	except Exception, e:
		PRINT_EXCEPTION(e)
	return None

def event_action_menu(self, event):
	ms = pygui_globs['menustack']
	ms.back_one_menu()
	player = ms.get_player()
	if player and hasattr(player, 'paused_hand_status'):
		player.paused = player.paused_hand_status
		del player.paused_hand_status
	return True

def event_toggle_menu(self, event):
	return True

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb75b1f0c>}
nname: 0
n 0(None)[from __future__ import absolute_import
from .core import MenuEventHandler
from pygui.eventmanager import EventDispatcher
from peewee.debug import PRINT_EXCEPTION
from pygui.shared import pygui_globs
class ActionMenuEventHandler(MenuEventHandler):
	def event_right(self, event):
		self.player.focus_next()
		return True

	def event_left(self, event):
		self.player.focus_previous()
		return True

	def event_select(self, event):
		try:
			return MenuEventHandler.event_select(self, event, list_name=None)
		except Exception, e:
			PRINT_EXCEPTION(e)
		return None

	def event_action_menu(self, event):
		ms = pygui_globs['menustack']
		ms.back_one_menu()
		player = ms.get_player()
		if player and hasattr(player, 'paused_hand_status'):
			player.paused = player.paused_hand_status
			del player.paused_hand_status
		return True

	def event_toggle_menu(self, event):
		return True



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb75b17ec>}
from __future__ import absolute_import
from .core import MenuEventHandler
from pygui.eventmanager import EventDispatcher
from peewee.debug import PRINT_EXCEPTION
from pygui.shared import pygui_globs
class ActionMenuEventHandler(MenuEventHandler):
	def event_right(self, event):
		self.player.focus_next()
		return True

	def event_left(self, event):
		self.player.focus_previous()
		return True

	def event_select(self, event):
		try:
			return MenuEventHandler.event_select(self, event, list_name=None)
		except Exception, e:
			PRINT_EXCEPTION(e)
		return None

	def event_action_menu(self, event):
		ms = pygui_globs['menustack']
		ms.back_one_menu()
		player = ms.get_player()
		if player and hasattr(player, 'paused_hand_status'):
			player.paused = player.paused_hand_status
			del player.paused_hand_status
		return True

	def event_toggle_menu(self, event):
		return True



