# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[return ConnectionSetupItem(name=_('Sound/Image'), type_='connectionsetupitem', display_type='setup_connection', menu=menu)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb775bb4c>}
nname: 0
n 0(None)[return [HdmiOutSetupItem(name='HDMI/YUV output resolution', menu=self.menu, domain='connections', key='resolution', choices_list=sorted(hdmiresolution_dict, reverse=True)), CompositeOutSetupItem(name='Composite output', menu=self.menu, domain='connections', key='composite_output', choices_list=sorted(COMPOSITE_OUT, reverse=True)), HdmiSoundSetupItem(name='HDMI Sound', menu=self.menu, domain='connections', key='hdmi_sound', choices_list=sorted(HDMI_BOOL_OPTIONS, reverse=False)), AutoFrameRateSetupItem(name='Automatic Framerate', menu=self.menu, domain='connections', key='auto_frame_rate', choices_list=(True, False)), SpdifSurroundSetupItem(name='SPDIF Sound', menu=self.menu, domain='connections', key='spdif_surround', choices_list=sorted(SPDIF_SURROUND, reverse=True)), AspectRatioParametersSetupItem(name='Aspect Ratio', menu=self.menu, domain='video', key='aspect_ratio', choices_list=HMI_VIDEO['aspect_ratio'])]
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7760c8c>}
nname: 0
n 0(None)[self._name = _('Sound/Image')
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb776014c>}
nname: 6
n 6(None)[__doc__ = 'Root of the "Sound/Image Setup" submenu.'
def browse(self):
	return [HdmiOutSetupItem(name='HDMI/YUV output resolution', menu=self.menu, domain='connections', key='resolution', choices_list=sorted(hdmiresolution_dict, reverse=True)), CompositeOutSetupItem(name='Composite output', menu=self.menu, domain='connections', key='composite_output', choices_list=sorted(COMPOSITE_OUT, reverse=True)), HdmiSoundSetupItem(name='HDMI Sound', menu=self.menu, domain='connections', key='hdmi_sound', choices_list=sorted(HDMI_BOOL_OPTIONS, reverse=False)), AutoFrameRateSetupItem(name='Automatic Framerate', menu=self.menu, domain='connections', key='auto_frame_rate', choices_list=(True, False)), SpdifSurroundSetupItem(name='SPDIF Sound', menu=self.menu, domain='connections', key='spdif_surround', choices_list=sorted(SPDIF_SURROUND, reverse=True)), AspectRatioParametersSetupItem(name='Aspect Ratio', menu=self.menu, domain='video', key='aspect_ratio', choices_list=HMI_VIDEO['aspect_ratio'])]

def update_name(self):
	self._name = _('Sound/Image')

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb775be0c>}
nname: 0
n 0(None)[from __future__ import absolute_import
from pygui.config import user_config, HMI_VIDEO
from ...containers import GenericContainer
from pygui.facilities.codemapping import hdmiresolution_dict
from .connectionsetup import HdmiSoundSetupItem, SpdifSurroundSetupItem, AutoFrameRateSetupItem, CompositeOutSetupItem, HdmiOutSetupItem
from .connectionsetup import HDMI_BOOL_OPTIONS, SPDIF_SURROUND, COMPOSITE_OUT
from ..videophoto.video import AspectRatioParametersSetupItem
def getitem(menu):
	return ConnectionSetupItem(name=_('Sound/Image'), type_='connectionsetupitem', display_type='setup_connection', menu=menu)

class ConnectionSetupItem(GenericContainer):
	__doc__ = 'Root of the "Sound/Image Setup" submenu.'
	def browse(self):
		return [HdmiOutSetupItem(name='HDMI/YUV output resolution', menu=self.menu, domain='connections', key='resolution', choices_list=sorted(hdmiresolution_dict, reverse=True)), CompositeOutSetupItem(name='Composite output', menu=self.menu, domain='connections', key='composite_output', choices_list=sorted(COMPOSITE_OUT, reverse=True)), HdmiSoundSetupItem(name='HDMI Sound', menu=self.menu, domain='connections', key='hdmi_sound', choices_list=sorted(HDMI_BOOL_OPTIONS, reverse=False)), AutoFrameRateSetupItem(name='Automatic Framerate', menu=self.menu, domain='connections', key='auto_frame_rate', choices_list=(True, False)), SpdifSurroundSetupItem(name='SPDIF Sound', menu=self.menu, domain='connections', key='spdif_surround', choices_list=sorted(SPDIF_SURROUND, reverse=True)), AspectRatioParametersSetupItem(name='Aspect Ratio', menu=self.menu, domain='video', key='aspect_ratio', choices_list=HMI_VIDEO['aspect_ratio'])]

	def update_name(self):
		self._name = _('Sound/Image')



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7754d2c>}
from __future__ import absolute_import
from pygui.config import user_config, HMI_VIDEO
from ...containers import GenericContainer
from pygui.facilities.codemapping import hdmiresolution_dict
from .connectionsetup import HdmiSoundSetupItem, SpdifSurroundSetupItem, AutoFrameRateSetupItem, CompositeOutSetupItem, HdmiOutSetupItem
from .connectionsetup import HDMI_BOOL_OPTIONS, SPDIF_SURROUND, COMPOSITE_OUT
from ..videophoto.video import AspectRatioParametersSetupItem
def getitem(menu):
	return ConnectionSetupItem(name=_('Sound/Image'), type_='connectionsetupitem', display_type='setup_connection', menu=menu)

class ConnectionSetupItem(GenericContainer):
	__doc__ = 'Root of the "Sound/Image Setup" submenu.'
	def browse(self):
		return [HdmiOutSetupItem(name='HDMI/YUV output resolution', menu=self.menu, domain='connections', key='resolution', choices_list=sorted(hdmiresolution_dict, reverse=True)), CompositeOutSetupItem(name='Composite output', menu=self.menu, domain='connections', key='composite_output', choices_list=sorted(COMPOSITE_OUT, reverse=True)), HdmiSoundSetupItem(name='HDMI Sound', menu=self.menu, domain='connections', key='hdmi_sound', choices_list=sorted(HDMI_BOOL_OPTIONS, reverse=False)), AutoFrameRateSetupItem(name='Automatic Framerate', menu=self.menu, domain='connections', key='auto_frame_rate', choices_list=(True, False)), SpdifSurroundSetupItem(name='SPDIF Sound', menu=self.menu, domain='connections', key='spdif_surround', choices_list=sorted(SPDIF_SURROUND, reverse=True)), AspectRatioParametersSetupItem(name='Aspect Ratio', menu=self.menu, domain='video', key='aspect_ratio', choices_list=HMI_VIDEO['aspect_ratio'])]

	def update_name(self):
		self._name = _('Sound/Image')



