# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb774afcc>}
nname: 292
n 292(None)[return act
]:
	i: 161(), 291()
	o: 

nname: 291
n 291(None)[]:
	i: 0(f)
	o: 292()

nname: 161
n 161(None)[act.insert(0, ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
act.append(SubtitlesActionItem(context['selected'], menu, _('Subtitles')))
act.append(AudioSubstreamsActionItem(context['selected'], menu, _('Audio tracks')))
]:
	i: 0(t)
	o: 292()

nname: 0
n 0('tv' in plugins)[stack = pygui_globs['menustack']
menu = context['menu']
previous_menu = stack.menus_stack[-2]
act = [ActionItem(_('Program a recording'), type_='action', action=schedule_record, args=[context['selected'], previous_menu, stack]), ActionItem(_('Go to scheduled recordings'), type_='action', action=goto_schedule_record, args=[context['selected'], previous_menu, stack]), DisplayFormatActionItem(menu, _('Picture size'))]
]:
	i: 
	o: 161(t), 291(f)

nname: 0
n 0(None)[stack = pygui_globs['menustack']
menu = context['menu']
previous_menu = stack.menus_stack[-2]
act = [ActionItem(_('Program a recording'), type_='action', action=schedule_record, args=[context['selected'], previous_menu, stack]), ActionItem(_('Go to scheduled recordings'), type_='action', action=goto_schedule_record, args=[context['selected'], previous_menu, stack]), DisplayFormatActionItem(menu, _('Picture size'))]
if 'tv' in plugins:
	act.insert(0, ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
	act.append(SubtitlesActionItem(context['selected'], menu, _('Subtitles')))
	act.append(AudioSubstreamsActionItem(context['selected'], menu, _('Audio tracks')))
return act
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7752f6c>}
nname: 0
n 0(None)[from __future__ import absolute_import
name = 'Player'
position = None
image = 'hand_player'
category = 'tv_player'
unique = True
default = False
from pygui.actions.jobs.tv import display_epg, schedule_record
from pygui.actions.jobs.tv import goto_schedule_record
from pygui.actions.jobs.player import DisplayFormatActionItem, SubtitlesActionItem, AudioSubstreamsActionItem
from pygui.item.core import ActionItem
from pygui.shared import pygui_globs
from pygui.config import plugins
def is_available(context):
	return True

def get_action_info_list(context):
	stack = pygui_globs['menustack']
	menu = context['menu']
	previous_menu = stack.menus_stack[-2]
	act = [ActionItem(_('Program a recording'), type_='action', action=schedule_record, args=[context['selected'], previous_menu, stack]), ActionItem(_('Go to scheduled recordings'), type_='action', action=goto_schedule_record, args=[context['selected'], previous_menu, stack]), DisplayFormatActionItem(menu, _('Picture size'))]
	if 'tv' in plugins:
		act.insert(0, ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
		act.append(SubtitlesActionItem(context['selected'], menu, _('Subtitles')))
		act.append(AudioSubstreamsActionItem(context['selected'], menu, _('Audio tracks')))
	return act

]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb774ab4c>}
from __future__ import absolute_import
name = 'Player'
position = None
image = 'hand_player'
category = 'tv_player'
unique = True
default = False
from pygui.actions.jobs.tv import display_epg, schedule_record
from pygui.actions.jobs.tv import goto_schedule_record
from pygui.actions.jobs.player import DisplayFormatActionItem, SubtitlesActionItem, AudioSubstreamsActionItem
from pygui.item.core import ActionItem
from pygui.shared import pygui_globs
from pygui.config import plugins
def is_available(context):
	return True

def get_action_info_list(context):
	stack = pygui_globs['menustack']
	menu = context['menu']
	previous_menu = stack.menus_stack[-2]
	act = [ActionItem(_('Program a recording'), type_='action', action=schedule_record, args=[context['selected'], previous_menu, stack]), ActionItem(_('Go to scheduled recordings'), type_='action', action=goto_schedule_record, args=[context['selected'], previous_menu, stack]), DisplayFormatActionItem(menu, _('Picture size'))]
	if 'tv' in plugins:
		act.insert(0, ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
		act.append(SubtitlesActionItem(context['selected'], menu, _('Subtitles')))
		act.append(AudioSubstreamsActionItem(context['selected'], menu, _('Audio tracks')))
	return act

