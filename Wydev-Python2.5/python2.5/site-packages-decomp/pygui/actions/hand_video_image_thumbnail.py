# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[return context['parent'].type is 'video_image_thumbnail'
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7658cac>}
nname: 208
n 208(None)[act.append(ActionItem(_('Back to Navigator'), type_='action', action=context['menu'].hide))
return act
]:
	i: 81(), 154(), 207()
	o: 

nname: 207
n 207(None)[]:
	i: 134(f)
	o: 208()

nname: 154
n 154(None)[act.append(ActionItem(_('Delete'), type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 134(t)
	o: 208()

nname: 134
n 134('image' in context['selected'].type)[]:
	i: 31(f)
	o: 154(t), 207(f)

nname: 81
n 81(None)[act.append(ActionItem(_('Delete highlighted directory'), type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 31(t)
	o: 208()

nname: 31
n 31(context['selected'].type in ('dir',))[fl = get_marker_from_item(context['selected'])
import pygui.menu as menu
]:
	i: 22(), 30()
	o: 81(t), 134(f)

nname: 30
n 30(None)[]:
	i: 0(f)
	o: 31()

nname: 22
n 22(None)[return ret
]:
	i: 0(t)
	o: 31()

nname: 0
n 0(context['selected'] is None)[act = []
]:
	i: 
	o: 22(t), 30(f)

nname: 208
n 208(None)[act.append(ActionItem(_('Back to Navigator'), type_='action', action=context['menu'].hide))
return act
]:
	i: 0()
	o: 

nname: 0
n 0(None)[act = []
if context['selected'] is None:
	return ret
fl = get_marker_from_item(context['selected'])
import pygui.menu as menu
if context['selected'].type in ('dir',):
	act.append(ActionItem(_('Delete highlighted directory'), type_='action', action=execute_delete, args=[context, fl]))
else:
	if 'image' in context['selected'].type:
		act.append(ActionItem(_('Delete'), type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 
	o: 208()

nname: 0
n 0(None)[act = []
if context['selected'] is None:
	return ret
fl = get_marker_from_item(context['selected'])
import pygui.menu as menu
if context['selected'].type in ('dir',):
	act.append(ActionItem(_('Delete highlighted directory'), type_='action', action=execute_delete, args=[context, fl]))
else:
	if 'image' in context['selected'].type:
		act.append(ActionItem(_('Delete'), type_='action', action=execute_delete, args=[context, fl]))
act.append(ActionItem(_('Back to Navigator'), type_='action', action=context['menu'].hide))
return act
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76671ec>}
nname: 0
n 0(None)[from __future__ import absolute_import
name = 'VideoImageThumbnail'
position = 6
image = 'video_image_thumbnail'
category = 'thumbnail_navigator'
unique = True
default = False
from pygui.markerlist import get_marker_from_item, actions
from peewee.debug import DEBUG, GET_LOGGER
from pygui.actions.jobs.fs import execute_delete
from pygui.item.core import ActionItem
log = GET_LOGGER(__name__)
def is_available(context):
	return context['parent'].type is 'video_image_thumbnail'

def get_action_info_list(context):
	act = []
	if context['selected'] is None:
		return ret
	fl = get_marker_from_item(context['selected'])
	import pygui.menu as menu
	if context['selected'].type in ('dir',):
		act.append(ActionItem(_('Delete highlighted directory'), type_='action', action=execute_delete, args=[context, fl]))
	else:
		if 'image' in context['selected'].type:
			act.append(ActionItem(_('Delete'), type_='action', action=execute_delete, args=[context, fl]))
	act.append(ActionItem(_('Back to Navigator'), type_='action', action=context['menu'].hide))
	return act

]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76582cc>}
from __future__ import absolute_import
name = 'VideoImageThumbnail'
position = 6
image = 'video_image_thumbnail'
category = 'thumbnail_navigator'
unique = True
default = False
from pygui.markerlist import get_marker_from_item, actions
from peewee.debug import DEBUG, GET_LOGGER
from pygui.actions.jobs.fs import execute_delete
from pygui.item.core import ActionItem
log = GET_LOGGER(__name__)
def is_available(context):
	return context['parent'].type is 'video_image_thumbnail'

def get_action_info_list(context):
	act = []
	if context['selected'] is None:
		return ret
	fl = get_marker_from_item(context['selected'])
	import pygui.menu as menu
	if context['selected'].type in ('dir',):
		act.append(ActionItem(_('Delete highlighted directory'), type_='action', action=execute_delete, args=[context, fl]))
	else:
		if 'image' in context['selected'].type:
			act.append(ActionItem(_('Delete'), type_='action', action=execute_delete, args=[context, fl]))
	act.append(ActionItem(_('Back to Navigator'), type_='action', action=context['menu'].hide))
	return act

