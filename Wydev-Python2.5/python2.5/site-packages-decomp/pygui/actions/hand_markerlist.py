# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[fl = markerlists().get(context['menu'].universe)
return bool(fl)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb766e32c>}
nname: 309
n 309(None)[return act
]:
	i: 84(AL), 308()
	o: 

nname: 308
n 308(None)[]:
	i: 173(AF), 304()
	o: 309()

nname: 304
n 304(None)[]:
	i: 226(f), 248()
	o: 308()

nname: 248
n 248(None)[act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
continue
]:
	i: 226(t)
	o: 304()

nname: 226
n 226(plugin_action.is_compatible(context))[context['parent_mode'] = user_config['security']['parent_mode']
]:
	i: 207(), 214()
	o: 248(t), 304(f)

nname: 214
n 214(None)[]:
	i: 180(t)
	o: 226()

nname: 207
n 207(None)[]:
	i: 180(f)
	o: 226()

nname: 180
n 180(user_config['security']['parental_control'])[for plugin_name in ('marker_empty', 'marker_delete', 'marker_play'):
plugin_action = actions[plugin_name]
]:
	i: 173(for)
	o: 207(f), 214(t)

nname: 173
n 173(None)[]:
	i: 84(loop)
	o: 180(for), 308(AF)

nname: 84
n 84(None)[menu_music = False
fl = markerlists().get(context['menu'].universe)
fl.menu = context['menu']
act = [ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl))]
]:
	i: 73(), 80()
	o: 173(loop), 309(AL)

nname: 80
n 80(None)[]:
	i: 51(f)
	o: 84()

nname: 73
n 73(None)[]:
	i: 51(t)
	o: 84()

nname: 51
n 51(context['menu'].type in ('audio',))[menu_video_photo = False
]:
	i: 40(), 47()
	o: 73(t), 80(f)

nname: 47
n 47(None)[]:
	i: 21(f)
	o: 51()

nname: 40
n 40(None)[]:
	i: 21(t)
	o: 51()

nname: 21
n 21(context['menu'].type in ('image', 'video', 'video_image'))[]:
	i: 12(), 20()
	o: 40(t), 47(f)

nname: 20
n 20(None)[]:
	i: 0(f)
	o: 21()

nname: 12
n 12(None)[return []
]:
	i: 0(t)
	o: 21()

nname: 0
n 0(context is None)[]:
	i: 
	o: 12(t), 20(f)

nname: 309
n 309(None)[return act
]:
	i: 51(AL), 173(AF), 180(f)
	o: 

nname: 180
n 180(None)[for plugin_name in ('marker_empty', 'marker_delete', 'marker_play'):
plugin_action = actions[plugin_name]
if not user_config['security']['parental_control']:
	pass
context['parent_mode'] = user_config['security']['parent_mode']
if plugin_action.is_compatible(context):
	act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
	continue
]:
	i: 173(for)
	o: 309()

nname: 173
n 173(None)[]:
	i: 51(loop)
	o: 180(for), 309(AF)

nname: 51
n 51(None)[menu_video_photo = False
if context['menu'].type in ('audio',):
	pass
menu_music = False
fl = markerlists().get(context['menu'].universe)
fl.menu = context['menu']
act = [ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl))]
]:
	i: 0()
	o: 173(loop), 309(AL)

nname: 0
n 0(None)[if context is None:
	return []
if context['menu'].type in ('image', 'video', 'video_image'):
	pass
]:
	i: 
	o: 51()

nname: 309
n 309(None)[return act
]:
	i: 0(AL), 173(AF), 180(f)
	o: 

nname: 180
n 180(None)[for plugin_name in ('marker_empty', 'marker_delete', 'marker_play'):
plugin_action = actions[plugin_name]
if not user_config['security']['parental_control']:
	pass
context['parent_mode'] = user_config['security']['parent_mode']
if plugin_action.is_compatible(context):
	act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
	continue
]:
	i: 173(for)
	o: 309()

nname: 173
n 173(None)[]:
	i: 0(loop)
	o: 180(for), 309(AF)

nname: 0
n 0(None)[if context is None:
	return []
if context['menu'].type in ('image', 'video', 'video_image'):
	pass
menu_video_photo = False
if context['menu'].type in ('audio',):
	pass
menu_music = False
fl = markerlists().get(context['menu'].universe)
fl.menu = context['menu']
act = [ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl))]
]:
	i: 
	o: 173(loop), 309(AL)

self.nodes: {0: <unpyclib.structure.node instance at 0xb767d70c>, 180: <unpyclib.structure.node instance at 0xb767d12c>, 173: <unpyclib.structure.node instance at 0xb76727ac>, 309: <unpyclib.structure.node instance at 0xb7672bac>}
nname: 0
n 0(None)[from __future__ import absolute_import
name = 'Markerlist'
position = 2
image = 'hand_markerlist'
category = 'navigator'
default = False
unique = False
from pygui.markerlist import get_marker_from_item, actions, markerlists
from pygui.window import LoadingWindow
from pygui.actions.jobs.marker import execute_show_marker
from pygui.item.core import ActionItem
from pygui.config import user_config
def is_available(context):
	fl = markerlists().get(context['menu'].universe)
	return bool(fl)

def get_action_info_list(context):
	if context is None:
		return []
	if context['menu'].type in ('image', 'video', 'video_image'):
		pass
	menu_video_photo = False
	if context['menu'].type in ('audio',):
		pass
	menu_music = False
	fl = markerlists().get(context['menu'].universe)
	fl.menu = context['menu']
	act = [ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl))]

]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7666ccc>}
from __future__ import absolute_import
name = 'Markerlist'
position = 2
image = 'hand_markerlist'
category = 'navigator'
default = False
unique = False
from pygui.markerlist import get_marker_from_item, actions, markerlists
from pygui.window import LoadingWindow
from pygui.actions.jobs.marker import execute_show_marker
from pygui.item.core import ActionItem
from pygui.config import user_config
def is_available(context):
	fl = markerlists().get(context['menu'].universe)
	return bool(fl)

def get_action_info_list(context):
	if context is None:
		return []
	if context['menu'].type in ('image', 'video', 'video_image'):
		pass
	menu_video_photo = False
	if context['menu'].type in ('audio',):
		pass
	menu_music = False
	fl = markerlists().get(context['menu'].universe)
	fl.menu = context['menu']
	act = [ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl))]

