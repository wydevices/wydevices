# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 195
n 195(None)[]:
	i: 184(AE)
	o: 

nname: 184
n 184(None)[loader.hide()
]:
	i: 0(finally), 180()
	o: 195(AE)

nname: 180
n 180(None)[]:
	i: 94(), 103()
	o: 184()

nname: 103
n 103(None)[item_menu = menu.MarkerNavigator(_('Marker list'), context['menu'].universe, item_list, context['parent'], marker, type='marker' + marker.menu.type)
pygui_globs['menustack'].push_menu(item_menu)
]:
	i: 68(), 101(AE)
	o: 180()

nname: 101
n 101(None)[]:
	i: 84(f)
	o: 103(AE)

nname: 94
n 94(None)[]:
	i: 84(t)
	o: 180()

nname: 84
n 84(<dummy_ex3> EXC_MATCH BrowseError)[]:
	i: 65(except)
	o: 94(t), 101(f)

nname: 68
n 68(None)[item_list = marker.browse()
]:
	i: 65(try)
	o: 103()

nname: 65
n 65(None)[]:
	i: 0(ASF)
	o: 68(try), 84(except)

nname: 0
n 0(None)[context['parent'].show_menu()
loader = LoadingWindow()
loader.show()
marker.menu = context['menu']
from pygui.menu import menu
]:
	i: 
	o: 65(ASF2), 184(finally)

nname: 195
n 195(None)[]:
	i: 184(AE)
	o: 

nname: 184
n 184(None)[loader.hide()
]:
	i: 0(finally), 103(), 84(f), 84(t)
	o: 195(AE)

nname: 84
n 84(<dummy_ex3> EXC_MATCH BrowseError)[]:
	i: 65(except)
	o: 184(f)

nname: 103
n 103(None)[item_menu = menu.MarkerNavigator(_('Marker list'), context['menu'].universe, item_list, context['parent'], marker, type='marker' + marker.menu.type)
pygui_globs['menustack'].push_menu(item_menu)
]:
	i: 68(), 101(AE)
	o: 184()

nname: 68
n 68(None)[item_list = marker.browse()
]:
	i: 65(try)
	o: 103()

nname: 65
n 65(None)[]:
	i: 0(ASF2)
	o: 68(try), 84(except)

structureSingleExcept Exception 'NoneType' object has no attribute 'toNode'
nname: 0
n 0(None)[context['parent'].show_menu()
loader = LoadingWindow()
loader.show()
marker.menu = context['menu']
from pygui.menu import menu
]:
	i: 
	o: 65(ASF2), 184(finally)

nname: 195
n 195(None)[]:
	i: 184(AE)
	o: 

nname: 184
n 184(None)[loader.hide()
]:
	i: 0(finally), 103(), 84(t), 65(except)
	o: 195(AE)

nname: 103
n 103(None)[item_menu = menu.MarkerNavigator(_('Marker list'), context['menu'].universe, item_list, context['parent'], marker, type='marker' + marker.menu.type)
pygui_globs['menustack'].push_menu(item_menu)
]:
	i: 68(), 101(AE)
	o: 184()

nname: 68
n 68(None)[item_list = marker.browse()
]:
	i: 65(try)
	o: 103()

nname: 65
n 65(None)[]:
	i: 0(ASF2)
	o: 68(try), 184(except)

nname: 0
n 0(None)[context['parent'].show_menu()
loader = LoadingWindow()
loader.show()
marker.menu = context['menu']
from pygui.menu import menu
]:
	i: 
	o: 65(ASF2), 184(finally)

nname: 195
n 195(None)[]:
	i: 184(AE)
	o: 

nname: 184
n 184(None)[except:
	loader.hide()
]:
	i: 0(finally), 103(), 84(t), 65(except)
	o: 195(AE)

nname: 103
n 103(None)[item_menu = menu.MarkerNavigator(_('Marker list'), context['menu'].universe, item_list, context['parent'], marker, type='marker' + marker.menu.type)
pygui_globs['menustack'].push_menu(item_menu)
]:
	i: 68(), 101(AE)
	o: 184()

nname: 68
n 68(None)[item_list = marker.browse()
]:
	i: 65(try)
	o: 103()

nname: 65
n 65(None)[]:
	i: 0(ASF2)
	o: 68(try), 184(except)

nname: 0
n 0(None)[context['parent'].show_menu()
loader = LoadingWindow()
loader.show()
marker.menu = context['menu']
from pygui.menu import menu
]:
	i: 
	o: 65(ASF2), 184(finally)

self.nodes: {0: <unpyclib.structure.node instance at 0xb7579f4c>, 65: <unpyclib.structure.node instance at 0xb757996c>, 195: <unpyclib.structure.node instance at 0xb7579dcc>, 68: <unpyclib.structure.node instance at 0xb7579a0c>, 101: <unpyclib.structure.node instance at 0xb7579cec>, 103: <unpyclib.structure.node instance at 0xb7579e4c>, 184: <unpyclib.structure.node instance at 0xb757992c>}
nname: 112
n 112(None)[]:
	i: 31(), 62()
	o: 

nname: 62
n 62(None)[GraphicalProgress(job=CopyThread(marker, context), context=context, win=NoHomeProgressWindow()).start(delay=1)
]:
	i: 0(f)
	o: 112()

nname: 31
n 31(None)[context.vfs_add_item(marker)
pygui_globs['menustack'].back_one_menu()
]:
	i: 0(t)
	o: 112()

nname: 0
n 0(isinstance(context, Playlist))[from pygui.item.mediaitem.core import Playlist
]:
	i: 
	o: 31(t), 62(f)

nname: 0
n 0(None)[from pygui.item.mediaitem.core import Playlist
if isinstance(context, Playlist):
	context.vfs_add_item(marker)
	pygui_globs['menustack'].back_one_menu()
else:
	GraphicalProgress(job=CopyThread(marker, context), context=context, win=NoHomeProgressWindow()).start(delay=1)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb757944c>}
nname: 0
n 0(None)[]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7572ecc>}
nname: 0
n 0(None)[from __future__ import absolute_import
from pygui.window import KeyboardWindow, ConfirmWindow, LoadingWindow, NoHomeProgressWindow
from pygui.shared import pygui_globs
from .fs import GraphicalProgress, CopyThread
from pygui.item.containers import ActionContainer
from wymedia.wmplus import BrowseError
def execute_show_marker(context, marker):
	context['parent'].show_menu()
	loader = LoadingWindow()
	loader.show()
	marker.menu = context['menu']
	from pygui.menu import menu

def execute_copy_marked_items(context, marker):
	from pygui.item.mediaitem.core import Playlist
	if isinstance(context, Playlist):
		context.vfs_add_item(marker)
		pygui_globs['menustack'].back_one_menu()
	else:
		GraphicalProgress(job=CopyThread(marker, context), context=context, win=NoHomeProgressWindow()).start(delay=1)

def execute_burn_marker_list(context, marker):
	pass

]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb757250c>}
from __future__ import absolute_import
from pygui.window import KeyboardWindow, ConfirmWindow, LoadingWindow, NoHomeProgressWindow
from pygui.shared import pygui_globs
from .fs import GraphicalProgress, CopyThread
from pygui.item.containers import ActionContainer
from wymedia.wmplus import BrowseError
def execute_show_marker(context, marker):
	context['parent'].show_menu()
	loader = LoadingWindow()
	loader.show()
	marker.menu = context['menu']
	from pygui.menu import menu

def execute_copy_marked_items(context, marker):
	from pygui.item.mediaitem.core import Playlist
	if isinstance(context, Playlist):
		context.vfs_add_item(marker)
		pygui_globs['menustack'].back_one_menu()
	else:
		GraphicalProgress(job=CopyThread(marker, context), context=context, win=NoHomeProgressWindow()).start(delay=1)

def execute_burn_marker_list(context, marker):
	pass

