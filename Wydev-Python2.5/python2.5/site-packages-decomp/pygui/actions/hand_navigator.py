# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[return True
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7675c8c>}
nname: 2546
n 2546(None)[return act
]:
	i: 2442(), 2545()
	o: 

nname: 2545
n 2545(None)[]:
	i: 2436(f)
	o: 2546()

nname: 2442
n 2442(None)[act.append(ActionItem(_('Change login and password for net services'), type_='action', action=change_login_pwd_net, args=[context['menu'], stack]))
act.append(ActionItem(_('Update Web Services content'), type_='action', action=refresh_net_content, args=[context]))
]:
	i: 2436(t)
	o: 2546()

nname: 2436
n 2436(menu_net)[]:
	i: 2378(), 2435()
	o: 2442(t), 2545(f)

nname: 2435
n 2435(None)[]:
	i: 2359&2365(f)
	o: 2436()

nname: 2378
n 2378(None)[act.append(ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
]:
	i: 2359&2365(t)
	o: 2436()

nname: 2359&2365
n 2359&2365(menu_tv and 'tv' in plugins)[]:
	i: 2308(JA), 2354(), 2358()
	o: 2378(t), 2435(f)

nname: 2358
n 2358(None)[]:
	i: 2087&2093(f)
	o: 2359&2365()

nname: 2354
n 2354(None)[]:
	i: 2100(f)
	o: 2359&2365()

nname: 2308
n 2308(None)[act.append(ActionItem(name, type_='action', action=action, args=[context, stack]))
]:
	i: 2231(), 2289()
	o: 2359&2365(JA)

nname: 2289
n 2289(None)[name = _('Set to parent mode')
action = switch_to_parent_mode
]:
	i: 2156(f)
	o: 2308()

nname: 2231
n 2231(None)[val, name_hide = (True, _('Show hidden items'))
act.append(ActionItem(name_hide, type_='action', action=display_hidden_items, args=[val, context, stack]))
]:
	i: 2196(), 2215()
	o: 2308()

nname: 2215
n 2215(None)[]:
	i: 2163(f)
	o: 2231()

nname: 2196
n 2196(None)[]:
	i: 2163(t)
	o: 2231()

nname: 2163
n 2163(user_config['security']['show_hidden'])[name = _('Set to child mode')
action = switch_to_children_mode
]:
	i: 2156(t)
	o: 2196(t), 2215(f)

nname: 2156
n 2156(parent_mode)[]:
	i: 2100(t)
	o: 2163(t), 2289(f)

nname: 2100
n 2100(parental_control)[act.append(ActionItem(_('Search'), type_='action', action=push_search_menu, args=(context, stack)))
]:
	i: 2087&2093(t)
	o: 2156(t), 2354(f)

nname: 2087&2093
n 2087&2093(menu_music or menu_video_photo)[]:
	i: 2078(JA), 2083(), 2086()
	o: 2100(t), 2358(f)

nname: 2086
n 2086(None)[]:
	i: 1136(f)
	o: 2087&2093()

nname: 2083
n 2083(None)[]:
	i: 2002(JA), 2082()
	o: 2087&2093()

nname: 2082
n 2082(None)[]:
	i: 1953&1965(f)
	o: 2083()

nname: 2078
n 2078(None)[]:
	i: 1985(f)
	o: 2087&2093(JA)

nname: 2002
n 2002(None)[from pygui.actions.jobs.transcode import transcode
context['psp_path'] = psp_path
act.append(ActionItem(_('Transcode to PSP\xe2\x84\xa2'), type_='action', action=transcode, args=[context]))
]:
	i: 1985(t)
	o: 2083(JA)

nname: 1985
n 1985(psp_path)[psp_path = pygui_globs['psp_path']
]:
	i: 1953&1965(t)
	o: 2002(t), 2078(f)

nname: 1953&1965
n 1953&1965('transcode' in plugins and context['selected'].type in ('video',))[]:
	i: 1471(JA), 1610(JA), 1944(JA), 1949(), 1952()
	o: 1985(t), 2082(f)

nname: 1952
n 1952(None)[]:
	i: 1142&1149(f)
	o: 1953&1965()

nname: 1949
n 1949(None)[]:
	i: 1760(JA), 1837(JA), 1948()
	o: 1953&1965()

nname: 1948
n 1948(None)[]:
	i: 1717&1724(f)
	o: 1949()

nname: 1944
n 1944(None)[]:
	i: 1817(f)
	o: 1953&1965(JA)

nname: 1837
n 1837(None)[act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1817(t)
	o: 1949(JA)

nname: 1817
n 1817(isinstance(context['selected'], VideoItem))[]:
	i: 1737(f)
	o: 1837(t), 1944(f)

nname: 1760
n 1760(None)[act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1737(t)
	o: 1949(JA)

nname: 1737
n 1737(isinstance(context['selected'].parent, Playlist))[]:
	i: 1717&1724(t)
	o: 1760(t), 1817(f)

nname: 1717&1724
n 1717&1724(menu_tv and 'tv' in plugins)[]:
	i: 1575&1582&1589(f)
	o: 1737(t), 1948(f)

nname: 1610
n 1610(None)[act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1575&1582&1589(t)
	o: 1953&1965(JA)

nname: 1575&1582&1589
n 1575&1582&1589((menu_music or menu_video_photo) and context['selected']['backend'] != 'upnp')[]:
	i: 1459(f)
	o: 1610(t), 1717&1724(f)

nname: 1471
n 1471(None)[act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename_record, args=[context]))
act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_cancel_record, args=[context]))
]:
	i: 1459(t)
	o: 1953&1965(JA)

nname: 1459
n 1459(menu_type in ('scheduled_navigator',))[]:
	i: 1297(JA), 1454(), 1458()
	o: 1471(t), 1575&1582&1589(f)

nname: 1458
n 1458(None)[]:
	i: 1157&1177(f)
	o: 1459()

nname: 1454
n 1454(None)[]:
	i: 1267&1273&1284(f)
	o: 1459()

nname: 1297
n 1297(None)[act.append(ActionItem(_('Edit "%(selected_caption)s"') % captions_dict, type_='action', action=execute_reorder, args=[context]))
act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1267&1273&1284(t)
	o: 1459(JA)

nname: 1267&1273&1284
n 1267&1273&1284(menu_tv and context['selected'] and 'tv' in plugins)[]:
	i: 1205(), 1266()
	o: 1297(t), 1454(f)

nname: 1266
n 1266(None)[]:
	i: 1198(f)
	o: 1267&1273&1284()

nname: 1205
n 1205(None)[act.append(ActionItem(_('Add marked items to "%(selected_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['selected'], fl]))
]:
	i: 1198(t)
	o: 1267&1273&1284()

nname: 1198
n 1198(fl)[]:
	i: 1157&1177(t)
	o: 1205(t), 1266(f)

nname: 1157&1177
n 1157&1177(isinstance(context['selected'], Playlist) and context['selected']['mimeType'] != 'audio/mpegurl')[]:
	i: 1142&1149(t)
	o: 1198(t), 1458(f)

nname: 1142&1149
n 1142&1149(parent_mode or not parental_control)[]:
	i: 1136(t)
	o: 1157&1177(t), 1952(f)

nname: 1136
n 1136(selected_actions)[]:
	i: 1074(JA), 1131(), 1135()
	o: 1142&1149(t), 2086(f)

nname: 1135
n 1135(None)[]:
	i: 917(f)
	o: 1136()

nname: 1131
n 1131(None)[]:
	i: 1032&1038(f)
	o: 1136()

nname: 1074
n 1074(None)[act.append(ActionItem(_('Display "%(parent_caption)s" thumbnails') % captions_dict, type_='action', action=push_thumbnail_menu, args=(context, stack)))
]:
	i: 1032&1038(t)
	o: 1136(JA)

nname: 1032&1038
n 1032&1038(menu_video_photo and any(<genexpr>(context['menu'].get_item_list('main_list'))))[]:
	i: 973(JA), 1027(), 1031()
	o: 1074(t), 1131(f)

nname: 1031
n 1031(None)[]:
	i: 923&930&937&944(f)
	o: 1032&1038()

nname: 1027
n 1027(None)[]:
	i: 952(f)
	o: 1032&1038()

nname: 973
n 973(None)[act.append(ActionItem(_('Create a new folder in "%(parent_caption)s"') % captions_dict, type_='action', action=execute_mkdir, args=[context]))
]:
	i: 952(t)
	o: 1032&1038(JA)

nname: 952
n 952(context['parent']['backend'] not in ('upnp', 'wyrecord'))[]:
	i: 923&930&937&944(t)
	o: 973(t), 1027(f)

nname: 923&930&937&944
n 923&930&937&944((menu_music or menu_video_photo) and (parent_mode or not parental_control))[]:
	i: 917(t)
	o: 952(t), 1031(f)

nname: 917
n 917(parent_actions)[]:
	i: 859(JA), 912(), 916()
	o: 923&930&937&944(t), 1135(f)

nname: 916
n 916(None)[]:
	i: 716(f)
	o: 917()

nname: 912
n 912(None)[]:
	i: 846&852(f)
	o: 917()

nname: 859
n 859(None)[act.append(ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl)))
]:
	i: 846&852(t)
	o: 917(JA)

nname: 846&852
n 846&852(menu_music or menu_video_photo)[]:
	i: 722(AL), 845()
	o: 859(t), 912(f)

nname: 845
n 845(None)[]:
	i: 726(AF), 841()
	o: 846&852()

nname: 841
n 841(None)[]:
	i: 763(f), 785()
	o: 845()

nname: 785
n 785(None)[act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
continue
]:
	i: 763(t)
	o: 841()

nname: 763
n 763(plugin_action.is_compatible(context))[context['parent_mode'] = parent_mode
]:
	i: 739(t), 758()
	o: 785(t), 841(f)

nname: 758
n 758(None)[]:
	i: 739(f)
	o: 763()

nname: 739
n 739(parent_mode)[for plugin_name in ['marker_empty', 'marker_delete']:
plugin_action = actions[plugin_name]
]:
	i: 726(for)
	o: 758(f), 763(t)

nname: 726
n 726(None)[]:
	i: 722(loop)
	o: 739(for), 845(AF)

nname: 722
n 722(None)[]:
	i: 716(t)
	o: 726(loop), 846&852(AL)

nname: 716
n 716(fl)[]:
	i: 707(JA), 712(), 715()
	o: 722(t), 916(f)

nname: 715
n 715(None)[]:
	i: 553(f)
	o: 716()

nname: 712
n 712(None)[]:
	i: 602(AL), 711()
	o: 716()

nname: 711
n 711(None)[]:
	i: 559&566&587&594(f)
	o: 712()

nname: 707
n 707(None)[]:
	i: 606(AF), 703()
	o: 716(JA)

nname: 703
n 703(None)[]:
	i: 619(f), 647()
	o: 707()

nname: 647
n 647(None)[act.append(ActionItem(_(plugin.caption), type_='action', action=plugin.execute, args=[context]))
continue
]:
	i: 619(t)
	o: 703()

nname: 619
n 619(plugin.is_compatible(context))[for plugin_name in ['marker_create_playlist', 'marker_create_favorite']:
plugin = actions[plugin_name]
]:
	i: 606(for)
	o: 647(t), 703(f)

nname: 606
n 606(None)[]:
	i: 602(loop)
	o: 619(for), 707(AF)

nname: 602
n 602(None)[]:
	i: 559&566&587&594(t)
	o: 606(loop), 712(AL)

nname: 559&566&587&594
n 559&566&587&594(fl and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control))[]:
	i: 553(t)
	o: 602(t), 711(f)

nname: 553
n 553(parent_actions)[]:
	i: 429(AL), 548(), 552()
	o: 559&566&587&594(t), 715(f)

nname: 552
n 552(None)[]:
	i: 304(f)
	o: 553()

nname: 548
n 548(None)[]:
	i: 432(AF), 544()
	o: 553()

nname: 544
n 544(None)[]:
	i: 466(f), 488()
	o: 548()

nname: 488
n 488(None)[act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
continue
]:
	i: 466(t)
	o: 544()

nname: 466
n 466(plugin_action.is_compatible(context))[context['parent_mode'] = parent_mode
]:
	i: 442(t), 461()
	o: 488(t), 544(f)

nname: 461
n 461(None)[]:
	i: 442(f)
	o: 466()

nname: 442
n 442(parent_mode)[for plugin_name in ['marker_play']:
plugin_action = actions[plugin_name]
]:
	i: 432(for)
	o: 461(f), 466(t)

nname: 432
n 432(None)[]:
	i: 429(loop)
	o: 442(for), 548(AF)

nname: 429
n 429(None)[]:
	i: 367(), 428()
	o: 432(loop), 553(AL)

nname: 428
n 428(None)[]:
	i: 316&324&331&352&359(f)
	o: 429()

nname: 367
n 367(None)[act.append(ActionItem(_('Duplicate marked items to "%(parent_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['parent'], fl]))
]:
	i: 316&324&331&352&359(t)
	o: 429()

nname: 316&324&331&352&359
n 316&324&331&352&359(not menu_tv and parent_actions and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control))[]:
	i: 304(t)
	o: 367(t), 428(f)

nname: 304
n 304(fl)[act = []
]:
	i: 267(), 303()
	o: 316&324&331&352&359(t), 552(f)

nname: 303
n 303(None)[]:
	i: 237&247(f)
	o: 304()

nname: 267
n 267(None)[captions_dict['selected_caption'] = ellipsize(context['selected'].name, 15)
selected_actions = True
]:
	i: 237&247(t)
	o: 304()

nname: 237&247
n 237&247(context['selected'] and context['parent'] is not RootItem())[]:
	i: 200(), 236()
	o: 267(t), 303(f)

nname: 236
n 236(None)[]:
	i: 78&180(f)
	o: 237&247()

nname: 200
n 200(None)[captions_dict['parent_caption'] = ellipsize(context['parent'].name, 10)
parent_actions = True
]:
	i: 78&180(t)
	o: 237&247()

nname: 78&180
n 78&180(context['parent'] and context['parent'] is not RootItem())[parental_control = user_config['security']['parental_control']
parent_mode = user_config['security']['parent_mode']
menu_video_photo = menu_type in ('image', 'video', 'video_image', 'multiverse')
menu_music = menu_type in ('audio', 'multiverse')
menu_tv = menu_type in ('tv_navigator',)
menu_net = menu_type in ('net_services',)
captions_dict = {}
parent_actions, selected_actions = False, False
]:
	i: 60(), 77()
	o: 200(t), 236(f)

nname: 77
n 77(None)[]:
	i: 0(f)
	o: 78&180()

nname: 60
n 60(None)[fl.menu = context['menu']
]:
	i: 0(t)
	o: 78&180()

nname: 0
n 0(fl is not None)[stack = pygui_globs['menustack']
menu_type = context['menu'].type
fl = markerlists().get(context['menu'].universe)
]:
	i: 
	o: 60(t), 77(f)

nname: 2359&2365
n 2359&2365(None)[if menu_tv and 'tv' in plugins:
	act.append(ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
if menu_net:
	act.append(ActionItem(_('Change login and password for net services'), type_='action', action=change_login_pwd_net, args=[context['menu'], stack]))
	act.append(ActionItem(_('Update Web Services content'), type_='action', action=refresh_net_content, args=[context]))
return act
]:
	i: 2308(JA), 2100(f), 2087&2093(f)
	o: 

nname: 2308
n 2308(None)[act.append(ActionItem(name, type_='action', action=action, args=[context, stack]))
]:
	i: 2163(), 2289()
	o: 2359&2365(JA)

nname: 2289
n 2289(None)[name = _('Set to parent mode')
action = switch_to_parent_mode
]:
	i: 2156(f)
	o: 2308()

nname: 2163
n 2163(None)[name = _('Set to child mode')
action = switch_to_children_mode
if user_config['security']['show_hidden']:
	pass
val, name_hide = (True, _('Show hidden items'))
act.append(ActionItem(name_hide, type_='action', action=display_hidden_items, args=[val, context, stack]))
]:
	i: 2156(t)
	o: 2308()

nname: 2156
n 2156(parent_mode)[]:
	i: 2100(t)
	o: 2163(t), 2289(f)

nname: 2100
n 2100(parental_control)[act.append(ActionItem(_('Search'), type_='action', action=push_search_menu, args=(context, stack)))
]:
	i: 2087&2093(t)
	o: 2156(t), 2359&2365(f)

nname: 2087&2093
n 2087&2093(menu_music or menu_video_photo)[]:
	i: 1985(f), 2002(JA), 1953&1965(f), 1136(f)
	o: 2100(t), 2359&2365(f)

nname: 2002
n 2002(None)[from pygui.actions.jobs.transcode import transcode
context['psp_path'] = psp_path
act.append(ActionItem(_('Transcode to PSP\xe2\x84\xa2'), type_='action', action=transcode, args=[context]))
]:
	i: 1985(t)
	o: 2087&2093(JA)

nname: 1985
n 1985(psp_path)[psp_path = pygui_globs['psp_path']
]:
	i: 1953&1965(t)
	o: 2002(t), 2087&2093(f)

nname: 1953&1965
n 1953&1965('transcode' in plugins and context['selected'].type in ('video',))[]:
	i: 1471(JA), 1610(JA), 1817(f), 1760(JA), 1837(JA), 1717&1724(f), 1142&1149(f)
	o: 1985(t), 2087&2093(f)

nname: 1837
n 1837(None)[act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1817(t)
	o: 1953&1965(JA)

nname: 1817
n 1817(isinstance(context['selected'], VideoItem))[]:
	i: 1737(f)
	o: 1837(t), 1953&1965(f)

nname: 1760
n 1760(None)[act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1737(t)
	o: 1953&1965(JA)

nname: 1737
n 1737(isinstance(context['selected'].parent, Playlist))[]:
	i: 1717&1724(t)
	o: 1760(t), 1817(f)

nname: 1717&1724
n 1717&1724(menu_tv and 'tv' in plugins)[]:
	i: 1575&1582&1589(f)
	o: 1737(t), 1953&1965(f)

nname: 1610
n 1610(None)[act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1575&1582&1589(t)
	o: 1953&1965(JA)

nname: 1575&1582&1589
n 1575&1582&1589((menu_music or menu_video_photo) and context['selected']['backend'] != 'upnp')[]:
	i: 1459(f)
	o: 1610(t), 1717&1724(f)

nname: 1471
n 1471(None)[act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename_record, args=[context]))
act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_cancel_record, args=[context]))
]:
	i: 1459(t)
	o: 1953&1965(JA)

nname: 1459
n 1459(menu_type in ('scheduled_navigator',))[]:
	i: 1198(JA), 1157&1177(f)
	o: 1471(t), 1575&1582&1589(f)

nname: 1198
n 1198(None)[if fl:
	act.append(ActionItem(_('Add marked items to "%(selected_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['selected'], fl]))
if menu_tv and context['selected'] and 'tv' in plugins:
	act.append(ActionItem(_('Edit "%(selected_caption)s"') % captions_dict, type_='action', action=execute_reorder, args=[context]))
	act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
	act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1157&1177(t)
	o: 1459(JA)

nname: 1157&1177
n 1157&1177(isinstance(context['selected'], Playlist) and context['selected']['mimeType'] != 'audio/mpegurl')[]:
	i: 1142&1149(t)
	o: 1198(t), 1459(f)

nname: 1142&1149
n 1142&1149(parent_mode or not parental_control)[]:
	i: 1136(t)
	o: 1157&1177(t), 1953&1965(f)

nname: 1136
n 1136(selected_actions)[]:
	i: 923&930&937&944(JA), 917(f)
	o: 1142&1149(t), 2087&2093(f)

nname: 923&930&937&944
n 923&930&937&944(None)[if (menu_music or menu_video_photo) and (parent_mode or not parental_control):
	if context['parent']['backend'] not in ('upnp', 'wyrecord'):
		act.append(ActionItem(_('Create a new folder in "%(parent_caption)s"') % captions_dict, type_='action', action=execute_mkdir, args=[context]))
if menu_video_photo and any(<genexpr>(context['menu'].get_item_list('main_list'))):
	act.append(ActionItem(_('Display "%(parent_caption)s" thumbnails') % captions_dict, type_='action', action=push_thumbnail_menu, args=(context, stack)))
]:
	i: 917(t)
	o: 1136(JA)

nname: 917
n 917(parent_actions)[]:
	i: 846&852(JA), 716(f)
	o: 923&930&937&944(t), 1136(f)

nname: 846&852
n 846&852(None)[if menu_music or menu_video_photo:
	act.append(ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl)))
]:
	i: 722(AL), 726(AF), 739(f)
	o: 917(JA)

nname: 739
n 739(None)[for plugin_name in ['marker_empty', 'marker_delete']:
plugin_action = actions[plugin_name]
if not parent_mode:
	pass
context['parent_mode'] = parent_mode
if plugin_action.is_compatible(context):
	act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
	continue
]:
	i: 726(for)
	o: 846&852()

nname: 726
n 726(None)[]:
	i: 722(loop)
	o: 739(for), 846&852(AF)

nname: 722
n 722(None)[]:
	i: 716(t)
	o: 726(loop), 846&852(AL)

nname: 716
n 716(fl)[]:
	i: 606(AF), 619(), 602(AL), 559&566&587&594(f), 553(f)
	o: 722(t), 917(f)

nname: 619
n 619(None)[for plugin_name in ['marker_create_playlist', 'marker_create_favorite']:
plugin = actions[plugin_name]
if plugin.is_compatible(context):
	act.append(ActionItem(_(plugin.caption), type_='action', action=plugin.execute, args=[context]))
	continue
]:
	i: 606(for)
	o: 716()

nname: 606
n 606(None)[]:
	i: 602(loop)
	o: 619(for), 716(AF)

nname: 602
n 602(None)[]:
	i: 559&566&587&594(t)
	o: 606(loop), 716(AL)

nname: 559&566&587&594
n 559&566&587&594(fl and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control))[]:
	i: 553(t)
	o: 602(t), 716(f)

nname: 553
n 553(parent_actions)[]:
	i: 316&324&331&352&359(AL), 432(AF), 442(f), 237&247(f)
	o: 559&566&587&594(t), 716(f)

nname: 442
n 442(None)[for plugin_name in ['marker_play']:
plugin_action = actions[plugin_name]
if not parent_mode:
	pass
context['parent_mode'] = parent_mode
if plugin_action.is_compatible(context):
	act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
	continue
]:
	i: 432(for)
	o: 553()

nname: 432
n 432(None)[]:
	i: 316&324&331&352&359(loop)
	o: 442(for), 553(AF)

nname: 316&324&331&352&359
n 316&324&331&352&359(None)[if not menu_tv and parent_actions and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control):
	act.append(ActionItem(_('Duplicate marked items to "%(parent_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['parent'], fl]))
]:
	i: 237&247(t)
	o: 432(loop), 553(AL)

nname: 237&247
n 237&247(fl)[if context['selected'] and context['parent'] is not RootItem():
	captions_dict['selected_caption'] = ellipsize(context['selected'].name, 15)
	selected_actions = True
act = []
]:
	i: 0()
	o: 316&324&331&352&359(t), 553(f)

nname: 0
n 0(None)[stack = pygui_globs['menustack']
menu_type = context['menu'].type
fl = markerlists().get(context['menu'].universe)
if fl is not None:
	fl.menu = context['menu']
parental_control = user_config['security']['parental_control']
parent_mode = user_config['security']['parent_mode']
menu_video_photo = menu_type in ('image', 'video', 'video_image', 'multiverse')
menu_music = menu_type in ('audio', 'multiverse')
menu_tv = menu_type in ('tv_navigator',)
menu_net = menu_type in ('net_services',)
captions_dict = {}
parent_actions, selected_actions = False, False
if context['parent'] and context['parent'] is not RootItem():
	captions_dict['parent_caption'] = ellipsize(context['parent'].name, 10)
	parent_actions = True
]:
	i: 
	o: 237&247()

nname: 2359&2365
n 2359&2365(None)[if menu_tv and 'tv' in plugins:
	act.append(ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
if menu_net:
	act.append(ActionItem(_('Change login and password for net services'), type_='action', action=change_login_pwd_net, args=[context['menu'], stack]))
	act.append(ActionItem(_('Update Web Services content'), type_='action', action=refresh_net_content, args=[context]))
return act
]:
	i: 2156(JA), 2100(f), 2087&2093(f)
	o: 

nname: 2156
n 2156(None)[if parent_mode:
	name = _('Set to child mode')
	action = switch_to_children_mode
	if user_config['security']['show_hidden']:
		pass
	val, name_hide = (True, _('Show hidden items'))
	act.append(ActionItem(name_hide, type_='action', action=display_hidden_items, args=[val, context, stack]))
else:
	name = _('Set to parent mode')
	action = switch_to_parent_mode
act.append(ActionItem(name, type_='action', action=action, args=[context, stack]))
]:
	i: 2100(t)
	o: 2359&2365(JA)

nname: 2100
n 2100(parental_control)[act.append(ActionItem(_('Search'), type_='action', action=push_search_menu, args=(context, stack)))
]:
	i: 2087&2093(t)
	o: 2156(t), 2359&2365(f)

nname: 2087&2093
n 2087&2093(menu_music or menu_video_photo)[]:
	i: 1953&1965(f), 917(f)
	o: 2100(t), 2359&2365(f)

nname: 1953&1965
n 1953&1965(None)[if 'transcode' in plugins and context['selected'].type in ('video',):
	psp_path = pygui_globs['psp_path']
	if psp_path:
		from pygui.actions.jobs.transcode import transcode
		context['psp_path'] = psp_path
		act.append(ActionItem(_('Transcode to PSP\xe2\x84\xa2'), type_='action', action=transcode, args=[context]))
]:
	i: 1157&1177(JA), 1142&1149(f)
	o: 2087&2093(JA)

nname: 1157&1177
n 1157&1177(None)[if isinstance(context['selected'], Playlist) and context['selected']['mimeType'] != 'audio/mpegurl':
	if fl:
		act.append(ActionItem(_('Add marked items to "%(selected_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['selected'], fl]))
	if menu_tv and context['selected'] and 'tv' in plugins:
		act.append(ActionItem(_('Edit "%(selected_caption)s"') % captions_dict, type_='action', action=execute_reorder, args=[context]))
		act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
		act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
if menu_type in ('scheduled_navigator',):
	act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename_record, args=[context]))
	act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_cancel_record, args=[context]))
else:
	if (menu_music or menu_video_photo) and context['selected']['backend'] != 'upnp':
		act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
		act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
	else:
		if menu_tv and 'tv' in plugins:
			if isinstance(context['selected'].parent, Playlist):
				act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
			else:
				if isinstance(context['selected'], VideoItem):
					act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
					act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
]:
	i: 1142&1149(t)
	o: 1953&1965(JA)

nname: 1142&1149
n 1142&1149(parent_mode or not parental_control)[]:
	i: 917(t)
	o: 1157&1177(t), 1953&1965(f)

nname: 917
n 917(selected_actions)[if parent_actions:
	if (menu_music or menu_video_photo) and (parent_mode or not parental_control):
		if context['parent']['backend'] not in ('upnp', 'wyrecord'):
			act.append(ActionItem(_('Create a new folder in "%(parent_caption)s"') % captions_dict, type_='action', action=execute_mkdir, args=[context]))
	if menu_video_photo and any(<genexpr>(context['menu'].get_item_list('main_list'))):
		act.append(ActionItem(_('Display "%(parent_caption)s" thumbnails') % captions_dict, type_='action', action=push_thumbnail_menu, args=(context, stack)))
]:
	i: 739(JA), 716(f)
	o: 1142&1149(t), 2087&2093(f)

nname: 739
n 739(None)[for plugin_name in ['marker_empty', 'marker_delete']:
	plugin_action = actions[plugin_name]
	if not parent_mode:
		pass
	context['parent_mode'] = parent_mode
	if plugin_action.is_compatible(context):
		act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
		continue
if menu_music or menu_video_photo:
	act.append(ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl)))
]:
	i: 722(for)
	o: 917(JA)

nname: 722
n 722(None)[]:
	i: 716(t)
	o: 739(for)

nname: 716
n 716(fl)[]:
	i: 619(), 559&566&587&594(f), 553(f)
	o: 722(t), 917(f)

nname: 619
n 619(None)[for plugin_name in ['marker_create_playlist', 'marker_create_favorite']:
	plugin = actions[plugin_name]
	if plugin.is_compatible(context):
		act.append(ActionItem(_(plugin.caption), type_='action', action=plugin.execute, args=[context]))
		continue
]:
	i: 602(for)
	o: 716()

nname: 602
n 602(None)[]:
	i: 559&566&587&594(t)
	o: 619(for)

nname: 559&566&587&594
n 559&566&587&594(fl and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control))[]:
	i: 553(t)
	o: 602(t), 716(f)

nname: 553
n 553(parent_actions)[]:
	i: 316&324&331&352&359(AL), 432(AF), 442(f), 0(f)
	o: 559&566&587&594(t), 716(f)

nname: 442
n 442(None)[for plugin_name in ['marker_play']:
plugin_action = actions[plugin_name]
if not parent_mode:
	pass
context['parent_mode'] = parent_mode
if plugin_action.is_compatible(context):
	act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
	continue
]:
	i: 432(for)
	o: 553()

nname: 432
n 432(None)[]:
	i: 316&324&331&352&359(loop)
	o: 442(for), 553(AF)

nname: 316&324&331&352&359
n 316&324&331&352&359(None)[if not menu_tv and parent_actions and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control):
	act.append(ActionItem(_('Duplicate marked items to "%(parent_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['parent'], fl]))
]:
	i: 0(t)
	o: 432(loop), 553(AL)

nname: 0
n 0(fl)[stack = pygui_globs['menustack']
menu_type = context['menu'].type
fl = markerlists().get(context['menu'].universe)
if fl is not None:
	fl.menu = context['menu']
parental_control = user_config['security']['parental_control']
parent_mode = user_config['security']['parent_mode']
menu_video_photo = menu_type in ('image', 'video', 'video_image', 'multiverse')
menu_music = menu_type in ('audio', 'multiverse')
menu_tv = menu_type in ('tv_navigator',)
menu_net = menu_type in ('net_services',)
captions_dict = {}
parent_actions, selected_actions = False, False
if context['parent'] and context['parent'] is not RootItem():
	captions_dict['parent_caption'] = ellipsize(context['parent'].name, 10)
	parent_actions = True
if context['selected'] and context['parent'] is not RootItem():
	captions_dict['selected_caption'] = ellipsize(context['selected'].name, 15)
	selected_actions = True
act = []
]:
	i: 
	o: 316&324&331&352&359(t), 553(f)

nname: 2087&2093
n 2087&2093(None)[if menu_music or menu_video_photo:
	act.append(ActionItem(_('Search'), type_='action', action=push_search_menu, args=(context, stack)))
	if parental_control:
		if parent_mode:
			name = _('Set to child mode')
			action = switch_to_children_mode
			if user_config['security']['show_hidden']:
				pass
			val, name_hide = (True, _('Show hidden items'))
			act.append(ActionItem(name_hide, type_='action', action=display_hidden_items, args=[val, context, stack]))
		else:
			name = _('Set to parent mode')
			action = switch_to_parent_mode
		act.append(ActionItem(name, type_='action', action=action, args=[context, stack]))
if menu_tv and 'tv' in plugins:
	act.append(ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
if menu_net:
	act.append(ActionItem(_('Change login and password for net services'), type_='action', action=change_login_pwd_net, args=[context['menu'], stack]))
	act.append(ActionItem(_('Update Web Services content'), type_='action', action=refresh_net_content, args=[context]))
return act
]:
	i: 1142&1149(f), 917(f)
	o: 

nname: 1142&1149
n 1142&1149(None)[if parent_mode or not parental_control:
	if isinstance(context['selected'], Playlist) and context['selected']['mimeType'] != 'audio/mpegurl':
		if fl:
			act.append(ActionItem(_('Add marked items to "%(selected_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['selected'], fl]))
		if menu_tv and context['selected'] and 'tv' in plugins:
			act.append(ActionItem(_('Edit "%(selected_caption)s"') % captions_dict, type_='action', action=execute_reorder, args=[context]))
			act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
			act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
	if menu_type in ('scheduled_navigator',):
		act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename_record, args=[context]))
		act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_cancel_record, args=[context]))
	else:
		if (menu_music or menu_video_photo) and context['selected']['backend'] != 'upnp':
			act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
			act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
		else:
			if menu_tv and 'tv' in plugins:
				if isinstance(context['selected'].parent, Playlist):
					act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
				else:
					if isinstance(context['selected'], VideoItem):
						act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
						act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
if 'transcode' in plugins and context['selected'].type in ('video',):
	psp_path = pygui_globs['psp_path']
	if psp_path:
		from pygui.actions.jobs.transcode import transcode
		context['psp_path'] = psp_path
		act.append(ActionItem(_('Transcode to PSP\xe2\x84\xa2'), type_='action', action=transcode, args=[context]))
]:
	i: 917(t)
	o: 2087&2093(JA)

nname: 917
n 917(selected_actions)[if parent_actions:
	if (menu_music or menu_video_photo) and (parent_mode or not parental_control):
		if context['parent']['backend'] not in ('upnp', 'wyrecord'):
			act.append(ActionItem(_('Create a new folder in "%(parent_caption)s"') % captions_dict, type_='action', action=execute_mkdir, args=[context]))
	if menu_video_photo and any(<genexpr>(context['menu'].get_item_list('main_list'))):
		act.append(ActionItem(_('Display "%(parent_caption)s" thumbnails') % captions_dict, type_='action', action=push_thumbnail_menu, args=(context, stack)))
]:
	i: 722(JA), 716(f)
	o: 1142&1149(t), 2087&2093(f)

nname: 722
n 722(None)[for plugin_name in ['marker_empty', 'marker_delete']:
	plugin_action = actions[plugin_name]
	if not parent_mode:
		pass
	context['parent_mode'] = parent_mode
	if plugin_action.is_compatible(context):
		act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
		continue
if menu_music or menu_video_photo:
	act.append(ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl)))
]:
	i: 716(t)
	o: 917(JA)

nname: 716
n 716(fl)[]:
	i: 602(), 559&566&587&594(f), 553(f)
	o: 722(t), 917(f)

nname: 602
n 602(None)[for plugin_name in ['marker_create_playlist', 'marker_create_favorite']:
	plugin = actions[plugin_name]
	if plugin.is_compatible(context):
		act.append(ActionItem(_(plugin.caption), type_='action', action=plugin.execute, args=[context]))
		continue
]:
	i: 559&566&587&594(t)
	o: 716()

nname: 559&566&587&594
n 559&566&587&594(fl and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control))[]:
	i: 553(t)
	o: 602(t), 716(f)

nname: 553
n 553(parent_actions)[]:
	i: 316&324&331&352&359(AL), 432(AF), 442(f), 0(f)
	o: 559&566&587&594(t), 716(f)

nname: 442
n 442(None)[for plugin_name in ['marker_play']:
plugin_action = actions[plugin_name]
if not parent_mode:
	pass
context['parent_mode'] = parent_mode
if plugin_action.is_compatible(context):
	act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
	continue
]:
	i: 432(for)
	o: 553()

nname: 432
n 432(None)[]:
	i: 316&324&331&352&359(loop)
	o: 442(for), 553(AF)

nname: 316&324&331&352&359
n 316&324&331&352&359(None)[if not menu_tv and parent_actions and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control):
	act.append(ActionItem(_('Duplicate marked items to "%(parent_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['parent'], fl]))
]:
	i: 0(t)
	o: 432(loop), 553(AL)

nname: 0
n 0(fl)[stack = pygui_globs['menustack']
menu_type = context['menu'].type
fl = markerlists().get(context['menu'].universe)
if fl is not None:
	fl.menu = context['menu']
parental_control = user_config['security']['parental_control']
parent_mode = user_config['security']['parent_mode']
menu_video_photo = menu_type in ('image', 'video', 'video_image', 'multiverse')
menu_music = menu_type in ('audio', 'multiverse')
menu_tv = menu_type in ('tv_navigator',)
menu_net = menu_type in ('net_services',)
captions_dict = {}
parent_actions, selected_actions = False, False
if context['parent'] and context['parent'] is not RootItem():
	captions_dict['parent_caption'] = ellipsize(context['parent'].name, 10)
	parent_actions = True
if context['selected'] and context['parent'] is not RootItem():
	captions_dict['selected_caption'] = ellipsize(context['selected'].name, 15)
	selected_actions = True
act = []
]:
	i: 
	o: 316&324&331&352&359(t), 553(f)

nname: 917
n 917(None)[if parent_actions:
	if (menu_music or menu_video_photo) and (parent_mode or not parental_control):
		if context['parent']['backend'] not in ('upnp', 'wyrecord'):
			act.append(ActionItem(_('Create a new folder in "%(parent_caption)s"') % captions_dict, type_='action', action=execute_mkdir, args=[context]))
	if menu_video_photo and any(<genexpr>(context['menu'].get_item_list('main_list'))):
		act.append(ActionItem(_('Display "%(parent_caption)s" thumbnails') % captions_dict, type_='action', action=push_thumbnail_menu, args=(context, stack)))
if selected_actions:
	if parent_mode or not parental_control:
		if isinstance(context['selected'], Playlist) and context['selected']['mimeType'] != 'audio/mpegurl':
			if fl:
				act.append(ActionItem(_('Add marked items to "%(selected_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['selected'], fl]))
			if menu_tv and context['selected'] and 'tv' in plugins:
				act.append(ActionItem(_('Edit "%(selected_caption)s"') % captions_dict, type_='action', action=execute_reorder, args=[context]))
				act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
				act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
		if menu_type in ('scheduled_navigator',):
			act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename_record, args=[context]))
			act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_cancel_record, args=[context]))
		else:
			if (menu_music or menu_video_photo) and context['selected']['backend'] != 'upnp':
				act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
				act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
			else:
				if menu_tv and 'tv' in plugins:
					if isinstance(context['selected'].parent, Playlist):
						act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
					else:
						if isinstance(context['selected'], VideoItem):
							act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
							act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
	if 'transcode' in plugins and context['selected'].type in ('video',):
		psp_path = pygui_globs['psp_path']
		if psp_path:
			from pygui.actions.jobs.transcode import transcode
			context['psp_path'] = psp_path
			act.append(ActionItem(_('Transcode to PSP\xe2\x84\xa2'), type_='action', action=transcode, args=[context]))
if menu_music or menu_video_photo:
	act.append(ActionItem(_('Search'), type_='action', action=push_search_menu, args=(context, stack)))
	if parental_control:
		if parent_mode:
			name = _('Set to child mode')
			action = switch_to_children_mode
			if user_config['security']['show_hidden']:
				pass
			val, name_hide = (True, _('Show hidden items'))
			act.append(ActionItem(name_hide, type_='action', action=display_hidden_items, args=[val, context, stack]))
		else:
			name = _('Set to parent mode')
			action = switch_to_parent_mode
		act.append(ActionItem(name, type_='action', action=action, args=[context, stack]))
if menu_tv and 'tv' in plugins:
	act.append(ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
if menu_net:
	act.append(ActionItem(_('Change login and password for net services'), type_='action', action=change_login_pwd_net, args=[context['menu'], stack]))
	act.append(ActionItem(_('Update Web Services content'), type_='action', action=refresh_net_content, args=[context]))
return act
]:
	i: 553(f)
	o: 

nname: 553
n 553(None)[if parent_actions:
	if fl and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control):
		for plugin_name in ['marker_create_playlist', 'marker_create_favorite']:
			plugin = actions[plugin_name]
			if plugin.is_compatible(context):
				act.append(ActionItem(_(plugin.caption), type_='action', action=plugin.execute, args=[context]))
				continue
if fl:
	for plugin_name in ['marker_empty', 'marker_delete']:
		plugin_action = actions[plugin_name]
		if not parent_mode:
			pass
		context['parent_mode'] = parent_mode
		if plugin_action.is_compatible(context):
			act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
			continue
	if menu_music or menu_video_photo:
		act.append(ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl)))
]:
	i: 316&324&331&352&359(AL), 432(AF), 442(f), 0(f)
	o: 917(JA)

nname: 442
n 442(None)[for plugin_name in ['marker_play']:
plugin_action = actions[plugin_name]
if not parent_mode:
	pass
context['parent_mode'] = parent_mode
if plugin_action.is_compatible(context):
	act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
	continue
]:
	i: 432(for)
	o: 553()

nname: 432
n 432(None)[]:
	i: 316&324&331&352&359(loop)
	o: 442(for), 553(AF)

nname: 316&324&331&352&359
n 316&324&331&352&359(None)[if not menu_tv and parent_actions and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control):
	act.append(ActionItem(_('Duplicate marked items to "%(parent_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['parent'], fl]))
]:
	i: 0(t)
	o: 432(loop), 553(AL)

nname: 0
n 0(fl)[stack = pygui_globs['menustack']
menu_type = context['menu'].type
fl = markerlists().get(context['menu'].universe)
if fl is not None:
	fl.menu = context['menu']
parental_control = user_config['security']['parental_control']
parent_mode = user_config['security']['parent_mode']
menu_video_photo = menu_type in ('image', 'video', 'video_image', 'multiverse')
menu_music = menu_type in ('audio', 'multiverse')
menu_tv = menu_type in ('tv_navigator',)
menu_net = menu_type in ('net_services',)
captions_dict = {}
parent_actions, selected_actions = False, False
if context['parent'] and context['parent'] is not RootItem():
	captions_dict['parent_caption'] = ellipsize(context['parent'].name, 10)
	parent_actions = True
if context['selected'] and context['parent'] is not RootItem():
	captions_dict['selected_caption'] = ellipsize(context['selected'].name, 15)
	selected_actions = True
act = []
]:
	i: 
	o: 316&324&331&352&359(t), 553(f)

nname: 553
n 553(None)[if parent_actions:
	if fl and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control):
		for plugin_name in ['marker_create_playlist', 'marker_create_favorite']:
			plugin = actions[plugin_name]
			if plugin.is_compatible(context):
				act.append(ActionItem(_(plugin.caption), type_='action', action=plugin.execute, args=[context]))
				continue
if fl:
	for plugin_name in ['marker_empty', 'marker_delete']:
		plugin_action = actions[plugin_name]
		if not parent_mode:
			pass
		context['parent_mode'] = parent_mode
		if plugin_action.is_compatible(context):
			act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
			continue
	if menu_music or menu_video_photo:
		act.append(ActionItem(_('Display marker list'), type_='action', action=execute_show_marker, args=(context, fl)))
if parent_actions:
	if (menu_music or menu_video_photo) and (parent_mode or not parental_control):
		if context['parent']['backend'] not in ('upnp', 'wyrecord'):
			act.append(ActionItem(_('Create a new folder in "%(parent_caption)s"') % captions_dict, type_='action', action=execute_mkdir, args=[context]))
	if menu_video_photo and any(<genexpr>(context['menu'].get_item_list('main_list'))):
		act.append(ActionItem(_('Display "%(parent_caption)s" thumbnails') % captions_dict, type_='action', action=push_thumbnail_menu, args=(context, stack)))
if selected_actions:
	if parent_mode or not parental_control:
		if isinstance(context['selected'], Playlist) and context['selected']['mimeType'] != 'audio/mpegurl':
			if fl:
				act.append(ActionItem(_('Add marked items to "%(selected_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['selected'], fl]))
			if menu_tv and context['selected'] and 'tv' in plugins:
				act.append(ActionItem(_('Edit "%(selected_caption)s"') % captions_dict, type_='action', action=execute_reorder, args=[context]))
				act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
				act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
		if menu_type in ('scheduled_navigator',):
			act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename_record, args=[context]))
			act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_cancel_record, args=[context]))
		else:
			if (menu_music or menu_video_photo) and context['selected']['backend'] != 'upnp':
				act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
				act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
			else:
				if menu_tv and 'tv' in plugins:
					if isinstance(context['selected'].parent, Playlist):
						act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
					else:
						if isinstance(context['selected'], VideoItem):
							act.append(ActionItem(_('Rename "%(selected_caption)s"') % captions_dict, type_='action', action=execute_rename, args=[context]))
							act.append(ActionItem(_('Delete "%(selected_caption)s"') % captions_dict, type_='action', action=execute_delete, args=[context, fl]))
	if 'transcode' in plugins and context['selected'].type in ('video',):
		psp_path = pygui_globs['psp_path']
		if psp_path:
			from pygui.actions.jobs.transcode import transcode
			context['psp_path'] = psp_path
			act.append(ActionItem(_('Transcode to PSP\xe2\x84\xa2'), type_='action', action=transcode, args=[context]))
if menu_music or menu_video_photo:
	act.append(ActionItem(_('Search'), type_='action', action=push_search_menu, args=(context, stack)))
	if parental_control:
		if parent_mode:
			name = _('Set to child mode')
			action = switch_to_children_mode
			if user_config['security']['show_hidden']:
				pass
			val, name_hide = (True, _('Show hidden items'))
			act.append(ActionItem(name_hide, type_='action', action=display_hidden_items, args=[val, context, stack]))
		else:
			name = _('Set to parent mode')
			action = switch_to_parent_mode
		act.append(ActionItem(name, type_='action', action=action, args=[context, stack]))
if menu_tv and 'tv' in plugins:
	act.append(ActionItem(_('Display program guide'), type_='action', action=display_epg, args=[context['menu'], stack]))
if menu_net:
	act.append(ActionItem(_('Change login and password for net services'), type_='action', action=change_login_pwd_net, args=[context['menu'], stack]))
	act.append(ActionItem(_('Update Web Services content'), type_='action', action=refresh_net_content, args=[context]))
return act
]:
	i: 316&324&331&352&359(AL), 432(AF), 442(f), 0(f)
	o: 

nname: 442
n 442(None)[for plugin_name in ['marker_play']:
plugin_action = actions[plugin_name]
if not parent_mode:
	pass
context['parent_mode'] = parent_mode
if plugin_action.is_compatible(context):
	act.append(ActionItem(_(plugin_action.caption), type_='action', action=plugin_action.execute, args=(context,)))
	continue
]:
	i: 432(for)
	o: 553()

nname: 432
n 432(None)[]:
	i: 316&324&331&352&359(loop)
	o: 442(for), 553(AF)

nname: 316&324&331&352&359
n 316&324&331&352&359(None)[if not menu_tv and parent_actions and context['parent']['backend'] not in ('upnp', 'wyrecord') and (parent_mode or not parental_control):
	act.append(ActionItem(_('Duplicate marked items to "%(parent_caption)s"') % captions_dict, type_='action', action=execute_copy_marked_items, args=[context['parent'], fl]))
]:
	i: 0(t)
	o: 432(loop), 553(AL)

nname: 0
n 0(fl)[stack = pygui_globs['menustack']
menu_type = context['menu'].type
fl = markerlists().get(context['menu'].universe)
if fl is not None:
	fl.menu = context['menu']
parental_control = user_config['security']['parental_control']
parent_mode = user_config['security']['parent_mode']
menu_video_photo = menu_type in ('image', 'video', 'video_image', 'multiverse')
menu_music = menu_type in ('audio', 'multiverse')
menu_tv = menu_type in ('tv_navigator',)
menu_net = menu_type in ('net_services',)
captions_dict = {}
parent_actions, selected_actions = False, False
if context['parent'] and context['parent'] is not RootItem():
	captions_dict['parent_caption'] = ellipsize(context['parent'].name, 10)
	parent_actions = True
if context['selected'] and context['parent'] is not RootItem():
	captions_dict['selected_caption'] = ellipsize(context['selected'].name, 15)
	selected_actions = True
act = []
]:
	i: 
	o: 316&324&331&352&359(t), 553(f)

self.nodes: {0: <unpyclib.structure.node instance at 0x98cbfcc>, 553: <unpyclib.structure.node instance at 0x98cbd8c>, '316&324&331&352&359': <unpyclib.structure.node instance at 0x98cb9ac>, 432: <unpyclib.structure.node instance at 0x98bfc4c>, 442: <unpyclib.structure.node instance at 0xb7675bac>}
nname: 0
n 0(None)[from __future__ import absolute_import
name = 'Selected'
image = 'hand_selected'
category = 'navigator'
position = 4
default = True
unique = True
from pygui.actions.jobs.common import push_search_menu, push_thumbnail_menu, switch_to_children_mode, switch_to_parent_mode, display_hidden_items
from pygui.actions.jobs.fs import execute_delete, execute_rename, execute_reorder, execute_eject, execute_mkdir
from pygui.actions.jobs.marker import execute_burn_marker_list, execute_show_marker, execute_copy_marked_items
from pygui.actions.jobs.marker import execute_show_marker
from pygui.actions.jobs.records import execute_cancel_record, execute_rename_record
from pygui.actions.jobs.tv import display_epg
from pygui.actions.jobs.net import change_login_pwd_net, refresh_net_content
from pygui.config import plugins, user_config
from pygui.shared import pygui_globs
from pygui.markerlist import actions, markerlists
from pygui.item.core import ActionItem
from pygui.item.mediaitem import Playlist
from pygui.item.mediaitem.core import RootItem, TVRootItem, VideoItem
from peewee.formatters import ellipsize
def is_available(context):
	return True

def get_action_info_list(context):
	stack = pygui_globs['menustack']
	menu_type = context['menu'].type
	fl = markerlists().get(context['menu'].universe)
	if fl is not None:
		fl.menu = context['menu']
	parental_control = user_config['security']['parental_control']
	parent_mode = user_config['security']['parent_mode']
	menu_video_photo = menu_type in ('image', 'video', 'video_image', 'multiverse')
	menu_music = menu_type in ('audio', 'multiverse')
	menu_tv = menu_type in ('tv_navigator',)
	menu_net = menu_type in ('net_services',)
	captions_dict = {}
	parent_actions, selected_actions = False, False
	if context['parent'] and context['parent'] is not RootItem():
		captions_dict['parent_caption'] = ellipsize(context['parent'].name, 10)
		parent_actions = True
	if context['selected'] and context['parent'] is not RootItem():
		captions_dict['selected_caption'] = ellipsize(context['selected'].name, 15)
		selected_actions = True
	act = []

]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb766c62c>}
from __future__ import absolute_import
name = 'Selected'
image = 'hand_selected'
category = 'navigator'
position = 4
default = True
unique = True
from pygui.actions.jobs.common import push_search_menu, push_thumbnail_menu, switch_to_children_mode, switch_to_parent_mode, display_hidden_items
from pygui.actions.jobs.fs import execute_delete, execute_rename, execute_reorder, execute_eject, execute_mkdir
from pygui.actions.jobs.marker import execute_burn_marker_list, execute_show_marker, execute_copy_marked_items
from pygui.actions.jobs.marker import execute_show_marker
from pygui.actions.jobs.records import execute_cancel_record, execute_rename_record
from pygui.actions.jobs.tv import display_epg
from pygui.actions.jobs.net import change_login_pwd_net, refresh_net_content
from pygui.config import plugins, user_config
from pygui.shared import pygui_globs
from pygui.markerlist import actions, markerlists
from pygui.item.core import ActionItem
from pygui.item.mediaitem import Playlist
from pygui.item.mediaitem.core import RootItem, TVRootItem, VideoItem
from peewee.formatters import ellipsize
def is_available(context):
	return True

def get_action_info_list(context):
	stack = pygui_globs['menustack']
	menu_type = context['menu'].type
	fl = markerlists().get(context['menu'].universe)
	if fl is not None:
		fl.menu = context['menu']
	parental_control = user_config['security']['parental_control']
	parent_mode = user_config['security']['parent_mode']
	menu_video_photo = menu_type in ('image', 'video', 'video_image', 'multiverse')
	menu_music = menu_type in ('audio', 'multiverse')
	menu_tv = menu_type in ('tv_navigator',)
	menu_net = menu_type in ('net_services',)
	captions_dict = {}
	parent_actions, selected_actions = False, False
	if context['parent'] and context['parent'] is not RootItem():
		captions_dict['parent_caption'] = ellipsize(context['parent'].name, 10)
		parent_actions = True
	if context['selected'] and context['parent'] is not RootItem():
		captions_dict['selected_caption'] = ellipsize(context['selected'].name, 15)
		selected_actions = True
	act = []

