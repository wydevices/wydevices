# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 56
n 56(None)[]:
	i: 12(), 33()
	o: 

nname: 33
n 33(None)[wyvas.Viewer.update(self, *args, **kwargs)
]:
	i: 0(f)
	o: 56()

nname: 12
n 12(None)[self.rotate(kwargs['rotate'])
]:
	i: 0(t)
	o: 56()

nname: 0
n 0('rotate' in kwargs)[]:
	i: 
	o: 12(t), 33(f)

nname: 0
n 0(None)[if 'rotate' in kwargs:
	self.rotate(kwargs['rotate'])
else:
	wyvas.Viewer.update(self, *args, **kwargs)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb760b64c>}
nname: 6
n 6(None)[__doc__ = 'Specialization of the wyvas Viewer that can dispatch\n    rotation-inducing Louie signals.'
def update(self, *args, **args):
	if 'rotate' in kwargs:
		self.rotate(kwargs['rotate'])
	else:
		wyvas.Viewer.update(self, *args, **kwargs)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb7682fcc>}
nname: 0
n 0(None)[from __future__ import absolute_import
import wyvas
class Viewer(.):
	__doc__ = 'Specialization of the wyvas Viewer that can dispatch\n    rotation-inducing Louie signals.'
	def update(self, *args, **args):
		if 'rotate' in kwargs:
			self.rotate(kwargs['rotate'])
		else:
			wyvas.Viewer.update(self, *args, **kwargs)



]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb768292c>}
from __future__ import absolute_import
import wyvas
class Viewer(.):
	__doc__ = 'Specialization of the wyvas Viewer that can dispatch\n    rotation-inducing Louie signals.'
	def update(self, *args, **args):
		if 'rotate' in kwargs:
			self.rotate(kwargs['rotate'])
		else:
			wyvas.Viewer.update(self, *args, **kwargs)



