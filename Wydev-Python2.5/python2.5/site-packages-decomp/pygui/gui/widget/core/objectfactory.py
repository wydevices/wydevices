# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 81
n 81(None)[return tuple(rgba)
]:
	i: 63(), 80()
	o: 

nname: 80
n 80(None)[]:
	i: 39(f)
	o: 81()

nname: 63
n 63(None)[rgba.append(255)
]:
	i: 39(t)
	o: 81()

nname: 39
n 39(len(rgba) == 3)[del _[1]
for rgba in string.split():
]:
	i: 0(AF), 20()
	o: 63(t), 80(f)

nname: 20
n 20(None)[for i in string.split():
]:
	i: 0(for)
	o: 39()

nname: 0
n 0(None)[]:
	i: 
	o: 20(for), 39(AF)

nname: 39
n 39(None)[del _[1]
for rgba in string.split():
if len(rgba) == 3:
	rgba.append(255)
return tuple(rgba)
]:
	i: 0(AF), 20()
	o: 

nname: 20
n 20(None)[for i in string.split():
]:
	i: 0(for)
	o: 39()

nname: 0
n 0(None)[]:
	i: 
	o: 20(for), 39(AF)

self.nodes: {0: <unpyclib.structure.node instance at 0x85092cc>, 39: <unpyclib.structure.node instance at 0x84eae0c>, 20: <unpyclib.structure.node instance at 0x8504bac>}
nname: 0
n 0(None)[self.attributes_dict = dict(width=['resize', None], height=['resize', None], left=['move', None], right=['move', None], top=['move', None], bottom=['move', None], hcenter=['move', None], vcenter=['move', None], name=['set_name', None], opacity=['set_opacity', int], color=['set_color', color], layer=['set_layer', int], visible=['set_visible', boolean], preserve_aspect=['set_aspect', boolean], keep_real_size=['set_keep_real_size', boolean_to_int])
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ecaac>}
nname: 0
n 0(None)[return Object()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea7ec>}
nname: 0
n 0(None)[return x
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x85aceec>}
nname: 235
n 235(None)[]:
	i: 0(AL), 234()
	o: 

nname: 234
n 234(None)[]:
	i: 50(AF), 231()
	o: 235()

nname: 231
n 231(None)[]:
	i: 229(AE)
	o: 234()

nname: 229
n 229(None)[]:
	i: 197(f), 207()
	o: 231(AE)

nname: 207
n 207(None)[#, e
PRINT_EXCEPTION(e, True)
continue
]:
	i: 197(t)
	o: 229()

nname: 197
n 197(<dummy_ex3> EXC_MATCH AttributeError)[]:
	i: 57(except), 148()
	o: 207(t), 229(f)

nname: 148
n 148(None)[getattr(object, self.attributes_dict[att][0])(**{att: cast_func(i)})
continue
]:
	i: 125(), 147()
	o: 197()

nname: 147
n 147(None)[]:
	i: 100(f)
	o: 148()

nname: 125
n 125(None)[]:
	i: 100(t)
	o: 148()

nname: 100
n 100(i.startswith('py:'))[]:
	i: 86(), 99()
	o: 125(t), 147(f)

nname: 99
n 99(None)[]:
	i: 63(t)
	o: 100()

nname: 86
n 86(None)[def cast_func(x):
	return x

]:
	i: 63(f)
	o: 100()

nname: 63
n 63(cast_func)[]:
	i: 57(try)
	o: 86(f), 99(t)

nname: 57
n 57(None)[for att in kwargs:
]:
	i: 50(for)
	o: 63(try), 197(except)

nname: 50
n 50(None)[del _[1]
]:
	i: 3(AF), 46()
	o: 57(for), 234(AF)

nname: 46
n 46(None)[]:
	i: 17(f), 35()
	o: 50()

nname: 35
n 35(None)[continue
]:
	i: 17(t)
	o: 46()

nname: 17
n 17(atr in self.attributes_dict)[for atr in kwargs:
]:
	i: 3(for)
	o: 35(t), 46(f)

nname: 3
n 3(None)[]:
	i: 0(loop)
	o: 17(for), 50(AF)

nname: 0
n 0(None)[]:
	i: 
	o: 3(loop), 235(AL)

nname: 235
n 235(None)[]:
	i: 0(AL), 50(AF), 197(AE)
	o: 

nname: 197
n 197(None)[except AttributeError, e:
	PRINT_EXCEPTION(e, True)
	continue
]:
	i: 100(), 57()
	o: 235(AE)

nname: 100
n 100(None)[if i.startswith('py:'):
	pass
getattr(object, self.attributes_dict[att][0])(**{att: cast_func(i)})
continue
]:
	i: 57()
	o: 197()

nname: 57
n 57(None)[for att in kwargs:
try:
	if not cast_func:
		def cast_func(x):
			return x

]:
	i: 50(for)
	o: 100(), 197()

nname: 50
n 50(None)[del _[1]
]:
	i: 3(AF), 17()
	o: 57(for), 235(AF)

nname: 17
n 17(None)[for atr in kwargs:
if atr in self.attributes_dict:
	continue
]:
	i: 3(for)
	o: 50()

nname: 3
n 3(None)[]:
	i: 0(loop)
	o: 17(for), 50(AF)

nname: 0
n 0(None)[]:
	i: 
	o: 3(loop), 235(AL)

self.nodes: {0: <unpyclib.structure.node instance at 0x84ecccc>, 3: <unpyclib.structure.node instance at 0x84ecd4c>, 100: <unpyclib.structure.node instance at 0x85acacc>, 197: <unpyclib.structure.node instance at 0x85acecc>, 235: <unpyclib.structure.node instance at 0x85aa6cc>, 17: <unpyclib.structure.node instance at 0x85ac2ec>, 50: <unpyclib.structure.node instance at 0x85aa0cc>, 57: <unpyclib.structure.node instance at 0x85ac8cc>}
nname: 36
n 36(None)[return obj
]:
	i: 18(), 35()
	o: 

nname: 35
n 35(None)[]:
	i: 0(f)
	o: 36()

nname: 18
n 18(None)[parent.add_child(obj)
]:
	i: 0(t)
	o: 36()

nname: 0
n 0(parent)[obj = self._get_object()
]:
	i: 
	o: 18(t), 35(f)

nname: 0
n 0(None)[obj = self._get_object()
if parent:
	parent.add_child(obj)
return obj
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84eabcc>}
nname: 0
n 0(None)[self.apply_attributes(object, **node.attrib)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84eae6c>}
nname: 6
n 6(None)[__doc__ = "\n    Attributes_dict refers to methods defined in the object's class\n    (image, listing, text, rectangle, etc...).\n    Second parameters refers to a specific cast method when needed.\n    (see int_tuple, boolean, int_tuple_list, etc...)\n    "
def __init__(self, att=None):
	self.attributes_dict = dict(width=['resize', None], height=['resize', None], left=['move', None], right=['move', None], top=['move', None], bottom=['move', None], hcenter=['move', None], vcenter=['move', None], name=['set_name', None], opacity=['set_opacity', int], color=['set_color', color], layer=['set_layer', int], visible=['set_visible', boolean], preserve_aspect=['set_aspect', boolean], keep_real_size=['set_keep_real_size', boolean_to_int])
	return None

def _get_object(self):
	return Object()

def apply_attributes(self, object, **kwargs):
	pass

def add_child(self, node, parent):
	obj = self._get_object()
	if parent:
		parent.add_child(obj)
	return obj

def specify(self, node, object):
	self.apply_attributes(object, **node.attrib)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7f0c>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7dac>}
nname: 0
n 0(None)[return Container()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7eac>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)

def _get_object(self):
	return Container()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e740c>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
ad = self.attributes_dict
ad['text'] = ['set_text', None]
ad['font'] = ['set_font', None]
ad['size'] = ['set_font', int]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84eadac>}
nname: 0
n 0(None)[return Text()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e756c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	ad = self.attributes_dict
	ad['text'] = ['set_text', None]
	ad['font'] = ['set_font', None]
	ad['size'] = ['set_font', int]
	return None

def _get_object(self):
	return Text()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7b4c>}
nname: 120
n 120(None)[ad['text'] = ['set_text', None]
ad['style'] = ['set_style', None]
ad['pause'] = ['set_length', float]
return None
]:
	i: 58(), 102(), 118(AE)
	o: 

nname: 118
n 118(None)[]:
	i: 86(f)
	o: 120(AE)

nname: 102
n 102(None)[self.maxlen = None
]:
	i: 86(t)
	o: 120()

nname: 86
n 86(<dummy_ex3> EXC_MATCH (TypeError, ValueError))[]:
	i: 0(except)
	o: 102(t), 118(f)

nname: 58
n 58(None)[self.maxlen = int(att.get('maxlen'))
]:
	i: 0(try)
	o: 120()

nname: 0
n 0(None)[CreateObject.__init__(self, att)
ad = self.attributes_dict
self.autoscroll = 'autoscroll' in att
self.i18n = 'i18n' in att
]:
	i: 
	o: 58(try), 86(except)

nname: 86
n 86(None)[except (TypeError, ValueError):
	self.maxlen = None
ad['text'] = ['set_text', None]
ad['style'] = ['set_style', None]
ad['pause'] = ['set_length', float]
return None
]:
	i: 0()
	o: 

nname: 0
n 0(None)[CreateObject.__init__(self, att)
ad = self.attributes_dict
self.autoscroll = 'autoscroll' in att
self.i18n = 'i18n' in att
try:
	self.maxlen = int(att.get('maxlen'))
]:
	i: 
	o: 86()

nname: 0
n 0(None)[CreateObject.__init__(self, att)
ad = self.attributes_dict
self.autoscroll = 'autoscroll' in att
self.i18n = 'i18n' in att
try:
	self.maxlen = int(att.get('maxlen'))
except (TypeError, ValueError):
	self.maxlen = None
ad['text'] = ['set_text', None]
ad['style'] = ['set_style', None]
ad['pause'] = ['set_length', float]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84eafec>}
nname: 0
n 0(None)[return TextBlock(autoscroll=self.autoscroll, max_width=self.maxlen, i18n=self.i18n)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e762c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	ad = self.attributes_dict
	self.autoscroll = 'autoscroll' in att
	self.i18n = 'i18n' in att
	try:
		self.maxlen = int(att.get('maxlen'))
	except (TypeError, ValueError):
		self.maxlen = None
	ad['text'] = ['set_text', None]
	ad['style'] = ['set_style', None]
	ad['pause'] = ['set_length', float]
	return None

def _get_object(self):
	return TextBlock(autoscroll=self.autoscroll, max_width=self.maxlen, i18n=self.i18n)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7a0c>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
self.attributes_dict['style'] = ['set_style', None]
self.attributes_dict['time_format'] = ['set_time_format', None]
self.attributes_dict['global_format'] = ['set_global_format', None]
self.attributes_dict['date_format'] = ['set_date_format', None]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea80c>}
nname: 0
n 0(None)[return Clock()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e778c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	self.attributes_dict['style'] = ['set_style', None]
	self.attributes_dict['time_format'] = ['set_time_format', None]
	self.attributes_dict['global_format'] = ['set_global_format', None]
	self.attributes_dict['date_format'] = ['set_date_format', None]
	return None

def _get_object(self):
	return Clock()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e740c>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
self.attributes_dict['repository'] = ['set_repository', None]
self.attributes_dict['file'] = ['load', None]
self.file = att.get('file', None)
self.repository = att.get('repository', None)
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea7ec>}
nname: 0
n 0(None)[return Image(image_or_file=self.file, repository=self.repository)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7dac>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	self.attributes_dict['repository'] = ['set_repository', None]
	self.attributes_dict['file'] = ['load', None]
	self.file = att.get('file', None)
	self.repository = att.get('repository', None)
	return None

def _get_object(self):
	return Image(image_or_file=self.file, repository=self.repository)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7b4c>}
nname: 0
n 0(None)[return Viewer(image_or_file=self.file, repository=self.repository)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7eac>}
nname: 6
n 6(None)[def _get_object(self):
	return Viewer(image_or_file=self.file, repository=self.repository)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7dcc>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
ad = self.attributes_dict
ad['pos'] = ['set', int]
ad['max'] = ['set', int]
ad['indicator'] = ['set_indicator', None]
ad['bar'] = ['set_bar', None]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84eac2c>}
nname: 0
n 0(None)[return Progressbar()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7e6c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	ad = self.attributes_dict
	ad['pos'] = ['set', int]
	ad['max'] = ['set', int]
	ad['indicator'] = ['set_indicator', None]
	ad['bar'] = ['set_bar', None]
	return None

def _get_object(self):
	return Progressbar()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7aec>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
ad = self.attributes_dict
ad['indicator'] = ['set_indicator', None]
ad['live'] = ['set_live', None]
ad['direct'] = ['set_direct', None]
ad['timeshift'] = ['set_timeshift', None]
ad['bar'] = ['set_bar', None]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea12c>}
nname: 0
n 0(None)[return Programbar()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7dec>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	ad = self.attributes_dict
	ad['indicator'] = ['set_indicator', None]
	ad['live'] = ['set_live', None]
	ad['direct'] = ['set_direct', None]
	ad['timeshift'] = ['set_timeshift', None]
	ad['bar'] = ['set_bar', None]
	return None

def _get_object(self):
	return Programbar()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7acc>}
nname: 0
n 0(None)[CreateProgramBar.__init__(self, att)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e778c>}
nname: 0
n 0(None)[return ProgramTimeShiftBar()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7dac>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateProgramBar.__init__(self, att)

def _get_object(self):
	return ProgramTimeShiftBar()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7d0c>}
nname: 0
n 0(None)[CreateProgramTimeShiftBar.__init__(self, att)
self.attributes_dict['record'] = ['set_record', None]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea72c>}
nname: 0
n 0(None)[return ProgramRecordTimeShiftBar()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e762c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateProgramTimeShiftBar.__init__(self, att)
	self.attributes_dict['record'] = ['set_record', None]
	return None

def _get_object(self):
	return ProgramRecordTimeShiftBar()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7aec>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
ad = self.attributes_dict
ad['bar'] = ['set_bar', None]
ad['reference'] = ['set_reference', int]
ad['period'] = ['set_period', int]
ad['duration'] = ['set_duration', int]
ad['begin'] = ['set_begin', int]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea12c>}
nname: 0
n 0(None)[return Timebar()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7f4c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	ad = self.attributes_dict
	ad['bar'] = ['set_bar', None]
	ad['reference'] = ['set_reference', int]
	ad['period'] = ['set_period', int]
	ad['duration'] = ['set_duration', int]
	ad['begin'] = ['set_begin', int]
	return None

def _get_object(self):
	return Timebar()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7acc>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
ad = self.attributes_dict
ad['depth'] = ['set_depth', int]
ad['max_depth'] = ['set_max_depth', int]
ad['repository'] = ['set_repository', None]
ad['folder_icon'] = ['set_folder_icon', None]
ad['plus_icon'] = ['set_plus_icon', None]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ead2c>}
nname: 0
n 0(None)[return DepthBar()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e778c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	ad = self.attributes_dict
	ad['depth'] = ['set_depth', int]
	ad['max_depth'] = ['set_max_depth', int]
	ad['repository'] = ['set_repository', None]
	ad['folder_icon'] = ['set_folder_icon', None]
	ad['plus_icon'] = ['set_plus_icon', None]
	return None

def _get_object(self):
	return DepthBar()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7d0c>}
nname: 0
n 0(None)[CreateObject.__init__(self, att)
self._style = att['style_name']
ad = self.attributes_dict
ad['positions'] = ['set_positions', int_tuple_list]
ad['pre_position'] = ['set_extra_positions', int_tuple]
ad['post_position'] = ['set_extra_positions', int_tuple]
ad['centered'] = ['set_centered', boolean]
ad['duration'] = ['set_duration', float]
ad['selected_item'] = ['set_selected_item', int]
ad['bar'] = ['set_bar', None]
ad['repository'] = ['set_repository', None]
ad['reversed_update'] = ['set_reversed_update', boolean]
ad['anim_type'] = ['set_anim_type', None]
ad['cyclic'] = ['set_cyclic', boolean]
ad['extension'] = ['update_style', string_tuple]
ad['maxlen'] = ['update_style', int]
ad['edit_offset'] = ['update_style', int]
ad['enumerated'] = ['update_style', boolean]
ad['page_jump'] = ['update_style', None]
ad['pos_policy'] = ['update_style', None]
ad['fade_pre_post'] = ['update_style', boolean]
ad['preserve_icon_aspect'] = ['update_style', boolean_to_int]
ad['preserve_icon_size'] = ['update_style', boolean_to_int]
ad['selected_marker_image'] = ['update_style', None]
ad['marker_image'] = ['update_style', None]
ad['font_style'] = ['update_style', None]
ad['selected_font_style'] = ['update_style', None]
ad['unsensitive_font_style'] = ['update_style', None]
ad['text_size'] = ['update_style', string_tuple]
ad['selected_text_size'] = ['update_style', string_tuple]
ad['unsensitive_text_size'] = ['update_style', string_tuple]
ad['text_color'] = ['update_style', color]
ad['selected_text_color'] = ['update_style', color]
ad['unsensitive_text_color'] = ['update_style', color]
ad['icon_size'] = ['update_style', string_tuple]
ad['selected_icon_size'] = ['update_style', string_tuple]
ad['unsensitive_icon_size'] = ['update_style', string_tuple]
ad['marker_offset'] = ['update_style', string_tuple]
ad['marker_size'] = ['update_style', string_tuple]
ad['text_offset'] = ['update_style', string_tuple]
ad['selected_text_offset'] = ['update_style', string_tuple]
ad['autoscroll'] = ['update_style', boolean]
ad['selected_item_size'] = ['update_style', string_tuple]
ad['item_size'] = ['update_style', string_tuple]
ad['opacity'] = ['update_style', int]
ad['progress_bar_background'] = ['update_style', None]
ad['progress_bar_foreground'] = ['update_style', None]
ad['progress_bar_offset'] = ['update_style', string_tuple]
ad['progress_bar_size'] = ['update_style', string_tuple]
ad['rec_icon'] = ['update_style', None]
ad['rec_icon_offset'] = ['update_style', string_tuple]
ad['time_offset'] = ['update_style', string_tuple]
ad['time_font_style'] = ['update_style', None]
ad['time_color'] = ['update_style', color]
ad['title_font_style'] = ['update_style', None]
ad['title_color'] = ['update_style', color]
ad['selected_time_font_style'] = ['update_style', None]
ad['selected_time_color'] = ['update_style', color]
ad['selected_title_font_style'] = ['update_style', None]
ad['selected_title_color'] = ['update_style', color]
ad['selected_blurb_time_font_style'] = ['update_style', None]
ad['selected_blurb_time_color'] = ['update_style', color]
ad['selected_blurb_title_font_style'] = ['update_style', None]
ad['selected_blurb_title_color'] = ['update_style', color]
ad['selected_blurb_offset'] = ['update_style', string_tuple]
ad['selected_blurb_text_offset'] = ['update_style', string_tuple]
ad['selected_blurb_zoom'] = ['update_style', None]
ad['selection_cursor_image'] = ['update_style', None]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x85a680c>}
nname: 73
n 73(None)[l.style_name = self._style
return l
]:
	i: 18(), 50(), 63()
	o: 

nname: 63
n 63(None)[l = DefaultListing()
]:
	i: 31(f)
	o: 73()

nname: 50
n 50(None)[l = HybridListing()
]:
	i: 31(t)
	o: 73()

nname: 31
n 31(self._style.endswith('_hybrid'))[]:
	i: 0(f)
	o: 50(t), 63(f)

nname: 18
n 18(None)[l = FixedListing()
]:
	i: 0(t)
	o: 73()

nname: 0
n 0(self._style.endswith('_fixed'))[]:
	i: 
	o: 18(t), 31(f)

nname: 0
n 0(None)[if self._style.endswith('_fixed'):
	l = FixedListing()
else:
	if self._style.endswith('_hybrid'):
		l = HybridListing()
	else:
		l = DefaultListing()
l.style_name = self._style
return l
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea88c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateObject.__init__(self, att)
	self._style = att['style_name']
	ad = self.attributes_dict
	ad['positions'] = ['set_positions', int_tuple_list]
	ad['pre_position'] = ['set_extra_positions', int_tuple]
	ad['post_position'] = ['set_extra_positions', int_tuple]
	ad['centered'] = ['set_centered', boolean]
	ad['duration'] = ['set_duration', float]
	ad['selected_item'] = ['set_selected_item', int]
	ad['bar'] = ['set_bar', None]
	ad['repository'] = ['set_repository', None]
	ad['reversed_update'] = ['set_reversed_update', boolean]
	ad['anim_type'] = ['set_anim_type', None]
	ad['cyclic'] = ['set_cyclic', boolean]
	ad['extension'] = ['update_style', string_tuple]
	ad['maxlen'] = ['update_style', int]
	ad['edit_offset'] = ['update_style', int]
	ad['enumerated'] = ['update_style', boolean]
	ad['page_jump'] = ['update_style', None]
	ad['pos_policy'] = ['update_style', None]
	ad['fade_pre_post'] = ['update_style', boolean]
	ad['preserve_icon_aspect'] = ['update_style', boolean_to_int]
	ad['preserve_icon_size'] = ['update_style', boolean_to_int]
	ad['selected_marker_image'] = ['update_style', None]
	ad['marker_image'] = ['update_style', None]
	ad['font_style'] = ['update_style', None]
	ad['selected_font_style'] = ['update_style', None]
	ad['unsensitive_font_style'] = ['update_style', None]
	ad['text_size'] = ['update_style', string_tuple]
	ad['selected_text_size'] = ['update_style', string_tuple]
	ad['unsensitive_text_size'] = ['update_style', string_tuple]
	ad['text_color'] = ['update_style', color]
	ad['selected_text_color'] = ['update_style', color]
	ad['unsensitive_text_color'] = ['update_style', color]
	ad['icon_size'] = ['update_style', string_tuple]
	ad['selected_icon_size'] = ['update_style', string_tuple]
	ad['unsensitive_icon_size'] = ['update_style', string_tuple]
	ad['marker_offset'] = ['update_style', string_tuple]
	ad['marker_size'] = ['update_style', string_tuple]
	ad['text_offset'] = ['update_style', string_tuple]
	ad['selected_text_offset'] = ['update_style', string_tuple]
	ad['autoscroll'] = ['update_style', boolean]
	ad['selected_item_size'] = ['update_style', string_tuple]
	ad['item_size'] = ['update_style', string_tuple]
	ad['opacity'] = ['update_style', int]
	ad['progress_bar_background'] = ['update_style', None]
	ad['progress_bar_foreground'] = ['update_style', None]
	ad['progress_bar_offset'] = ['update_style', string_tuple]
	ad['progress_bar_size'] = ['update_style', string_tuple]
	ad['rec_icon'] = ['update_style', None]
	ad['rec_icon_offset'] = ['update_style', string_tuple]
	ad['time_offset'] = ['update_style', string_tuple]
	ad['time_font_style'] = ['update_style', None]
	ad['time_color'] = ['update_style', color]
	ad['title_font_style'] = ['update_style', None]
	ad['title_color'] = ['update_style', color]
	ad['selected_time_font_style'] = ['update_style', None]
	ad['selected_time_color'] = ['update_style', color]
	ad['selected_title_font_style'] = ['update_style', None]
	ad['selected_title_color'] = ['update_style', color]
	ad['selected_blurb_time_font_style'] = ['update_style', None]
	ad['selected_blurb_time_color'] = ['update_style', color]
	ad['selected_blurb_title_font_style'] = ['update_style', None]
	ad['selected_blurb_title_color'] = ['update_style', color]
	ad['selected_blurb_offset'] = ['update_style', string_tuple]
	ad['selected_blurb_text_offset'] = ['update_style', string_tuple]
	ad['selected_blurb_zoom'] = ['update_style', None]
	ad['selection_cursor_image'] = ['update_style', None]
	return None

def _get_object(self):
	if self._style.endswith('_fixed'):
		l = FixedListing()
	else:
		if self._style.endswith('_hybrid'):
			l = HybridListing()
		else:
			l = DefaultListing()
	l.style_name = self._style
	return l

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7aec>}
nname: 0
n 0(None)[CreateList.__init__(self, att)
ad = self.attributes_dict
ad['pre_positions'] = ['set_extra_positions', int_tuple_list]
ad['post_positions'] = ['set_extra_positions', int_tuple_list]
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84eaa2c>}
nname: 0
n 0(None)[out = Grid()
out.style_name = self._style
return out
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7e6c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateList.__init__(self, att)
	ad = self.attributes_dict
	ad['pre_positions'] = ['set_extra_positions', int_tuple_list]
	ad['post_positions'] = ['set_extra_positions', int_tuple_list]

def _get_object(self):
	out = Grid()
	out.style_name = self._style
	return out

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7acc>}
nname: 0
n 0(None)[CreateImage.__init__(self, att)
self.attributes_dict['url'] = ['send_data', None]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea72c>}
nname: 0
n 0(None)[return Browser()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7aac>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateImage.__init__(self, att)
	self.attributes_dict['url'] = ['send_data', None]
	return None

def _get_object(self):
	return Browser()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7d0c>}
nname: 0
n 0(None)[from ..cursor import Cursor
return Cursor()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7f2c>}
nname: 6
n 6(None)[def _get_object(self):
	from ..cursor import Cursor
	return Cursor()

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e756c>}
nname: 0
n 0(None)[CreateImage.__init__(self, att)
self.atomic_size = int_tuple(att['real_size'])
self.attributes_dict['file'] = ['send_data', None]
self.attributes_dict['sleep'] = ['send_data', None]
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ea52c>}
nname: 0
n 0(None)[return Animage(size=self.atomic_size)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84e7a2c>}
nname: 6
n 6(None)[def __init__(self, att=None):
	CreateImage.__init__(self, att)
	self.atomic_size = int_tuple(att['real_size'])
	self.attributes_dict['file'] = ['send_data', None]
	self.attributes_dict['sleep'] = ['send_data', None]
	return None

def _get_object(self):
	return Animage(size=self.atomic_size)

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e790c>}
nname: 0
n 0(None)[self.objectFactory = factory.Factory()
reg = self.objectFactory.register
reg('container', CreateContainer, att=None)
reg('text', CreateText, att=None)
reg('textblock', CreateTextBlock, att=['autoscroll', 'maxlen', 'i18n'])
reg('clock', CreateClock, att=None)
reg('image', CreateImage, att=None)
reg('viewer', CreateViewer, att=None)
reg('progressbar', CreateProgressBar, att=None)
reg('list', CreateList, att=['style_name'])
reg('grid', CreateGrid, att=['style_name'])
reg('timebar', CreateTimeBar, att=None)
reg('programbar', CreateProgramBar, att=None)
reg('depthbar', CreateDepthBar, att=None)
reg('programtimeshiftbar', CreateProgramTimeShiftBar, att=None)
reg('programrecordtimeshiftbar', CreateProgramRecordTimeShiftBar, att=None)
reg('webbrowser', CreateWebBrowser, att=None)
reg('cursor', CreateCursor, att=None)
reg('animage', CreateAnimage, att=['real_size'])
return None
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0x84ec66c>}
nname: 339
n 339(None)[return obj
]:
	i: 325(), 338()
	o: 

nname: 338
n 338(None)[]:
	i: 297(f)
	o: 339()

nname: 325
n 325(None)[obj._animations = animations
]:
	i: 297(t)
	o: 339()

nname: 297
n 297(parent is None)[creator.specify(node, obj)
]:
	i: 123(AL), 296()
	o: 325(t), 338(f)

nname: 296
n 296(None)[]:
	i: 126(AF), 293()
	o: 297()

nname: 293
n 293(None)[]:
	i: 155(JA), 224(JA), 270()
	o: 296()

nname: 270
n 270(None)[self.create(subnode, menu, obj, animations)
]:
	i: 133(f), 267()
	o: 293()

nname: 224
n 224(None)[PRINT_EXCEPTION()
log.debug('animation %s : %s has no correspondance' % (subnode.tag, subnode.attrib))
]:
	i: 151(except)
	o: 293(JA)

nname: 155
n 155(None)[animation = ObjectCreator.animation_creator.create(subnode, obj)
louie_connect(receiver=animation.play, signal=animation.event, sender=menu)
animations.append(animation)
]:
	i: 151(try)
	o: 293(JA)

nname: 151
n 151(None)[]:
	i: 133(t)
	o: 155(try), 224(except)

nname: 133
n 133(subnode.tag == 'animation')[for subnode in node:
]:
	i: 126(for)
	o: 151(t), 270(f)

nname: 126
n 126(None)[]:
	i: 123(loop)
	o: 133(for), 296(AF)

nname: 123
n 123(None)[]:
	i: 112(), 122()
	o: 126(loop), 297(AL)

nname: 122
n 122(None)[]:
	i: 49(f)
	o: 123()

nname: 112
n 112(None)[animations = []
]:
	i: 49(t)
	o: 123()

nname: 49
n 49(animations is None)[creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
obj = creator.add_child(node, parent)
]:
	i: 21(), 48()
	o: 112(t), 122(f)

nname: 48
n 48(None)[]:
	i: 0(t)
	o: 49()

nname: 21
n 21(None)[log.error('object %s does not appear in readable objects list', node.tag)
return None
]:
	i: 0(f)
	o: 49()

nname: 0
n 0(hasattr(self.objectFactory, node.tag))[]:
	i: 
	o: 21(f), 48(t)

nname: 297
n 297(None)[creator.specify(node, obj)
if parent is None:
	obj._animations = animations
return obj
]:
	i: 123(AL), 126(AF), 224(JA), 270()
	o: 

nname: 270
n 270(None)[self.create(subnode, menu, obj, animations)
]:
	i: 133(f), 267()
	o: 297()

nname: 224
n 224(None)[except:
	PRINT_EXCEPTION()
	log.debug('animation %s : %s has no correspondance' % (subnode.tag, subnode.attrib))
]:
	i: 151()
	o: 297(JA)

nname: 151
n 151(None)[try:
	animation = ObjectCreator.animation_creator.create(subnode, obj)
	louie_connect(receiver=animation.play, signal=animation.event, sender=menu)
	animations.append(animation)
]:
	i: 133(t)
	o: 224()

nname: 133
n 133(subnode.tag == 'animation')[for subnode in node:
]:
	i: 126(for)
	o: 151(t), 270(f)

nname: 126
n 126(None)[]:
	i: 123(loop)
	o: 133(for), 297(AF)

nname: 123
n 123(None)[]:
	i: 0()
	o: 126(loop), 297(AL)

nname: 0
n 0(None)[if not hasattr(self.objectFactory, node.tag):
	log.error('object %s does not appear in readable objects list', node.tag)
	return None
creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
obj = creator.add_child(node, parent)
if animations is None:
	animations = []
]:
	i: 
	o: 123()

nname: 297
n 297(None)[creator.specify(node, obj)
if parent is None:
	obj._animations = animations
return obj
]:
	i: 0(AL), 126(AF), 151(JA), 270()
	o: 

nname: 270
n 270(None)[self.create(subnode, menu, obj, animations)
]:
	i: 133(f), 267()
	o: 297()

nname: 151
n 151(None)[try:
	animation = ObjectCreator.animation_creator.create(subnode, obj)
	louie_connect(receiver=animation.play, signal=animation.event, sender=menu)
	animations.append(animation)
except:
	PRINT_EXCEPTION()
	log.debug('animation %s : %s has no correspondance' % (subnode.tag, subnode.attrib))
]:
	i: 133(t)
	o: 297(JA)

nname: 133
n 133(subnode.tag == 'animation')[for subnode in node:
]:
	i: 126(for)
	o: 151(t), 270(f)

nname: 126
n 126(None)[]:
	i: 0(loop)
	o: 133(for), 297(AF)

nname: 0
n 0(None)[if not hasattr(self.objectFactory, node.tag):
	log.error('object %s does not appear in readable objects list', node.tag)
	return None
creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
obj = creator.add_child(node, parent)
if animations is None:
	animations = []
]:
	i: 
	o: 126(loop), 297(AL)

nname: 297
n 297(None)[creator.specify(node, obj)
if parent is None:
	obj._animations = animations
return obj
]:
	i: 0(AL), 126(AF), 267(JA)
	o: 

nname: 267
n 267(None)[267for subnode in node:
if subnode.tag == 'animation':
	try:
		animation = ObjectCreator.animation_creator.create(subnode, obj)
		louie_connect(receiver=animation.play, signal=animation.event, sender=menu)
		animations.append(animation)
	except:
		PRINT_EXCEPTION()
		log.debug('animation %s : %s has no correspondance' % (subnode.tag, subnode.attrib))
else:
	self.create(subnode, menu, obj, animations)
]:
	i: 266(AE)
	o: 297(JA)

nname: 126
n 126(None)[]:
	i: 0(loop)
	o: 267(for), 297(AF)

nname: 0
n 0(None)[if not hasattr(self.objectFactory, node.tag):
	log.error('object %s does not appear in readable objects list', node.tag)
	return None
creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
obj = creator.add_child(node, parent)
if animations is None:
	animations = []
]:
	i: 
	o: 126(loop), 297(AL)

self.nodes: {0: <unpyclib.structure.node instance at 0x85ace6c>, 297: <unpyclib.structure.node instance at 0x85acaec>, 266: <unpyclib.structure.node instance at 0x84ec86c>, 267: <unpyclib.structure.node instance at 0x85ac8cc>, 126: <unpyclib.structure.node instance at 0x84ec5ec>}
nname: 6
n 6(None)[animation_creator = AnimationCreator()
def __init__(self):
	self.objectFactory = factory.Factory()
	reg = self.objectFactory.register
	reg('container', CreateContainer, att=None)
	reg('text', CreateText, att=None)
	reg('textblock', CreateTextBlock, att=['autoscroll', 'maxlen', 'i18n'])
	reg('clock', CreateClock, att=None)
	reg('image', CreateImage, att=None)
	reg('viewer', CreateViewer, att=None)
	reg('progressbar', CreateProgressBar, att=None)
	reg('list', CreateList, att=['style_name'])
	reg('grid', CreateGrid, att=['style_name'])
	reg('timebar', CreateTimeBar, att=None)
	reg('programbar', CreateProgramBar, att=None)
	reg('depthbar', CreateDepthBar, att=None)
	reg('programtimeshiftbar', CreateProgramTimeShiftBar, att=None)
	reg('programrecordtimeshiftbar', CreateProgramRecordTimeShiftBar, att=None)
	reg('webbrowser', CreateWebBrowser, att=None)
	reg('cursor', CreateCursor, att=None)
	reg('animage', CreateAnimage, att=['real_size'])
	return None

def create(self, node, menu, parent=None, animations=None):
	if not hasattr(self.objectFactory, node.tag):
		log.error('object %s does not appear in readable objects list', node.tag)
		return None
	creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
	obj = creator.add_child(node, parent)
	if animations is None:
		animations = []

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0x84e7b2c>}
nname: 694
n 694(None)[from .macros import py_macro
def color(string):
	pass

class CreateObject(object):
	__doc__ = "\n    Attributes_dict refers to methods defined in the object's class\n    (image, listing, text, rectangle, etc...).\n    Second parameters refers to a specific cast method when needed.\n    (see int_tuple, boolean, int_tuple_list, etc...)\n    "
	def __init__(self, att=None):
		self.attributes_dict = dict(width=['resize', None], height=['resize', None], left=['move', None], right=['move', None], top=['move', None], bottom=['move', None], hcenter=['move', None], vcenter=['move', None], name=['set_name', None], opacity=['set_opacity', int], color=['set_color', color], layer=['set_layer', int], visible=['set_visible', boolean], preserve_aspect=['set_aspect', boolean], keep_real_size=['set_keep_real_size', boolean_to_int])
		return None

	def _get_object(self):
		return Object()

	def apply_attributes(self, object, **kwargs):
		pass

	def add_child(self, node, parent):
		obj = self._get_object()
		if parent:
			parent.add_child(obj)
		return obj

	def specify(self, node, object):
		self.apply_attributes(object, **node.attrib)



class CreateContainer(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)

	def _get_object(self):
		return Container()



class CreateText(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['text'] = ['set_text', None]
		ad['font'] = ['set_font', None]
		ad['size'] = ['set_font', int]
		return None

	def _get_object(self):
		return Text()



class CreateTextBlock(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		self.autoscroll = 'autoscroll' in att
		self.i18n = 'i18n' in att
		try:
			self.maxlen = int(att.get('maxlen'))
		except (TypeError, ValueError):
			self.maxlen = None
		ad['text'] = ['set_text', None]
		ad['style'] = ['set_style', None]
		ad['pause'] = ['set_length', float]
		return None

	def _get_object(self):
		return TextBlock(autoscroll=self.autoscroll, max_width=self.maxlen, i18n=self.i18n)



class CreateClock(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self.attributes_dict['style'] = ['set_style', None]
		self.attributes_dict['time_format'] = ['set_time_format', None]
		self.attributes_dict['global_format'] = ['set_global_format', None]
		self.attributes_dict['date_format'] = ['set_date_format', None]
		return None

	def _get_object(self):
		return Clock()



class CreateImage(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self.attributes_dict['repository'] = ['set_repository', None]
		self.attributes_dict['file'] = ['load', None]
		self.file = att.get('file', None)
		self.repository = att.get('repository', None)
		return None

	def _get_object(self):
		return Image(image_or_file=self.file, repository=self.repository)



class CreateViewer(CreateImage):
	def _get_object(self):
		return Viewer(image_or_file=self.file, repository=self.repository)



class CreateProgressBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['pos'] = ['set', int]
		ad['max'] = ['set', int]
		ad['indicator'] = ['set_indicator', None]
		ad['bar'] = ['set_bar', None]
		return None

	def _get_object(self):
		return Progressbar()



class CreateProgramBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['indicator'] = ['set_indicator', None]
		ad['live'] = ['set_live', None]
		ad['direct'] = ['set_direct', None]
		ad['timeshift'] = ['set_timeshift', None]
		ad['bar'] = ['set_bar', None]
		return None

	def _get_object(self):
		return Programbar()



class CreateProgramTimeShiftBar(CreateProgramBar):
	def __init__(self, att=None):
		CreateProgramBar.__init__(self, att)

	def _get_object(self):
		return ProgramTimeShiftBar()



class CreateProgramRecordTimeShiftBar(CreateProgramTimeShiftBar):
	def __init__(self, att=None):
		CreateProgramTimeShiftBar.__init__(self, att)
		self.attributes_dict['record'] = ['set_record', None]
		return None

	def _get_object(self):
		return ProgramRecordTimeShiftBar()



class CreateTimeBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['bar'] = ['set_bar', None]
		ad['reference'] = ['set_reference', int]
		ad['period'] = ['set_period', int]
		ad['duration'] = ['set_duration', int]
		ad['begin'] = ['set_begin', int]
		return None

	def _get_object(self):
		return Timebar()



class CreateDepthBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['depth'] = ['set_depth', int]
		ad['max_depth'] = ['set_max_depth', int]
		ad['repository'] = ['set_repository', None]
		ad['folder_icon'] = ['set_folder_icon', None]
		ad['plus_icon'] = ['set_plus_icon', None]
		return None

	def _get_object(self):
		return DepthBar()



class CreateList(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self._style = att['style_name']
		ad = self.attributes_dict
		ad['positions'] = ['set_positions', int_tuple_list]
		ad['pre_position'] = ['set_extra_positions', int_tuple]
		ad['post_position'] = ['set_extra_positions', int_tuple]
		ad['centered'] = ['set_centered', boolean]
		ad['duration'] = ['set_duration', float]
		ad['selected_item'] = ['set_selected_item', int]
		ad['bar'] = ['set_bar', None]
		ad['repository'] = ['set_repository', None]
		ad['reversed_update'] = ['set_reversed_update', boolean]
		ad['anim_type'] = ['set_anim_type', None]
		ad['cyclic'] = ['set_cyclic', boolean]
		ad['extension'] = ['update_style', string_tuple]
		ad['maxlen'] = ['update_style', int]
		ad['edit_offset'] = ['update_style', int]
		ad['enumerated'] = ['update_style', boolean]
		ad['page_jump'] = ['update_style', None]
		ad['pos_policy'] = ['update_style', None]
		ad['fade_pre_post'] = ['update_style', boolean]
		ad['preserve_icon_aspect'] = ['update_style', boolean_to_int]
		ad['preserve_icon_size'] = ['update_style', boolean_to_int]
		ad['selected_marker_image'] = ['update_style', None]
		ad['marker_image'] = ['update_style', None]
		ad['font_style'] = ['update_style', None]
		ad['selected_font_style'] = ['update_style', None]
		ad['unsensitive_font_style'] = ['update_style', None]
		ad['text_size'] = ['update_style', string_tuple]
		ad['selected_text_size'] = ['update_style', string_tuple]
		ad['unsensitive_text_size'] = ['update_style', string_tuple]
		ad['text_color'] = ['update_style', color]
		ad['selected_text_color'] = ['update_style', color]
		ad['unsensitive_text_color'] = ['update_style', color]
		ad['icon_size'] = ['update_style', string_tuple]
		ad['selected_icon_size'] = ['update_style', string_tuple]
		ad['unsensitive_icon_size'] = ['update_style', string_tuple]
		ad['marker_offset'] = ['update_style', string_tuple]
		ad['marker_size'] = ['update_style', string_tuple]
		ad['text_offset'] = ['update_style', string_tuple]
		ad['selected_text_offset'] = ['update_style', string_tuple]
		ad['autoscroll'] = ['update_style', boolean]
		ad['selected_item_size'] = ['update_style', string_tuple]
		ad['item_size'] = ['update_style', string_tuple]
		ad['opacity'] = ['update_style', int]
		ad['progress_bar_background'] = ['update_style', None]
		ad['progress_bar_foreground'] = ['update_style', None]
		ad['progress_bar_offset'] = ['update_style', string_tuple]
		ad['progress_bar_size'] = ['update_style', string_tuple]
		ad['rec_icon'] = ['update_style', None]
		ad['rec_icon_offset'] = ['update_style', string_tuple]
		ad['time_offset'] = ['update_style', string_tuple]
		ad['time_font_style'] = ['update_style', None]
		ad['time_color'] = ['update_style', color]
		ad['title_font_style'] = ['update_style', None]
		ad['title_color'] = ['update_style', color]
		ad['selected_time_font_style'] = ['update_style', None]
		ad['selected_time_color'] = ['update_style', color]
		ad['selected_title_font_style'] = ['update_style', None]
		ad['selected_title_color'] = ['update_style', color]
		ad['selected_blurb_time_font_style'] = ['update_style', None]
		ad['selected_blurb_time_color'] = ['update_style', color]
		ad['selected_blurb_title_font_style'] = ['update_style', None]
		ad['selected_blurb_title_color'] = ['update_style', color]
		ad['selected_blurb_offset'] = ['update_style', string_tuple]
		ad['selected_blurb_text_offset'] = ['update_style', string_tuple]
		ad['selected_blurb_zoom'] = ['update_style', None]
		ad['selection_cursor_image'] = ['update_style', None]
		return None

	def _get_object(self):
		if self._style.endswith('_fixed'):
			l = FixedListing()
		else:
			if self._style.endswith('_hybrid'):
				l = HybridListing()
			else:
				l = DefaultListing()
		l.style_name = self._style
		return l



class CreateGrid(CreateList):
	def __init__(self, att=None):
		CreateList.__init__(self, att)
		ad = self.attributes_dict
		ad['pre_positions'] = ['set_extra_positions', int_tuple_list]
		ad['post_positions'] = ['set_extra_positions', int_tuple_list]

	def _get_object(self):
		out = Grid()
		out.style_name = self._style
		return out



class CreateWebBrowser(CreateImage):
	def __init__(self, att=None):
		CreateImage.__init__(self, att)
		self.attributes_dict['url'] = ['send_data', None]
		return None

	def _get_object(self):
		return Browser()



class CreateCursor(CreateObject):
	def _get_object(self):
		from ..cursor import Cursor
		return Cursor()



class CreateAnimage(CreateImage):
	def __init__(self, att=None):
		CreateImage.__init__(self, att)
		self.atomic_size = int_tuple(att['real_size'])
		self.attributes_dict['file'] = ['send_data', None]
		self.attributes_dict['sleep'] = ['send_data', None]
		return None

	def _get_object(self):
		return Animage(size=self.atomic_size)



from .animationfactory import AnimationCreator
class ObjectCreator(object):
	animation_creator = AnimationCreator()
	def __init__(self):
		self.objectFactory = factory.Factory()
		reg = self.objectFactory.register
		reg('container', CreateContainer, att=None)
		reg('text', CreateText, att=None)
		reg('textblock', CreateTextBlock, att=['autoscroll', 'maxlen', 'i18n'])
		reg('clock', CreateClock, att=None)
		reg('image', CreateImage, att=None)
		reg('viewer', CreateViewer, att=None)
		reg('progressbar', CreateProgressBar, att=None)
		reg('list', CreateList, att=['style_name'])
		reg('grid', CreateGrid, att=['style_name'])
		reg('timebar', CreateTimeBar, att=None)
		reg('programbar', CreateProgramBar, att=None)
		reg('depthbar', CreateDepthBar, att=None)
		reg('programtimeshiftbar', CreateProgramTimeShiftBar, att=None)
		reg('programrecordtimeshiftbar', CreateProgramRecordTimeShiftBar, att=None)
		reg('webbrowser', CreateWebBrowser, att=None)
		reg('cursor', CreateCursor, att=None)
		reg('animage', CreateAnimage, att=['real_size'])
		return None

	def create(self, node, menu, parent=None, animations=None):
		if not hasattr(self.objectFactory, node.tag):
			log.error('object %s does not appear in readable objects list', node.tag)
			return None
		creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
		obj = creator.add_child(node, parent)
		if animations is None:
			animations = []



]:
	i: 326(), 461(), 692(AE)
	o: 

nname: 692
n 692(None)[]:
	i: 451(f)
	o: 694(AE)

nname: 461
n 461(None)[log.error('Cannot import widgets from wyvas')
from ..clock import Clock
from ..depthbar import DepthBar
from ..listing.grid import Grid
from ..listing.style_fixed import FixedListing
from ..listing.style_default import DefaultListing
from ..listing.style_hybrid import HybridListing
from ..programbar import Programbar, ProgramRecordTimeShiftBar
from ..programbar import ProgramTimeShiftBar
from ..progressbar import Progressbar
from ..textblock import TextBlock
from ..timebar import Timebar
from ..viewer import Viewer
log.debug('pygui widgets imported')
]:
	i: 451(t)
	o: 694()

nname: 451
n 451(<dummy_ex3> EXC_MATCH ImportError)[]:
	i: 284(except)
	o: 461(t), 692(f)

nname: 326
n 326(None)[from wyvas import DepthBar, Clock, Programbar, ProgramRecordTimeShiftBar
from wyvas import ProgramTimeShiftBar, Progressbar, TextBlock, Timebar, Viewer
from wyvas import DefaultListing, FixedListing, HybridListing, Grid
log.debug('wyvas widgets imported')
]:
	i: 315(), 325()
	o: 694()

nname: 325
n 325(None)[]:
	i: 287(f)
	o: 326()

nname: 315
n 315(None)[raise ImportError
]:
	i: 287(t)
	o: 326()

nname: 287
n 287('cython' not in wyvas_version)[from wyvas import __version__ as wyvas_version
]:
	i: 284(try)
	o: 315(t), 325(f)

nname: 284
n 284(None)[]:
	i: 226(), 256(), 282(AE)
	o: 287(try), 451(except)

nname: 282
n 282(None)[]:
	i: 246(f)
	o: 284(AE)

nname: 256
n 256(None)[log.error('Cannot import Animage from wyvas')
Animage = None
]:
	i: 246(t)
	o: 284()

nname: 246
n 246(<dummy_ex3> EXC_MATCH ImportError)[]:
	i: 223(except)
	o: 256(t), 282(f)

nname: 226
n 226(None)[from wyvas import Animage
]:
	i: 223(try)
	o: 284()

nname: 223
n 223(None)[]:
	i: 165(), 195(), 221(AE)
	o: 226(try), 246(except)

nname: 221
n 221(None)[]:
	i: 185(f)
	o: 223(AE)

nname: 195
n 195(None)[log.error('Cannot import Browser from wyvas')
Browser = None
]:
	i: 185(t)
	o: 223()

nname: 185
n 185(<dummy_ex3> EXC_MATCH ImportError)[]:
	i: 0(except)
	o: 195(t), 221(f)

nname: 165
n 165(None)[from wyvas import Browser
]:
	i: 0(try)
	o: 223()

nname: 0
n 0(None)[from __future__ import absolute_import
from . import factory
from peewee.debug import GET_LOGGER, PRINT_EXCEPTION, DEBUG
from peewee.formatters import boolean, boolean_to_int, int_tuple, int_tuple_list, string_tuple
from peewee.messages import connect as louie_connect
from wyvas import Container, Image, Object, Text
log = GET_LOGGER(__name__)
]:
	i: 
	o: 165(try), 185(except)

nname: 694
n 694(None)[from .macros import py_macro
def color(string):
	pass

class CreateObject(object):
	__doc__ = "\n    Attributes_dict refers to methods defined in the object's class\n    (image, listing, text, rectangle, etc...).\n    Second parameters refers to a specific cast method when needed.\n    (see int_tuple, boolean, int_tuple_list, etc...)\n    "
	def __init__(self, att=None):
		self.attributes_dict = dict(width=['resize', None], height=['resize', None], left=['move', None], right=['move', None], top=['move', None], bottom=['move', None], hcenter=['move', None], vcenter=['move', None], name=['set_name', None], opacity=['set_opacity', int], color=['set_color', color], layer=['set_layer', int], visible=['set_visible', boolean], preserve_aspect=['set_aspect', boolean], keep_real_size=['set_keep_real_size', boolean_to_int])
		return None

	def _get_object(self):
		return Object()

	def apply_attributes(self, object, **kwargs):
		pass

	def add_child(self, node, parent):
		obj = self._get_object()
		if parent:
			parent.add_child(obj)
		return obj

	def specify(self, node, object):
		self.apply_attributes(object, **node.attrib)



class CreateContainer(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)

	def _get_object(self):
		return Container()



class CreateText(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['text'] = ['set_text', None]
		ad['font'] = ['set_font', None]
		ad['size'] = ['set_font', int]
		return None

	def _get_object(self):
		return Text()



class CreateTextBlock(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		self.autoscroll = 'autoscroll' in att
		self.i18n = 'i18n' in att
		try:
			self.maxlen = int(att.get('maxlen'))
		except (TypeError, ValueError):
			self.maxlen = None
		ad['text'] = ['set_text', None]
		ad['style'] = ['set_style', None]
		ad['pause'] = ['set_length', float]
		return None

	def _get_object(self):
		return TextBlock(autoscroll=self.autoscroll, max_width=self.maxlen, i18n=self.i18n)



class CreateClock(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self.attributes_dict['style'] = ['set_style', None]
		self.attributes_dict['time_format'] = ['set_time_format', None]
		self.attributes_dict['global_format'] = ['set_global_format', None]
		self.attributes_dict['date_format'] = ['set_date_format', None]
		return None

	def _get_object(self):
		return Clock()



class CreateImage(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self.attributes_dict['repository'] = ['set_repository', None]
		self.attributes_dict['file'] = ['load', None]
		self.file = att.get('file', None)
		self.repository = att.get('repository', None)
		return None

	def _get_object(self):
		return Image(image_or_file=self.file, repository=self.repository)



class CreateViewer(CreateImage):
	def _get_object(self):
		return Viewer(image_or_file=self.file, repository=self.repository)



class CreateProgressBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['pos'] = ['set', int]
		ad['max'] = ['set', int]
		ad['indicator'] = ['set_indicator', None]
		ad['bar'] = ['set_bar', None]
		return None

	def _get_object(self):
		return Progressbar()



class CreateProgramBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['indicator'] = ['set_indicator', None]
		ad['live'] = ['set_live', None]
		ad['direct'] = ['set_direct', None]
		ad['timeshift'] = ['set_timeshift', None]
		ad['bar'] = ['set_bar', None]
		return None

	def _get_object(self):
		return Programbar()



class CreateProgramTimeShiftBar(CreateProgramBar):
	def __init__(self, att=None):
		CreateProgramBar.__init__(self, att)

	def _get_object(self):
		return ProgramTimeShiftBar()



class CreateProgramRecordTimeShiftBar(CreateProgramTimeShiftBar):
	def __init__(self, att=None):
		CreateProgramTimeShiftBar.__init__(self, att)
		self.attributes_dict['record'] = ['set_record', None]
		return None

	def _get_object(self):
		return ProgramRecordTimeShiftBar()



class CreateTimeBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['bar'] = ['set_bar', None]
		ad['reference'] = ['set_reference', int]
		ad['period'] = ['set_period', int]
		ad['duration'] = ['set_duration', int]
		ad['begin'] = ['set_begin', int]
		return None

	def _get_object(self):
		return Timebar()



class CreateDepthBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['depth'] = ['set_depth', int]
		ad['max_depth'] = ['set_max_depth', int]
		ad['repository'] = ['set_repository', None]
		ad['folder_icon'] = ['set_folder_icon', None]
		ad['plus_icon'] = ['set_plus_icon', None]
		return None

	def _get_object(self):
		return DepthBar()



class CreateList(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self._style = att['style_name']
		ad = self.attributes_dict
		ad['positions'] = ['set_positions', int_tuple_list]
		ad['pre_position'] = ['set_extra_positions', int_tuple]
		ad['post_position'] = ['set_extra_positions', int_tuple]
		ad['centered'] = ['set_centered', boolean]
		ad['duration'] = ['set_duration', float]
		ad['selected_item'] = ['set_selected_item', int]
		ad['bar'] = ['set_bar', None]
		ad['repository'] = ['set_repository', None]
		ad['reversed_update'] = ['set_reversed_update', boolean]
		ad['anim_type'] = ['set_anim_type', None]
		ad['cyclic'] = ['set_cyclic', boolean]
		ad['extension'] = ['update_style', string_tuple]
		ad['maxlen'] = ['update_style', int]
		ad['edit_offset'] = ['update_style', int]
		ad['enumerated'] = ['update_style', boolean]
		ad['page_jump'] = ['update_style', None]
		ad['pos_policy'] = ['update_style', None]
		ad['fade_pre_post'] = ['update_style', boolean]
		ad['preserve_icon_aspect'] = ['update_style', boolean_to_int]
		ad['preserve_icon_size'] = ['update_style', boolean_to_int]
		ad['selected_marker_image'] = ['update_style', None]
		ad['marker_image'] = ['update_style', None]
		ad['font_style'] = ['update_style', None]
		ad['selected_font_style'] = ['update_style', None]
		ad['unsensitive_font_style'] = ['update_style', None]
		ad['text_size'] = ['update_style', string_tuple]
		ad['selected_text_size'] = ['update_style', string_tuple]
		ad['unsensitive_text_size'] = ['update_style', string_tuple]
		ad['text_color'] = ['update_style', color]
		ad['selected_text_color'] = ['update_style', color]
		ad['unsensitive_text_color'] = ['update_style', color]
		ad['icon_size'] = ['update_style', string_tuple]
		ad['selected_icon_size'] = ['update_style', string_tuple]
		ad['unsensitive_icon_size'] = ['update_style', string_tuple]
		ad['marker_offset'] = ['update_style', string_tuple]
		ad['marker_size'] = ['update_style', string_tuple]
		ad['text_offset'] = ['update_style', string_tuple]
		ad['selected_text_offset'] = ['update_style', string_tuple]
		ad['autoscroll'] = ['update_style', boolean]
		ad['selected_item_size'] = ['update_style', string_tuple]
		ad['item_size'] = ['update_style', string_tuple]
		ad['opacity'] = ['update_style', int]
		ad['progress_bar_background'] = ['update_style', None]
		ad['progress_bar_foreground'] = ['update_style', None]
		ad['progress_bar_offset'] = ['update_style', string_tuple]
		ad['progress_bar_size'] = ['update_style', string_tuple]
		ad['rec_icon'] = ['update_style', None]
		ad['rec_icon_offset'] = ['update_style', string_tuple]
		ad['time_offset'] = ['update_style', string_tuple]
		ad['time_font_style'] = ['update_style', None]
		ad['time_color'] = ['update_style', color]
		ad['title_font_style'] = ['update_style', None]
		ad['title_color'] = ['update_style', color]
		ad['selected_time_font_style'] = ['update_style', None]
		ad['selected_time_color'] = ['update_style', color]
		ad['selected_title_font_style'] = ['update_style', None]
		ad['selected_title_color'] = ['update_style', color]
		ad['selected_blurb_time_font_style'] = ['update_style', None]
		ad['selected_blurb_time_color'] = ['update_style', color]
		ad['selected_blurb_title_font_style'] = ['update_style', None]
		ad['selected_blurb_title_color'] = ['update_style', color]
		ad['selected_blurb_offset'] = ['update_style', string_tuple]
		ad['selected_blurb_text_offset'] = ['update_style', string_tuple]
		ad['selected_blurb_zoom'] = ['update_style', None]
		ad['selection_cursor_image'] = ['update_style', None]
		return None

	def _get_object(self):
		if self._style.endswith('_fixed'):
			l = FixedListing()
		else:
			if self._style.endswith('_hybrid'):
				l = HybridListing()
			else:
				l = DefaultListing()
		l.style_name = self._style
		return l



class CreateGrid(CreateList):
	def __init__(self, att=None):
		CreateList.__init__(self, att)
		ad = self.attributes_dict
		ad['pre_positions'] = ['set_extra_positions', int_tuple_list]
		ad['post_positions'] = ['set_extra_positions', int_tuple_list]

	def _get_object(self):
		out = Grid()
		out.style_name = self._style
		return out



class CreateWebBrowser(CreateImage):
	def __init__(self, att=None):
		CreateImage.__init__(self, att)
		self.attributes_dict['url'] = ['send_data', None]
		return None

	def _get_object(self):
		return Browser()



class CreateCursor(CreateObject):
	def _get_object(self):
		from ..cursor import Cursor
		return Cursor()



class CreateAnimage(CreateImage):
	def __init__(self, att=None):
		CreateImage.__init__(self, att)
		self.atomic_size = int_tuple(att['real_size'])
		self.attributes_dict['file'] = ['send_data', None]
		self.attributes_dict['sleep'] = ['send_data', None]
		return None

	def _get_object(self):
		return Animage(size=self.atomic_size)



from .animationfactory import AnimationCreator
class ObjectCreator(object):
	animation_creator = AnimationCreator()
	def __init__(self):
		self.objectFactory = factory.Factory()
		reg = self.objectFactory.register
		reg('container', CreateContainer, att=None)
		reg('text', CreateText, att=None)
		reg('textblock', CreateTextBlock, att=['autoscroll', 'maxlen', 'i18n'])
		reg('clock', CreateClock, att=None)
		reg('image', CreateImage, att=None)
		reg('viewer', CreateViewer, att=None)
		reg('progressbar', CreateProgressBar, att=None)
		reg('list', CreateList, att=['style_name'])
		reg('grid', CreateGrid, att=['style_name'])
		reg('timebar', CreateTimeBar, att=None)
		reg('programbar', CreateProgramBar, att=None)
		reg('depthbar', CreateDepthBar, att=None)
		reg('programtimeshiftbar', CreateProgramTimeShiftBar, att=None)
		reg('programrecordtimeshiftbar', CreateProgramRecordTimeShiftBar, att=None)
		reg('webbrowser', CreateWebBrowser, att=None)
		reg('cursor', CreateCursor, att=None)
		reg('animage', CreateAnimage, att=['real_size'])
		return None

	def create(self, node, menu, parent=None, animations=None):
		if not hasattr(self.objectFactory, node.tag):
			log.error('object %s does not appear in readable objects list', node.tag)
			return None
		creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
		obj = creator.add_child(node, parent)
		if animations is None:
			animations = []



]:
	i: 326(), 451()
	o: 

nname: 451
n 451(None)[except ImportError:
	log.error('Cannot import widgets from wyvas')
	from ..clock import Clock
	from ..depthbar import DepthBar
	from ..listing.grid import Grid
	from ..listing.style_fixed import FixedListing
	from ..listing.style_default import DefaultListing
	from ..listing.style_hybrid import HybridListing
	from ..programbar import Programbar, ProgramRecordTimeShiftBar
	from ..programbar import ProgramTimeShiftBar
	from ..progressbar import Progressbar
	from ..textblock import TextBlock
	from ..timebar import Timebar
	from ..viewer import Viewer
	log.debug('pygui widgets imported')
]:
	i: 284()
	o: 694()

nname: 326
n 326(None)[from wyvas import DepthBar, Clock, Programbar, ProgramRecordTimeShiftBar
from wyvas import ProgramTimeShiftBar, Progressbar, TextBlock, Timebar, Viewer
from wyvas import DefaultListing, FixedListing, HybridListing, Grid
log.debug('wyvas widgets imported')
]:
	i: 284()
	o: 694()

nname: 284
n 284(None)[try:
	from wyvas import __version__ as wyvas_version
	if 'cython' not in wyvas_version:
		raise ImportError
]:
	i: 226()
	o: 326(), 451()

nname: 226
n 226(None)[try:
	from wyvas import Animage
except ImportError:
	log.error('Cannot import Animage from wyvas')
	Animage = None
]:
	i: 185(try)
	o: 284()

nname: 185
n 185(None)[except ImportError:
	log.error('Cannot import Browser from wyvas')
	Browser = None
]:
	i: 0()
	o: 226(try)

nname: 0
n 0(None)[from __future__ import absolute_import
from . import factory
from peewee.debug import GET_LOGGER, PRINT_EXCEPTION, DEBUG
from peewee.formatters import boolean, boolean_to_int, int_tuple, int_tuple_list, string_tuple
from peewee.messages import connect as louie_connect
from wyvas import Container, Image, Object, Text
log = GET_LOGGER(__name__)
try:
	from wyvas import Browser
]:
	i: 
	o: 185()

nname: 694
n 694(None)[from .macros import py_macro
def color(string):
	pass

class CreateObject(object):
	__doc__ = "\n    Attributes_dict refers to methods defined in the object's class\n    (image, listing, text, rectangle, etc...).\n    Second parameters refers to a specific cast method when needed.\n    (see int_tuple, boolean, int_tuple_list, etc...)\n    "
	def __init__(self, att=None):
		self.attributes_dict = dict(width=['resize', None], height=['resize', None], left=['move', None], right=['move', None], top=['move', None], bottom=['move', None], hcenter=['move', None], vcenter=['move', None], name=['set_name', None], opacity=['set_opacity', int], color=['set_color', color], layer=['set_layer', int], visible=['set_visible', boolean], preserve_aspect=['set_aspect', boolean], keep_real_size=['set_keep_real_size', boolean_to_int])
		return None

	def _get_object(self):
		return Object()

	def apply_attributes(self, object, **kwargs):
		pass

	def add_child(self, node, parent):
		obj = self._get_object()
		if parent:
			parent.add_child(obj)
		return obj

	def specify(self, node, object):
		self.apply_attributes(object, **node.attrib)



class CreateContainer(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)

	def _get_object(self):
		return Container()



class CreateText(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['text'] = ['set_text', None]
		ad['font'] = ['set_font', None]
		ad['size'] = ['set_font', int]
		return None

	def _get_object(self):
		return Text()



class CreateTextBlock(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		self.autoscroll = 'autoscroll' in att
		self.i18n = 'i18n' in att
		try:
			self.maxlen = int(att.get('maxlen'))
		except (TypeError, ValueError):
			self.maxlen = None
		ad['text'] = ['set_text', None]
		ad['style'] = ['set_style', None]
		ad['pause'] = ['set_length', float]
		return None

	def _get_object(self):
		return TextBlock(autoscroll=self.autoscroll, max_width=self.maxlen, i18n=self.i18n)



class CreateClock(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self.attributes_dict['style'] = ['set_style', None]
		self.attributes_dict['time_format'] = ['set_time_format', None]
		self.attributes_dict['global_format'] = ['set_global_format', None]
		self.attributes_dict['date_format'] = ['set_date_format', None]
		return None

	def _get_object(self):
		return Clock()



class CreateImage(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self.attributes_dict['repository'] = ['set_repository', None]
		self.attributes_dict['file'] = ['load', None]
		self.file = att.get('file', None)
		self.repository = att.get('repository', None)
		return None

	def _get_object(self):
		return Image(image_or_file=self.file, repository=self.repository)



class CreateViewer(CreateImage):
	def _get_object(self):
		return Viewer(image_or_file=self.file, repository=self.repository)



class CreateProgressBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['pos'] = ['set', int]
		ad['max'] = ['set', int]
		ad['indicator'] = ['set_indicator', None]
		ad['bar'] = ['set_bar', None]
		return None

	def _get_object(self):
		return Progressbar()



class CreateProgramBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['indicator'] = ['set_indicator', None]
		ad['live'] = ['set_live', None]
		ad['direct'] = ['set_direct', None]
		ad['timeshift'] = ['set_timeshift', None]
		ad['bar'] = ['set_bar', None]
		return None

	def _get_object(self):
		return Programbar()



class CreateProgramTimeShiftBar(CreateProgramBar):
	def __init__(self, att=None):
		CreateProgramBar.__init__(self, att)

	def _get_object(self):
		return ProgramTimeShiftBar()



class CreateProgramRecordTimeShiftBar(CreateProgramTimeShiftBar):
	def __init__(self, att=None):
		CreateProgramTimeShiftBar.__init__(self, att)
		self.attributes_dict['record'] = ['set_record', None]
		return None

	def _get_object(self):
		return ProgramRecordTimeShiftBar()



class CreateTimeBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['bar'] = ['set_bar', None]
		ad['reference'] = ['set_reference', int]
		ad['period'] = ['set_period', int]
		ad['duration'] = ['set_duration', int]
		ad['begin'] = ['set_begin', int]
		return None

	def _get_object(self):
		return Timebar()



class CreateDepthBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['depth'] = ['set_depth', int]
		ad['max_depth'] = ['set_max_depth', int]
		ad['repository'] = ['set_repository', None]
		ad['folder_icon'] = ['set_folder_icon', None]
		ad['plus_icon'] = ['set_plus_icon', None]
		return None

	def _get_object(self):
		return DepthBar()



class CreateList(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self._style = att['style_name']
		ad = self.attributes_dict
		ad['positions'] = ['set_positions', int_tuple_list]
		ad['pre_position'] = ['set_extra_positions', int_tuple]
		ad['post_position'] = ['set_extra_positions', int_tuple]
		ad['centered'] = ['set_centered', boolean]
		ad['duration'] = ['set_duration', float]
		ad['selected_item'] = ['set_selected_item', int]
		ad['bar'] = ['set_bar', None]
		ad['repository'] = ['set_repository', None]
		ad['reversed_update'] = ['set_reversed_update', boolean]
		ad['anim_type'] = ['set_anim_type', None]
		ad['cyclic'] = ['set_cyclic', boolean]
		ad['extension'] = ['update_style', string_tuple]
		ad['maxlen'] = ['update_style', int]
		ad['edit_offset'] = ['update_style', int]
		ad['enumerated'] = ['update_style', boolean]
		ad['page_jump'] = ['update_style', None]
		ad['pos_policy'] = ['update_style', None]
		ad['fade_pre_post'] = ['update_style', boolean]
		ad['preserve_icon_aspect'] = ['update_style', boolean_to_int]
		ad['preserve_icon_size'] = ['update_style', boolean_to_int]
		ad['selected_marker_image'] = ['update_style', None]
		ad['marker_image'] = ['update_style', None]
		ad['font_style'] = ['update_style', None]
		ad['selected_font_style'] = ['update_style', None]
		ad['unsensitive_font_style'] = ['update_style', None]
		ad['text_size'] = ['update_style', string_tuple]
		ad['selected_text_size'] = ['update_style', string_tuple]
		ad['unsensitive_text_size'] = ['update_style', string_tuple]
		ad['text_color'] = ['update_style', color]
		ad['selected_text_color'] = ['update_style', color]
		ad['unsensitive_text_color'] = ['update_style', color]
		ad['icon_size'] = ['update_style', string_tuple]
		ad['selected_icon_size'] = ['update_style', string_tuple]
		ad['unsensitive_icon_size'] = ['update_style', string_tuple]
		ad['marker_offset'] = ['update_style', string_tuple]
		ad['marker_size'] = ['update_style', string_tuple]
		ad['text_offset'] = ['update_style', string_tuple]
		ad['selected_text_offset'] = ['update_style', string_tuple]
		ad['autoscroll'] = ['update_style', boolean]
		ad['selected_item_size'] = ['update_style', string_tuple]
		ad['item_size'] = ['update_style', string_tuple]
		ad['opacity'] = ['update_style', int]
		ad['progress_bar_background'] = ['update_style', None]
		ad['progress_bar_foreground'] = ['update_style', None]
		ad['progress_bar_offset'] = ['update_style', string_tuple]
		ad['progress_bar_size'] = ['update_style', string_tuple]
		ad['rec_icon'] = ['update_style', None]
		ad['rec_icon_offset'] = ['update_style', string_tuple]
		ad['time_offset'] = ['update_style', string_tuple]
		ad['time_font_style'] = ['update_style', None]
		ad['time_color'] = ['update_style', color]
		ad['title_font_style'] = ['update_style', None]
		ad['title_color'] = ['update_style', color]
		ad['selected_time_font_style'] = ['update_style', None]
		ad['selected_time_color'] = ['update_style', color]
		ad['selected_title_font_style'] = ['update_style', None]
		ad['selected_title_color'] = ['update_style', color]
		ad['selected_blurb_time_font_style'] = ['update_style', None]
		ad['selected_blurb_time_color'] = ['update_style', color]
		ad['selected_blurb_title_font_style'] = ['update_style', None]
		ad['selected_blurb_title_color'] = ['update_style', color]
		ad['selected_blurb_offset'] = ['update_style', string_tuple]
		ad['selected_blurb_text_offset'] = ['update_style', string_tuple]
		ad['selected_blurb_zoom'] = ['update_style', None]
		ad['selection_cursor_image'] = ['update_style', None]
		return None

	def _get_object(self):
		if self._style.endswith('_fixed'):
			l = FixedListing()
		else:
			if self._style.endswith('_hybrid'):
				l = HybridListing()
			else:
				l = DefaultListing()
		l.style_name = self._style
		return l



class CreateGrid(CreateList):
	def __init__(self, att=None):
		CreateList.__init__(self, att)
		ad = self.attributes_dict
		ad['pre_positions'] = ['set_extra_positions', int_tuple_list]
		ad['post_positions'] = ['set_extra_positions', int_tuple_list]

	def _get_object(self):
		out = Grid()
		out.style_name = self._style
		return out



class CreateWebBrowser(CreateImage):
	def __init__(self, att=None):
		CreateImage.__init__(self, att)
		self.attributes_dict['url'] = ['send_data', None]
		return None

	def _get_object(self):
		return Browser()



class CreateCursor(CreateObject):
	def _get_object(self):
		from ..cursor import Cursor
		return Cursor()



class CreateAnimage(CreateImage):
	def __init__(self, att=None):
		CreateImage.__init__(self, att)
		self.atomic_size = int_tuple(att['real_size'])
		self.attributes_dict['file'] = ['send_data', None]
		self.attributes_dict['sleep'] = ['send_data', None]
		return None

	def _get_object(self):
		return Animage(size=self.atomic_size)



from .animationfactory import AnimationCreator
class ObjectCreator(object):
	animation_creator = AnimationCreator()
	def __init__(self):
		self.objectFactory = factory.Factory()
		reg = self.objectFactory.register
		reg('container', CreateContainer, att=None)
		reg('text', CreateText, att=None)
		reg('textblock', CreateTextBlock, att=['autoscroll', 'maxlen', 'i18n'])
		reg('clock', CreateClock, att=None)
		reg('image', CreateImage, att=None)
		reg('viewer', CreateViewer, att=None)
		reg('progressbar', CreateProgressBar, att=None)
		reg('list', CreateList, att=['style_name'])
		reg('grid', CreateGrid, att=['style_name'])
		reg('timebar', CreateTimeBar, att=None)
		reg('programbar', CreateProgramBar, att=None)
		reg('depthbar', CreateDepthBar, att=None)
		reg('programtimeshiftbar', CreateProgramTimeShiftBar, att=None)
		reg('programrecordtimeshiftbar', CreateProgramRecordTimeShiftBar, att=None)
		reg('webbrowser', CreateWebBrowser, att=None)
		reg('cursor', CreateCursor, att=None)
		reg('animage', CreateAnimage, att=['real_size'])
		return None

	def create(self, node, menu, parent=None, animations=None):
		if not hasattr(self.objectFactory, node.tag):
			log.error('object %s does not appear in readable objects list', node.tag)
			return None
		creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
		obj = creator.add_child(node, parent)
		if animations is None:
			animations = []



]:
	i: 326(), 451()
	o: 

nname: 451
n 451(None)[except ImportError:
	log.error('Cannot import widgets from wyvas')
	from ..clock import Clock
	from ..depthbar import DepthBar
	from ..listing.grid import Grid
	from ..listing.style_fixed import FixedListing
	from ..listing.style_default import DefaultListing
	from ..listing.style_hybrid import HybridListing
	from ..programbar import Programbar, ProgramRecordTimeShiftBar
	from ..programbar import ProgramTimeShiftBar
	from ..progressbar import Progressbar
	from ..textblock import TextBlock
	from ..timebar import Timebar
	from ..viewer import Viewer
	log.debug('pygui widgets imported')
]:
	i: 226()
	o: 694()

nname: 326
n 326(None)[from wyvas import DepthBar, Clock, Programbar, ProgramRecordTimeShiftBar
from wyvas import ProgramTimeShiftBar, Progressbar, TextBlock, Timebar, Viewer
from wyvas import DefaultListing, FixedListing, HybridListing, Grid
log.debug('wyvas widgets imported')
]:
	i: 226()
	o: 694()

nname: 226
n 226(None)[try:
	from wyvas import Animage
except ImportError:
	log.error('Cannot import Animage from wyvas')
	Animage = None
try:
	from wyvas import __version__ as wyvas_version
	if 'cython' not in wyvas_version:
		raise ImportError
]:
	i: 0(try)
	o: 326(), 451()

nname: 0
n 0(None)[from __future__ import absolute_import
from . import factory
from peewee.debug import GET_LOGGER, PRINT_EXCEPTION, DEBUG
from peewee.formatters import boolean, boolean_to_int, int_tuple, int_tuple_list, string_tuple
from peewee.messages import connect as louie_connect
from wyvas import Container, Image, Object, Text
log = GET_LOGGER(__name__)
try:
	from wyvas import Browser
except ImportError:
	log.error('Cannot import Browser from wyvas')
	Browser = None
]:
	i: 
	o: 226(try)

nname: 694
n 694(None)[from .macros import py_macro
def color(string):
	pass

class CreateObject(object):
	__doc__ = "\n    Attributes_dict refers to methods defined in the object's class\n    (image, listing, text, rectangle, etc...).\n    Second parameters refers to a specific cast method when needed.\n    (see int_tuple, boolean, int_tuple_list, etc...)\n    "
	def __init__(self, att=None):
		self.attributes_dict = dict(width=['resize', None], height=['resize', None], left=['move', None], right=['move', None], top=['move', None], bottom=['move', None], hcenter=['move', None], vcenter=['move', None], name=['set_name', None], opacity=['set_opacity', int], color=['set_color', color], layer=['set_layer', int], visible=['set_visible', boolean], preserve_aspect=['set_aspect', boolean], keep_real_size=['set_keep_real_size', boolean_to_int])
		return None

	def _get_object(self):
		return Object()

	def apply_attributes(self, object, **kwargs):
		pass

	def add_child(self, node, parent):
		obj = self._get_object()
		if parent:
			parent.add_child(obj)
		return obj

	def specify(self, node, object):
		self.apply_attributes(object, **node.attrib)



class CreateContainer(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)

	def _get_object(self):
		return Container()



class CreateText(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['text'] = ['set_text', None]
		ad['font'] = ['set_font', None]
		ad['size'] = ['set_font', int]
		return None

	def _get_object(self):
		return Text()



class CreateTextBlock(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		self.autoscroll = 'autoscroll' in att
		self.i18n = 'i18n' in att
		try:
			self.maxlen = int(att.get('maxlen'))
		except (TypeError, ValueError):
			self.maxlen = None
		ad['text'] = ['set_text', None]
		ad['style'] = ['set_style', None]
		ad['pause'] = ['set_length', float]
		return None

	def _get_object(self):
		return TextBlock(autoscroll=self.autoscroll, max_width=self.maxlen, i18n=self.i18n)



class CreateClock(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self.attributes_dict['style'] = ['set_style', None]
		self.attributes_dict['time_format'] = ['set_time_format', None]
		self.attributes_dict['global_format'] = ['set_global_format', None]
		self.attributes_dict['date_format'] = ['set_date_format', None]
		return None

	def _get_object(self):
		return Clock()



class CreateImage(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self.attributes_dict['repository'] = ['set_repository', None]
		self.attributes_dict['file'] = ['load', None]
		self.file = att.get('file', None)
		self.repository = att.get('repository', None)
		return None

	def _get_object(self):
		return Image(image_or_file=self.file, repository=self.repository)



class CreateViewer(CreateImage):
	def _get_object(self):
		return Viewer(image_or_file=self.file, repository=self.repository)



class CreateProgressBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['pos'] = ['set', int]
		ad['max'] = ['set', int]
		ad['indicator'] = ['set_indicator', None]
		ad['bar'] = ['set_bar', None]
		return None

	def _get_object(self):
		return Progressbar()



class CreateProgramBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['indicator'] = ['set_indicator', None]
		ad['live'] = ['set_live', None]
		ad['direct'] = ['set_direct', None]
		ad['timeshift'] = ['set_timeshift', None]
		ad['bar'] = ['set_bar', None]
		return None

	def _get_object(self):
		return Programbar()



class CreateProgramTimeShiftBar(CreateProgramBar):
	def __init__(self, att=None):
		CreateProgramBar.__init__(self, att)

	def _get_object(self):
		return ProgramTimeShiftBar()



class CreateProgramRecordTimeShiftBar(CreateProgramTimeShiftBar):
	def __init__(self, att=None):
		CreateProgramTimeShiftBar.__init__(self, att)
		self.attributes_dict['record'] = ['set_record', None]
		return None

	def _get_object(self):
		return ProgramRecordTimeShiftBar()



class CreateTimeBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['bar'] = ['set_bar', None]
		ad['reference'] = ['set_reference', int]
		ad['period'] = ['set_period', int]
		ad['duration'] = ['set_duration', int]
		ad['begin'] = ['set_begin', int]
		return None

	def _get_object(self):
		return Timebar()



class CreateDepthBar(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		ad = self.attributes_dict
		ad['depth'] = ['set_depth', int]
		ad['max_depth'] = ['set_max_depth', int]
		ad['repository'] = ['set_repository', None]
		ad['folder_icon'] = ['set_folder_icon', None]
		ad['plus_icon'] = ['set_plus_icon', None]
		return None

	def _get_object(self):
		return DepthBar()



class CreateList(CreateObject):
	def __init__(self, att=None):
		CreateObject.__init__(self, att)
		self._style = att['style_name']
		ad = self.attributes_dict
		ad['positions'] = ['set_positions', int_tuple_list]
		ad['pre_position'] = ['set_extra_positions', int_tuple]
		ad['post_position'] = ['set_extra_positions', int_tuple]
		ad['centered'] = ['set_centered', boolean]
		ad['duration'] = ['set_duration', float]
		ad['selected_item'] = ['set_selected_item', int]
		ad['bar'] = ['set_bar', None]
		ad['repository'] = ['set_repository', None]
		ad['reversed_update'] = ['set_reversed_update', boolean]
		ad['anim_type'] = ['set_anim_type', None]
		ad['cyclic'] = ['set_cyclic', boolean]
		ad['extension'] = ['update_style', string_tuple]
		ad['maxlen'] = ['update_style', int]
		ad['edit_offset'] = ['update_style', int]
		ad['enumerated'] = ['update_style', boolean]
		ad['page_jump'] = ['update_style', None]
		ad['pos_policy'] = ['update_style', None]
		ad['fade_pre_post'] = ['update_style', boolean]
		ad['preserve_icon_aspect'] = ['update_style', boolean_to_int]
		ad['preserve_icon_size'] = ['update_style', boolean_to_int]
		ad['selected_marker_image'] = ['update_style', None]
		ad['marker_image'] = ['update_style', None]
		ad['font_style'] = ['update_style', None]
		ad['selected_font_style'] = ['update_style', None]
		ad['unsensitive_font_style'] = ['update_style', None]
		ad['text_size'] = ['update_style', string_tuple]
		ad['selected_text_size'] = ['update_style', string_tuple]
		ad['unsensitive_text_size'] = ['update_style', string_tuple]
		ad['text_color'] = ['update_style', color]
		ad['selected_text_color'] = ['update_style', color]
		ad['unsensitive_text_color'] = ['update_style', color]
		ad['icon_size'] = ['update_style', string_tuple]
		ad['selected_icon_size'] = ['update_style', string_tuple]
		ad['unsensitive_icon_size'] = ['update_style', string_tuple]
		ad['marker_offset'] = ['update_style', string_tuple]
		ad['marker_size'] = ['update_style', string_tuple]
		ad['text_offset'] = ['update_style', string_tuple]
		ad['selected_text_offset'] = ['update_style', string_tuple]
		ad['autoscroll'] = ['update_style', boolean]
		ad['selected_item_size'] = ['update_style', string_tuple]
		ad['item_size'] = ['update_style', string_tuple]
		ad['opacity'] = ['update_style', int]
		ad['progress_bar_background'] = ['update_style', None]
		ad['progress_bar_foreground'] = ['update_style', None]
		ad['progress_bar_offset'] = ['update_style', string_tuple]
		ad['progress_bar_size'] = ['update_style', string_tuple]
		ad['rec_icon'] = ['update_style', None]
		ad['rec_icon_offset'] = ['update_style', string_tuple]
		ad['time_offset'] = ['update_style', string_tuple]
		ad['time_font_style'] = ['update_style', None]
		ad['time_color'] = ['update_style', color]
		ad['title_font_style'] = ['update_style', None]
		ad['title_color'] = ['update_style', color]
		ad['selected_time_font_style'] = ['update_style', None]
		ad['selected_time_color'] = ['update_style', color]
		ad['selected_title_font_style'] = ['update_style', None]
		ad['selected_title_color'] = ['update_style', color]
		ad['selected_blurb_time_font_style'] = ['update_style', None]
		ad['selected_blurb_time_color'] = ['update_style', color]
		ad['selected_blurb_title_font_style'] = ['update_style', None]
		ad['selected_blurb_title_color'] = ['update_style', color]
		ad['selected_blurb_offset'] = ['update_style', string_tuple]
		ad['selected_blurb_text_offset'] = ['update_style', string_tuple]
		ad['selected_blurb_zoom'] = ['update_style', None]
		ad['selection_cursor_image'] = ['update_style', None]
		return None

	def _get_object(self):
		if self._style.endswith('_fixed'):
			l = FixedListing()
		else:
			if self._style.endswith('_hybrid'):
				l = HybridListing()
			else:
				l = DefaultListing()
		l.style_name = self._style
		return l



class CreateGrid(CreateList):
	def __init__(self, att=None):
		CreateList.__init__(self, att)
		ad = self.attributes_dict
		ad['pre_positions'] = ['set_extra_positions', int_tuple_list]
		ad['post_positions'] = ['set_extra_positions', int_tuple_list]

	def _get_object(self):
		out = Grid()
		out.style_name = self._style
		return out



class CreateWebBrowser(CreateImage):
	def __init__(self, att=None):
		CreateImage.__init__(self, att)
		self.attributes_dict['url'] = ['send_data', None]
		return None

	def _get_object(self):
		return Browser()



class CreateCursor(CreateObject):
	def _get_object(self):
		from ..cursor import Cursor
		return Cursor()



class CreateAnimage(CreateImage):
	def __init__(self, att=None):
		CreateImage.__init__(self, att)
		self.atomic_size = int_tuple(att['real_size'])
		self.attributes_dict['file'] = ['send_data', None]
		self.attributes_dict['sleep'] = ['send_data', None]
		return None

	def _get_object(self):
		return Animage(size=self.atomic_size)



from .animationfactory import AnimationCreator
class ObjectCreator(object):
	animation_creator = AnimationCreator()
	def __init__(self):
		self.objectFactory = factory.Factory()
		reg = self.objectFactory.register
		reg('container', CreateContainer, att=None)
		reg('text', CreateText, att=None)
		reg('textblock', CreateTextBlock, att=['autoscroll', 'maxlen', 'i18n'])
		reg('clock', CreateClock, att=None)
		reg('image', CreateImage, att=None)
		reg('viewer', CreateViewer, att=None)
		reg('progressbar', CreateProgressBar, att=None)
		reg('list', CreateList, att=['style_name'])
		reg('grid', CreateGrid, att=['style_name'])
		reg('timebar', CreateTimeBar, att=None)
		reg('programbar', CreateProgramBar, att=None)
		reg('depthbar', CreateDepthBar, att=None)
		reg('programtimeshiftbar', CreateProgramTimeShiftBar, att=None)
		reg('programrecordtimeshiftbar', CreateProgramRecordTimeShiftBar, att=None)
		reg('webbrowser', CreateWebBrowser, att=None)
		reg('cursor', CreateCursor, att=None)
		reg('animage', CreateAnimage, att=['real_size'])
		return None

	def create(self, node, menu, parent=None, animations=None):
		if not hasattr(self.objectFactory, node.tag):
			log.error('object %s does not appear in readable objects list', node.tag)
			return None
		creator = getattr(self.objectFactory, node.tag)(att=node.attrib)
		obj = creator.add_child(node, parent)
		if animations is None:
			animations = []



]:
	i: 326(), 451()
	o: 

nname: 451
n 451(None)[except ImportError:
	log.error('Cannot import widgets from wyvas')
	from ..clock import Clock
	from ..depthbar import DepthBar
	from ..listing.grid import Grid
	from ..listing.style_fixed import FixedListing
	from ..listing.style_default import DefaultListing
	from ..listing.style_hybrid import HybridListing
	from ..programbar import Programbar, ProgramRecordTimeShiftBar
	from ..programbar import ProgramTimeShiftBar
	from ..progressbar import Progressbar
	from ..textblock import TextBlock
	from ..timebar import Timebar
	from ..viewer import Viewer
	log.debug('pygui widgets imported')
]:
	i: 0()
	o: 694()

nname: 326
n 326(None)[from wyvas import DepthBar, Clock, Programbar, ProgramRecordTimeShiftBar
from wyvas import ProgramTimeShiftBar, Progressbar, TextBlock, Timebar, Viewer
from wyvas import DefaultListing, FixedListing, HybridListing, Grid
log.debug('wyvas widgets imported')
]:
	i: 0()
	o: 694()

nname: 0
n 0(None)[from __future__ import absolute_import
from . import factory
from peewee.debug import GET_LOGGER, PRINT_EXCEPTION, DEBUG
from peewee.formatters import boolean, boolean_to_int, int_tuple, int_tuple_list, string_tuple
from peewee.messages import connect as louie_connect
from wyvas import Container, Image, Object, Text
log = GET_LOGGER(__name__)
try:
	from wyvas import Browser
except ImportError:
	log.error('Cannot import Browser from wyvas')
	Browser = None
try:
	from wyvas import Animage
except ImportError:
	log.error('Cannot import Animage from wyvas')
	Animage = None
try:
	from wyvas import __version__ as wyvas_version
	if 'cython' not in wyvas_version:
		raise ImportError
]:
	i: 
	o: 326(), 451()

self.nodes: {0: <unpyclib.structure.node instance at 0x84e2f2c>, 326: <unpyclib.structure.node instance at 0x850460c>, 694: <unpyclib.structure.node instance at 0x8504d4c>, 451: <unpyclib.structure.node instance at 0x85ac16c>}
from __future__ import absolute_import
from . import factory
from peewee.debug import GET_LOGGER, PRINT_EXCEPTION, DEBUG
from peewee.formatters import boolean, boolean_to_int, int_tuple, int_tuple_list, string_tuple
from peewee.messages import connect as louie_connect
from wyvas import Container, Image, Object, Text
log = GET_LOGGER(__name__)
try:
	from wyvas import Browser
except ImportError:
	log.error('Cannot import Browser from wyvas')
	Browser = None
try:
	from wyvas import Animage
except ImportError:
	log.error('Cannot import Animage from wyvas')
	Animage = None
try:
	from wyvas import __version__ as wyvas_version
	if 'cython' not in wyvas_version:
		raise ImportError
