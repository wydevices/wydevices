# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[_args = [constructor] + list(args)
setattr(self, methodName, apply(Functor, _args, kargs))
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76e7ecc>}
nname: 0
n 0(None)[delattr(self, methodName)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76e7c0c>}
nname: 6
n 6(None)[def register(self, methodName, constructor, *args, **args):
	_args = [constructor] + list(args)
	setattr(self, methodName, apply(Functor, _args, kargs))

def unregister(self, methodName):
	delattr(self, methodName)

__slots__ = ['__dict__']
]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb76e770c>}
nname: 0
n 0(None)[self._function = function
self._args = args
self._kargs = kargs
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76e7f2c>}
nname: 0
n 0(None)[_args = list(self._args) + list(args)
_kargs = self._kargs.copy()
_kargs.update(kargs)
return apply(self._function, _args, _kargs)
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76e7d6c>}
nname: 6
n 6(None)[def __init__(self, function, *args, **args):
	self._function = function
	self._args = args
	self._kargs = kargs

def __call__(self, *args, **args):
	_args = list(self._args) + list(args)
	_kargs = self._kargs.copy()
	_kargs.update(kargs)
	return apply(self._function, _args, _kargs)

__slots__ = ['__dict__', '_args', '_kargs', '_function']
]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb76e776c>}
nname: 0
n 0(None)[from __future__ import absolute_import
class Factory(object):
	def register(self, methodName, constructor, *args, **args):
		_args = [constructor] + list(args)
		setattr(self, methodName, apply(Functor, _args, kargs))

	def unregister(self, methodName):
		delattr(self, methodName)

	__slots__ = ['__dict__']


class Functor(object):
	def __init__(self, function, *args, **args):
		self._function = function
		self._args = args
		self._kargs = kargs

	def __call__(self, *args, **args):
		_args = list(self._args) + list(args)
		_kargs = self._kargs.copy()
		_kargs.update(kargs)
		return apply(self._function, _args, _kargs)

	__slots__ = ['__dict__', '_args', '_kargs', '_function']


]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb76e1e6c>}
from __future__ import absolute_import
class Factory(object):
	def register(self, methodName, constructor, *args, **args):
		_args = [constructor] + list(args)
		setattr(self, methodName, apply(Functor, _args, kargs))

	def unregister(self, methodName):
		delattr(self, methodName)

	__slots__ = ['__dict__']


class Functor(object):
	def __init__(self, function, *args, **args):
		self._function = function
		self._args = args
		self._kargs = kargs

	def __call__(self, *args, **args):
		_args = list(self._args) + list(args)
		_kargs = self._kargs.copy()
		_kargs.update(kargs)
		return apply(self._function, _args, _kargs)

	__slots__ = ['__dict__', '_args', '_kargs', '_function']


