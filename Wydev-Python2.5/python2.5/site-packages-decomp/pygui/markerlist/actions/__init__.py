# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definiton
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

nname: 0
n 0(None)[self._MarkerActionsGetter__actions = dict()
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb771c94c>}
nname: 54
n 54(None)[return act[action_name]
]:
	i: 21(), 53()
	o: 

nname: 53
n 53(None)[]:
	i: 0(f)
	o: 54()

nname: 21
n 21(None)[act[action_name] = __import__(action_name, globals(), {}, ('markerlist.actions',))
]:
	i: 0(t)
	o: 54()

nname: 0
n 0(action_name not in act)[act = self._MarkerActionsGetter__actions
]:
	i: 
	o: 21(t), 53(f)

nname: 0
n 0(None)[act = self._MarkerActionsGetter__actions
if action_name not in act:
	act[action_name] = __import__(action_name, globals(), {}, ('markerlist.actions',))
return act[action_name]
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb771cd0c>}
nname: 6
n 6(None)[__doc__ = "\n    This class permits to import on the fly module containing markerlist actions.\n    These modules are in the actions/ folder, and are named as this convention :\n        'marker_*action*.py', *action* can be 'delete' to delete marked items,\n            'rename' to rename a marked item, ...\n    "
def __init__(self):
	self._MarkerActionsGetter__actions = dict()

def __getitem__(self, action_name):
	act = self._MarkerActionsGetter__actions
	if action_name not in act:
		act[action_name] = __import__(action_name, globals(), {}, ('markerlist.actions',))
	return act[action_name]

]:
	i: 
	o: 

self.nodes: {6: <unpyclib.structure.node instance at 0xb771c54c>}
nname: 0
n 0(None)[from __future__ import absolute_import
class MarkerActionsGetter(object):
	__doc__ = "\n    This class permits to import on the fly module containing markerlist actions.\n    These modules are in the actions/ folder, and are named as this convention :\n        'marker_*action*.py', *action* can be 'delete' to delete marked items,\n            'rename' to rename a marked item, ...\n    "
	def __init__(self):
		self._MarkerActionsGetter__actions = dict()

	def __getitem__(self, action_name):
		act = self._MarkerActionsGetter__actions
		if action_name not in act:
			act[action_name] = __import__(action_name, globals(), {}, ('markerlist.actions',))
		return act[action_name]



actions = MarkerActionsGetter()
__all__ = ['actions']
]:
	i: 
	o: 

self.nodes: {0: <unpyclib.structure.node instance at 0xb7794ecc>}
from __future__ import absolute_import
class MarkerActionsGetter(object):
	__doc__ = "\n    This class permits to import on the fly module containing markerlist actions.\n    These modules are in the actions/ folder, and are named as this convention :\n        'marker_*action*.py', *action* can be 'delete' to delete marked items,\n            'rename' to rename a marked item, ...\n    "
	def __init__(self):
		self._MarkerActionsGetter__actions = dict()

	def __getitem__(self, action_name):
		act = self._MarkerActionsGetter__actions
		if action_name not in act:
			act[action_name] = __import__(action_name, globals(), {}, ('markerlist.actions',))
		return act[action_name]



actions = MarkerActionsGetter()
__all__ = ['actions']
