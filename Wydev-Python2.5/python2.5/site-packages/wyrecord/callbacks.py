# -*- coding: utf-8 -*- 
#
# Description:
#
# WyRecord Callbacks Class Definition
#
#
#
# Changes:
#
# 2014-03-26
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from peewee.misc_utils import MetaSingleton
from WyScan import CallbackServer

UPDATE_SERVICE_ADDED = 1
UPDATE_SERVICE_UPDATED = 2
UPDATE_SERVICE_REMOVED = 0


# for all callbacks:
#     callback_name.register(your_method_handler)
#     callback_name.unregister(your_method_handler)
# 
# ### callback related to schedules: ###
# 
# recording_event:       => inform about states change of scheduled and instant_record recording
#                        => replace DEPRECATED: RegisterRecordingEventCallback, UnregisterRecordingEventCallback, callbacksRecordingStatus 
#                  
#                  notify(RECORDING_EVENT_RECORD_GOING_TO_START, recording, AdjustTimeForRec_object, list_of_live_to_stop)
#                  notify(RECORDING_EVENT_RECORD_DISK_SPACE_START_ERROR, recording, None)
#                  notify(RECORDING_EVENT_RECORD_START_ERROR, recording, None)
#                  notify(RECORDING_EVENT_RECORD_STARTED, recording, None)
#                  notify(RECORDING_EVENT_RECORD_STOPPED, recording, None)
#                  notify(RECORDING_EVENT_RECORD_MACROVISION_STOP_ERROR, recording, None)
#                  notify(RECORDING_EVENT_RECORD_MACROVISION_START_ERROR, recording, None)
#                  
#                  
# 
# disk_space_alert:      => inform when there is not enough space to finish running recording
#                        => replace DEPRECATED: RegisterRecordingDiskSpaceAlert, UnregisterRecordingDiskSpaceAlert, callbackDiskSpaceAlert
# 
#                  notify(needed_space, available_space, timeshift_percentage_size) 
# 
# 
# ### callback present following  ###
# 
# new_present_epg:        => inform that current epg as changed (from the player)
#                         => replace DEPRECATED: newExternEpgAvailableCallback
# 
#                  notify(program_id, dbus_player_path)
# 
#     you can get the complete epg from the given program_id as follow:
#     print live_controller.getEPGFromProgramId(program_id)
# 
# 
# ### callback related to live playing status ###
# 
# start_playing:        => inform that the player start to play a new live
#                 notify(renderer_instance, live_instance)
#     
#     renderer_instance: useful when more than one player instance are used (not possible for now) 
#     live_instance: the live being start_ted to play (live.Live object)
#     
#     
# ### channels update
# 
# service_update: 
# 
#     arg 1:
#        device_id
#     arg 2:
#         list 
#         [ [  channel_id,
#              channel_name,
#              channel_number,
#              channel_type,
#              channel_update_reason   ] , ...,]
#     
#     channel_update_reason possible values :
#         UPDATE_SERVICE_REMOVED  = 0
#         UPDATE_SERVICE_ADDED    = 1
#         UPDATE_SERVICE_UPDATED  = 2
#         
#     arg 3:
#         tp_info
#         [ signal_noise_ratio,
#           signal_strength,
#           freq ]
#           
#           
#              
# ### scan
# 
# scan_progression:
# arg 1: TP_index
# arg 2: TP_list_size
# arg 3: signal_strength
# arg 4: signal_noise_ratio
class Callbacks(object):

	__metaclass__ = MetaSingleton

	def __init__(self, wyscan):
		self.recording_event = CallbackServer()
		self.disk_space_alert = CallbackServer()
		self.new_present_epg = wyscan.newExternEpgAvailableCallback
		self.device_signal = wyscan.deviceSignalCallback
		self.service_update = wyscan.serviceUpdateCallback
		self.macrovision = wyscan.macrovision
		self.pmt_updated = wyscan.pmtUpdatedCallback
		self.pat_updated = wyscan.patUpdatedCallback
		self.scan_progression = wyscan.scanProgression
		self.start_playing = CallbackServer()
		return None
