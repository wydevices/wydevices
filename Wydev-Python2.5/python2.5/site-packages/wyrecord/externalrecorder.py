# -*- coding: utf-8 -*- 
#
# Description:
#
# WyRecord External Recorder Class Definition
#
#
#
# Changes:
#
# 2014-03-26
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

from logger import log
from peewee.analyse import timestep
from config import *


class ExternalRecorder(object):
	
	def __init__(self, dest_uri, wydbus_reference, dbuspath):
		self.dbuspath = dbuspath
		self.dest_uri = dest_uri
		self.source_uri = None
		self.wydbus_reference = wydbus_reference
		self.last_size = config.max_size_for_timeshift
		self.rec_start = wydbus_reference.method('start', 's', 'i')
		self.rec_stop = wydbus_reference.method('stop', '', 'i')
		self.set_max_size = wydbus_reference.method('set_max_size', 't', 'i')
		self.protect_segment = wydbus_reference.method('protect_segment', 't', 'i')
		return None

	def startRec(self, source_uri):
		res = 'failed'
		self.source_uri = source_uri
		log.info('ExternalRecorder called: startRec dest => ' + self.dest_uri + 'source => ' + self.source_uri)
		timestep('startRec init')
		try:
			res = self.rec_start(source_uri)
		except BaseException, e:
			log.debug(str(e))
		timestep('recorder instance: start')
		log.debug('rec_start result= ' + str(res))
		return None

	def stopRec(self):
		log.info('ExternalRecorder called: stopRec dest => ' + self.dest_uri)
		timestep('stopRec init')
		res = 'failed'
		try:
			res = self.rec_stop()
		except BaseException, e:
			log.debug(str(e))
		timestep('recorder instance: stop')
		log.debug('rec_stop result= ' + str(res))
		return None

	def setMaxRecSize(self, size):
		log.info('ExternalRecorde called: setMaxRecSize: ' + str(int(size)))
		timestep('setMaxRecSize init')
		self.last_size = int(size)
		self.set_max_size(int(size))
		timestep('recorder instance: set_max_size')
		return None



class DummyExternalRecorder(object):
	
	def __init__(self, dest_uri, wydbus_reference, dbuspath):
		self.dbuspath = dbuspath
		self.dest_uri = dest_uri
		self.wydbus_reference = wydbus_reference
		return None

	def startRec(self, source_uri):
		log.info('ExternalRecorder called: startRec dest => ' + self.dest_uri + 'source => ' + source_uri)
		return None

	def stopRec(self):
		log.info('ExternalRecorder called: stopRec dest => ' + self.dest_uri + 'source => ' + source_uri)
		return None

	def setMaxRecSize(self, size):
		log.info('ExternalRecorde called: setMaxRecSize: ' + str(size))
		return None
