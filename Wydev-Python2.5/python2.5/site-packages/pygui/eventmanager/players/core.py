# -*- coding: utf-8 -*- 
#
# Description:
#
# EventManager Core Player Class Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from peewee.messages import send as louie_send
from pygui.eventmanager import EventDispatcher
from pygui.shared import pygui_globs
from pygui.window import LoadingWindow


# Generic EvendHandler for Players
class GenericPlayerEventHandler(EventDispatcher):

	def event_action_menu(self, event):
		w = LoadingWindow()
		w.show()
		from pygui.menu.menu import ActionMenu
		sel = self.player.selected
		parent = None
		if sel is None and self.player._history:
			parent = self.player._history[-1]['selected']
		else:
			parent = sel.parent
		context = dict(menu=self.player, selected=sel, parent=parent)
		s = ActionMenu(context, type_='playeraction', category='player', universe=self.player.universe)
		if s.get_item_list('main_list'):
			s.show()
			if not s.get_item_list('options_list'):
				louie_send('empty_options', sender=s)
			else:
				louie_send('not_empty_options', sender=s)
			w.hide()
		else:
			w.hide()
			self.player._error_spawner()
		return True

	def event_toggle_menu(self, event):
		pygui_globs['menustack'].toggle()
		return True

	def event_stop(self, event):
		pygui_globs['menustack'].close_player()
		return True

	def event_info(self, event):
		self.player.action_info()
		return True

	def event_marker(self, event):
		self.player._error_spawner()
		return True



