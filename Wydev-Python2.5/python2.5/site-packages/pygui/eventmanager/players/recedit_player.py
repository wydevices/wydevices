# Remote events handlers for Records Editor Player

# Copyright 2011, Polo35
# Licenced under Academic Free License version 3.0
# Review wydev_pygui README & LICENSE files for further details.


from time import sleep
from copy import copy as copy_obj

from pygui.eventmanager.players import GenericPlayerEventHandler
from pygui.eventmanager.players.video_player import VideoEventHandler
from pygui.window import ConfirmWindow, MessageWindow
from pygui.shared import pygui_globs
from pygui import config
from wyvas import Image


class RecEditEventHandler(VideoEventHandler):
	def event_home(self, event):
		return True

	def event_toggle_menu(self, event):
		return True

	def event_info(self, event):
		return True

	def event_action_menu(self, event):
		sleep(1)
		ret = GenericPlayerEventHandler.event_action_menu(self, event)
		self.player.action_play()
		return ret

	def event_stop(self, event):
		w = ConfirmWindow(text=_('Do you really want to stop record edition ?'), confirm_action=self._stop_playing)
		w.show()

	def _stop_playing(self):
		try:
			player_obj = pygui_globs['display'].get_obj_by_name('recedit_player')
			mark_list_obj = player_obj.get_obj_by_name('mark_list')
			for bar in mark_list_obj.get_list_obj_by_name('mark_bar'):
				mark_list_obj.remove_child(bar)
		except:
			print 'Enable to delete marks'
		pygui_globs['menustack'].close_player()

	def event_marker(self, event):
		try:
			if self.player.time_elapsed > self.player.last_mark_time:
				byte_position = ( self.player.wpl.byte_pos['data'] / self.player.wpl.rel_pos['data'] ) * self.player.wpl.rel_pos['video']
				if 'start' in self.player.current_mark:
					if self.player.time_elapsed > self.player.total_time - 2.0:
						end_time = self.player.total_time
						end_byte = -1.0
					else:
						end_time = self.player.time_elapsed
						end_byte = byte_position
					self.player.current_mark.setdefault('end', dict(byte=end_byte, time=end_time))
					tmp_mark = copy_obj(self.player.current_mark)
					self.player.current_mark.clear()
					self.player.mark_list.append(tmp_mark)
					self.player.last_mark_time = self.player.time_elapsed
					new_bar = Image(repository=config.themes_dir + '/wybox/images/players/progressbar/', image_or_file='rec-progress.png')
					new_bar.set_keep_real_size(False)
					player_obj = pygui_globs['display'].get_obj_by_name('recedit_player')
					mark_list_obj = player_obj.get_obj_by_name('mark_list')
					mark_list_obj.add_child(new_bar, name='mark_bar', top='0%', left='100%', height='100%', width='0%', aspect=False)
				else:
					if self.player.time_elapsed > 2.0:
						start_time = self.player.time_elapsed
						start_byte = byte_position
					else:
						start_time = 0.0
						start_byte = 0.0
					self.player.current_mark.setdefault('start', dict(byte=start_byte, time=start_time))
					self.player.last_mark_time = self.player.time_elapsed
				sleep(1)
			else:
				MessageWindow(title=_('Error'), text=_('Enable to add mark before other')).show(timeout=3)
		except:
			print 'Enable to add mark'
		return True
