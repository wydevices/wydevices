# -*- coding: utf-8 -*- 
#
# Description:
#
# EventManager Web Browser Class Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from pygui.eventmanager.players.core import GenericPlayerEventHandler
from pygui.window import SilentKeyboardWindow


class WebBrowserEventHandler(GenericPlayerEventHandler):
	
	def event_action_menu(self, event):
		from pygui.menu.menu import ActionMenu
		context = dict(menu=self.player, parent=None)
		ActionMenu(context, category='webbrowser', type_='playeraction', universe=self.player.universe).show()
		return True

	def event_up(self, event):
		self.player.browse_action('up')
		return True

	def event_down(self, event):
		self.player.browse_action('down')
		return True

	def event_left(self, event):
		self.player.browse_action('left')
		return True

	def event_right(self, event):
		self.player.browse_action('right')
		return True

	def event_toggle_menu(self, event):
		kbd = SilentKeyboardWindow(insert_char_action=self.player.insert_char)
		kbd.show()
		return True

	def event_wheel_rwd(self, event):
		self.player.browse_action('previous')
		return True

	def event_wheel_fwd(self, event):
		self.player.browse_action('next')
		return True

	def event_select(self, event):
		self.player.browse_action('click')
		return True



