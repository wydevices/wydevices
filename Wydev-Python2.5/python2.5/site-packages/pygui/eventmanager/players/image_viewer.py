# -*- coding: utf-8 -*- 
#
# Description:
#
# EventManager Net Player Class Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from peewee.messages import send as louie_send
import pygui.config as config
from pygui.eventmanager.players import GenericPlayerEventHandler


# Event manager for Image universe
class ImageEventHandler(GenericPlayerEventHandler):
	
	sshow_delays = config.HMI_PHOTO['slideshow']

	def __init__(self, player):
		GenericPlayerEventHandler.__init__(self, player)
		self.player.sshow_interval = self.sshow_delays[0]
		return None

	def event_action_menu(self, event):
		self.player.paused_hand_status = self.player.paused
		self.player.paused = True
		return GenericPlayerEventHandler.event_action_menu(self, event)

	def event_select(self, event):
		self.player.toggle_pause()
		return True

	def event_up(self, event):
		louie_send('event_up', self.player)
		self.player.select(-event.arg['count'])
		return True

	def event_down(self, event):
		louie_send('event_up', self.player)
		self.player.select(event.arg['count'])
		return True

	def event_left(self, event):
		return self.event_up(event)

	def event_right(self, event):
		return self.event_down(event)

	def event_wheel_fwd(self, event):
		if self.player.paused:
			self.player.rotate(1)
			self.player.paused = False
		else:
			sshow_delays = self.sshow_delays
			current_delay = self.player.sshow_interval
			idx = sshow_delays.index(current_delay)
			if current_delay != sshow_delays[-1]:
				self.player.sshow_interval = sshow_delays[idx + 1]
		return True

	def event_wheel_rwd(self, event):
		if self.player.paused:
			self.player.rotate(-1)
			self.player.paused = False
		else:
			sshow_delays = self.sshow_delays
			current_delay = self.player.sshow_interval
			idx = sshow_delays.index(current_delay)
			if current_delay != sshow_delays[0]:
				self.player.sshow_interval = sshow_delays[idx - 1]
		return True



