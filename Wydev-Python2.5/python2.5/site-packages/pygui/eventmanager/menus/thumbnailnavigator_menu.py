# -*- coding: utf-8 -*- 
#
# Description:
#
# EventManager Thumbnail Navigator Menu Class Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from pygui.eventmanager.menu.navigator_menu import GridNavigatorEventHandler
from pygui.item.mediaitem.core import DirItem, Playlist
from pygui.shared import pygui_globs
from pygui.window import MessageWindow


# Event manager for the thumbnail navigator.
class ThumbnailNavigatorEventHandler(GridNavigatorEventHandler):
	
	def __init__(self, player):
		GridNavigatorEventHandler.__init__(self, player)

	def event_action_menu(self, event):
		stack = pygui_globs['menustack']
		from pygui.menu.menu import ActionMenu
		sel = self.player.selected
		parent = None
		if sel is None and self.player._history:
			parent = self.player._history[-1]['selected']
		else:
			parent = sel.parent
		context = dict(menu=self.player, selected=sel, parent=parent)
		s = ActionMenu(context, type_='thumbnailaction', category='thumbnail_navigator', universe=self.player.universe)
		s.show()
		return True

	def event_toggle(self):
		pygui_globs['menustack'].toggle()
		return True

	def event_select(self, event):
		sel = self.player['main_list'].selected
		if isinstance(sel, DirItem) and not isinstance(sel, Playlist):
			text = _('To enter this folder, please go back to list mode.')
			MessageWindow(text).show(timeout=5)
		else:
			GridNavigatorEventHandler.event_select(self, event)
		return True

	def event_marker(self, event):
		return True
