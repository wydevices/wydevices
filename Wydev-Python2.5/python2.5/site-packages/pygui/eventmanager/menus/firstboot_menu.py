# -*- coding: utf-8 -*- 
#
# Description:
#
# EventManager FirstBoot Menu Class Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from pygui.eventmanager.menu.core import MenuEventHandler
from pygui.shared import pygui_globs


class FirstBootMenuEventHandler(MenuEventHandler):

	def event_left(self, event):
		idx = self.player.available_choices.index(self.player.active_list)
		if self.player.active_list not in ('options0_list', 'aspect_ratio_list'):
			self.player.focus_previous()
		else:
			self.player.back_previous()
		if self.player.active_list == 'date0_list' and self.player.available_choices[idx - 1] == 'options4_list':
			self.player.back_previous()
		if self.player.active_list == 'options1_list' and self.player.available_choices[idx - 1] == 'options0_list':
			self.player.back_previous()
		return True

	def event_right(self, event):
		idx = self.player.available_choices.index(self.player.active_list)
		if self.player.active_list not in ('options0_list', 'date4_list', 'options4_list', 'aspect_ratio_list'):
			self.player.focus_next()
		elif self.player.active_list == 'date4_list':
			self.player.selected.execute()
		elif self.player.active_list == 'options4_list' and self.player.available_choices[idx + 1] == 'date0_list':
			self.player.selected.execute()
		else:
			self.player.selected.execute()
		return True

	def event_up(self, event):
		if self.player.is_reversed():
			self._move(event.arg['count'])
		else:
			MenuEventHandler.event_up(self, event)
		return True

	def event_down(self, event):
		if self.player.is_reversed():
			self._move(-event.arg['count'])
		else:
			MenuEventHandler.event_down(self, event)
		return True

	def event_select(self, event):
		self.player.selected.execute()
		return True

	def event_home(self, event):
		return True

	def event_toggle_menu(self, event):
		return True

	def event_stop(self, event):
		self.player.back_previous()
		return True



class DateSetupMenuEventHandler(FirstBootMenuEventHandler):

	def event_select(self, event):
		self.player.execute()
		return True

	def event_stop(self, event):
		pygui_globs['menustack'].back_one_menu()
		return True



class TimeZoneMenuEventHandler(MenuEventHandler):

	def event_select(self, event):
		self.player.execute()
		return True

	def event_stop(self, event):
		pygui_globs['menustack'].back_one_menu()
		return True
