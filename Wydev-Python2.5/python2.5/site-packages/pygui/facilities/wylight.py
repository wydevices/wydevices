# -*- coding: utf-8 -*- 
#
# Description:
#
# WyLight Class Definition
#
#
#
# Changes:
#
# 2012-05-02
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

from __future__ import absolute_import
from peewee.debug import GET_LOGGER
from peewee.misc_utils import MetaSingleton
from pygui.shared import pygui_globs
import functools
import fcntl

log = GET_LOGGER(__name__)



# Switches leds on or off
class WyLed(object):

	__metaclass__ = MetaSingleton

	def __init__(self):
		try:
			self._WyLed__wyled0 = file('/dev/wyled0', 'rw')
			fd = self._WyLed__wyled0.fileno()
		except Exception, e:
			log.error("Can't load Led subsystem: %s", str(e))
			self.on = (lambda : None)
			self.off = (lambda : None)
		else:
			self.on = functools.partial(fcntl.ioctl, fd, 10)
			self.off = functools.partial(fcntl.ioctl, fd, 11)
		return None

	def ask_standby(self):
		wdb = pygui_globs['wydbus']
		if wdb is not None:
			self.ask_standby = wdb.signal('/com/wyplay/wycrs/wylight', 'standbyAsked', '')
			self.ask_standby()

	# @param action_id, id is corresponding to the one found in /etc/param/led_policy.xml
	def ask_led_action(self, action_id):
		wdb = pygui_globs['wydbus']
		if wdb is not None:
			self.ask_led_action = wdb.signal('/com/wyplay/wycrs/wylight', 'callLedAction', 'i')
			self.ask_led_action(action_id)



