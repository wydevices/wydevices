# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definition of Mouse Class
#
#
#
# Changes:
#
# 2014-03-24
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import


class Mouse():
	def __init__(self, size=(1280, 720), dev='/dev/input/mice'):
		self.f = open(dev)
		self.x = size[0]
		self.y = size[1]
		self.dx = self.x / 2
		self.dy = self.y / 2
		self.buttons = {'left': {'press': False, 'start': None, 'stop': None}, 'middle': {'press': False, 'start': None, 'stop': None}, 'right': {'press': False, 'start': None, 'stop': None}}
		self.lastbutton = 0
		self.lastvector = (0, 0)
		return None

	def __str__(self):
		return 'x:%d, y:%d, last_vec:%s, b:%s' % (self.dx, self.dy, self.lastvector, self.buttons)

	def get(self):
		for a in self.buttons:
			if not self.buttons[a]['press']:
				self.buttons[a]['start'] = None
				self.buttons[a]['stop'] = None
				continue
		dx = 0
		dy = 0
		buf = self.f.read(3)
		a = ord(buf[0])
		b = ord(buf[1])
		c = ord(buf[2])
		if a & 192:
			return 0
		if not a & 8:
			return 0
		button = a & 7
		if a & 16:
			dx = b - 256
		else:
			dx = b
		if a & 32:
			dy = c - 256
		else:
			dy = c
		self.lastvector = (dx, dy)
		self.dx = self.dx + dx
		if self.dx < 0:
			self.dx = 0
		if self.dx > self.x:
			self.dx = self.x
		self.dy = self.dy - dy
		if self.dy < 0:
			self.dy = 0
		if self.dy > self.y:
			self.dy = self.y
		if self.lastbutton != button:
			change = self.lastbutton ^ button
			if change & 1:
				if button & 1:
					self.buttons['left']['press'] = True
					self.buttons['left']['start'] = [self.dx, self.dy]
				else:
					self.buttons['left']['press'] = False
					self.buttons['left']['stop'] = [self.dx, self.dy]
			if change & 2:
				if button & 2:
					self.buttons['right']['press'] = True
					self.buttons['right']['start'] = [self.dx, self.dy]
				else:
					self.buttons['right']['press'] = False
					self.buttons['right']['stop'] = [self.dx, self.dy]
			if change & 4:
				if button & 4:
					self.buttons['middle']['press'] = True
					self.buttons['middle']['start'] = [self.dx, self.dy]
				else:
					self.buttons['middle']['press'] = False
					self.buttons['middle']['stop'] = [self.dx, self.dy]
			self.lastbutton = button
		return 1



if __name__ == '__main__':
	import sys
	if len(sys.argv) > 1:
		m = Mouse(dev=sys.argv[1])
	else:
		m = Mouse()
	while m.get():
		print m

