# -*- coding: utf-8 -*- 
#
# Description:
#
# M6Replay RRS Browser Class Definitions
#
#
#
# Changes:
#
# 2012-04-20
# Initial Commit
#
# 2012-10-05
# Fix September 2012 website/player modification
#
#
# Thanks to Team XBMC Passion for M6 Replay plugin
# Algos and key are extracted from it.
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


import os
import re
import time
import hashlib
import urllib
import base64
import string
import pickle
import datetime
import xml.etree.cElementTree as ElementTree
from Crypto.Cipher import DES
from pygui.config import user_config

CACHE_FILE = "/etc/params/cache/m6_catalog"
M6_XML_CATALOG = "http://www.m6replay.fr/catalogue/catalogueWeb3.xml"



# Catalog class allow to keep data in memory.
# Browser can check catalog validity with "is_old" function.
class Catalog:

	def __init__(self, catalog):
		self.catalog = catalog
		self.timestamp = datetime.datetime.now()
		return None

	def is_old(self):
		delta = datetime.datetime.now() - self.timestamp
		limit = user_config['video']['tvreplay_refresh_rate'] * 60
		if delta.seconds > limit:
			return True
		else:
			return False



# M6 Replay RSS Browser.
# Parse XML files from M6 Replay web site and extract informations.
class M6ReplayBrowser(object):

	catalog = Catalog( None )

	def m6_decrypt(self):
		if os.path.isfile(CACHE_FILE):
			f = open(CACHE_FILE, 'r')
			try:
				self.catalog = pickle.load(f)
			except:
				self.catalog = None
			f.close()
		else:
			self.catalog = None
		if self.catalog is None or self.catalog.is_old():
			data = urllib.urlopen( M6_XML_CATALOG ).read()
			cipher = DES.new( base64.b64decode('RWxGc2cuT3Q='), DES.MODE_ECB )
			catalog_xml = cipher.decrypt( base64.standard_b64decode(data) )
			catalog_xml = string.rstrip( string.split( catalog_xml, '</template_exchange_WEB>' )[0] ) + '</template_exchange_WEB>'
			self.catalog = Catalog( catalog_xml )
			f = open(CACHE_FILE, 'w')
			pickle.dump(self.catalog, f)
			f.close()
		return self.catalog.catalog

	def get_categories(self):
		catalog_xml = self.m6_decrypt()
		catagories = ElementTree.XML(catalog_xml).findall('categorie')
		return [dict(title=cat.find('nom').text.encode('utf-8'),
								 thumbnail="http://images.m6replay.fr" + cat.get('big_img_url'),
								 position=catagories.index(cat)) for cat in catagories]
	
	def get_subcategories(self, position):
		catalog_xml = self.m6_decrypt()
		catagories = ElementTree.XML(catalog_xml).findall('categorie')
		sub_catagories = catagories[position].findall('categorie')
		return [dict(title=sub_cat.find('nom').text.encode('utf-8'),
								 thumbnail="http://images.m6replay.fr" + sub_cat.get('big_img_url'),
								 position=sub_catagories.index(sub_cat)) for sub_cat in sub_catagories]
	
	def encode_rtmp(self, app, playpath, timestamp):
		url = '%s?s=%d&e=%d' % (playpath, timestamp, timestamp + 86400)
		url_hash = hashlib.md5('/'.join(['vw8kuo85j2xMc', app, url[4:]])).hexdigest()
		token_url = url + '&h=' + url_hash
		return token_url

	def get_product(self, position):
		catalog_xml = self.m6_decrypt()
		catagories = ElementTree.XML(catalog_xml).findall('categorie')
		sub_catagories = catagories[position[0]].findall('categorie')
		products = sub_catagories[position[1]].findall('produit')
		retlist = []
		for prod in products:
			medias = prod.findall('fichemedia')
			for media in medias:
				if( len(medias) == 1 ):
					nom_media = ''
				else:
					nom_media = ' [' + media.get('langue') + ']'
				token_url = self.encode_rtmp('a2883/e1', media.get('video_url'), int(time.time()))
				retlist.append(dict(title=prod.find('nom').text.encode('utf-8') + nom_media,
														thumbnail="http://images.m6replay.fr" + prod.get('big_img_url'),
														uri='rtmpe://groupemsix.fcod.llnwd.net:1935/a2883/d1/' + token_url))
		return retlist

if ( __name__ == "__main__" ):
	for category in M6ReplayBrowser().get_categories():
		print 'Category'
		print 'Title    :', category['title']
		print 'Thumbnail:', category['thumbnail']
		for sub_category in M6ReplayBrowser().get_subcategories(category['position']):
			print 'Sub Category'
			print 'Title    :', sub_category['title']
			print 'Thumbnail:', sub_category['thumbnail']
			for product in M6ReplayBrowser().get_product([category['position'], sub_category['position']]):
				print 'Product'
				print 'Title    :', product['title']
				print 'Thumbnail:', product['thumbnail']
				print 'URI      :', product['uri']
