# -*- coding: utf-8 -*- 
#
# Description:
#
# ScreenSaver Parameters Items Class Definitions
#
#
#
# Changes:
#
# 2011-10-02
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from peewee.debug import PRINT_EXCEPTION
from pygui.config import user_config
from pygui.facilities.l10n import UnicodeDict
from pygui.item.core import ActionItem
from pygui.item.parameters import UserConfigSetupItem, ParametersSetupItem
from pygui.window import KeyboardWindow
from pygui.shared import pygui_globs



# Reinit the screen saver after a modification
def reinit_screen_saver():
	pygui_globs['screensaver'] = None
	try:
		from pygui.menu.menu.screensaver import screensaver_dict
		pygui_globs['screensaver'] = screensaver_dict[user_config['power']['screensaver_type']]()
	except:
		PRINT_EXCEPTION()



class ScreenSaverTypeUserConfigSetupItem(UserConfigSetupItem):

	translation_dict = UnicodeDict({'image': 'Animated icons', 'text': 'Animated text'})
	
	def execute_action(self, val):
		reinit_screen_saver()
		self.reload_center_list(True)
		return None



class ScreenSaverTextTypeUserConfigSetupItem(UserConfigSetupItem):

	translation_dict = UnicodeDict({'time': 'Animated time', 'text': 'Animated text'})
	
	def execute_action(self, val):
		reinit_screen_saver()
		self.reload_center_list(True)
		return None



class ScreenSaverTextSetupItem(ActionItem):

	def __init__(self, *args, **kw):
		ActionItem.__init__(self, action=self.execute_action, *args, **kw)
		return None

	def execute_action(self):
		def __do_change_text(kbd):
			if kbd.text:
				user_config['power']['screensaver_text'] = kbd.text
				user_config.save()
				kbd.hide()
				reinit_screen_saver()
			return None
  	
		text = user_config['power']['screensaver_text']
		kbd = KeyboardWindow(_('Screen saver text'), text=text, confirm_action=__do_change_text)
		kbd.show()
		return None



class ScreenSaverThresholdSetupItem(UserConfigSetupItem):

	translation_dict = dict([(val,'%d min' % (val / 60)) for val in (list(xrange(60, 660, 60)) + list(xrange(900, 3660, 300)))])

	def execute_action(self, val):
		reinit_screen_saver()
		return None


class ScreenSaverParametersSetupItem(ParametersSetupItem):

	depth = 3

	def __init__(self, *args, **kw):
		ParametersSetupItem.__init__(self, *args, **kw)
		return None

	def browse(self, preview=False):
		preview_list = [ScreenSaverTypeUserConfigSetupItem('power', 'screensaver_type', ['image', 'text'], 'Type', type_='setupitem'),
		ScreenSaverThresholdSetupItem('power', 'screensaver_threshold', list(xrange(60, 660, 60)) + list(xrange(900, 3660, 300)), 'Threshold', type_='setupitem')]
		if user_config['power']['screensaver_type'] == 'text':
			preview_list.append(ScreenSaverTextTypeUserConfigSetupItem('power', 'screensaver_text_type', ['time', 'text'], 'Text type', type_='setupitem'))
			if user_config['power']['screensaver_text_type'] == 'text':
				preview_list.append(ScreenSaverTextSetupItem(name=_('Modify text'), type_='setupitem', menu=self.menu))
		return preview_list
