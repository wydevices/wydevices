# -*- coding: utf-8 -*- 
#
# Description:
#
# Video Parameters Items Definitions
#
#
#
# Changes:
#
# 2011-10-02
# Initial Commit
#
# 2011-10-18
# Add YoutubeFormatParametersSetupItem Class Definition
# Allow to select default Youtube language search and video format
#
# 2011-11-19
# Add DailyMotionFormatParametersSetupItem Class Definition
# Allow to select default DailyMotion language search and video format
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from pygui.facilities.l10n import UnicodeDict
from pygui.facilities.codemapping import soundconfig_dict, ui_aspect_ratio_dict, youtube_format_dict, dailymotion_format_dict
from pygui.item.core import ActionItem, Item
from pygui.item.parameters import ParametersSetupItem, BooleanUserConfigSetupItem, UserConfigSetupItem
from pygui.item.parameters.generalsetup.i18n import LanguageUserConfigSetupItem

import itertools
import pygui.config as config



class SoundFormatParametersSetupItem(UserConfigSetupItem):

	translation_dict = soundconfig_dict



# Used to set the user's display's aspect ratio:
# - 16:9 for a widescreen display (e.g. HDTV).
# - 4:3 for an oldschool TV.
class AspectRatioParametersSetupItem(UserConfigSetupItem):

	depth = 2
	translation_dict = ui_aspect_ratio_dict

	# Before calling this mother class constructor, be sure that your inherited class has a translation_dict setted.
	def __init__(self, domain, key, choices_list, *args, **kw):
		ParametersSetupItem.__init__(self, *args, **kw)
		self.domain = domain
		self.key = key
		self.choices_list = choices_list
		try:
			value = config.user_config[domain][key]
			self.preview_list = [ActionItem(name=self.translation_dict.get(val, str(val)), display_type=(('%s_checked'%val) if val == value else ('%s_not_checked'%val)), type_='setupitem', action=self._select_option, args=[val]) for val in choices_list]
		except AttributeError, e:
			PRINT_EXCEPTION(e)
		return None

	def execute_action(self, val):
		from pygui.shared import pygui_globs
		from pygui.actions.jobs.player import go_aspect
		context = dict(menu=self.menu, selected=self, parent=None)
		display = pygui_globs['display']
		go_aspect(context, display, val)
		return None

	def browse(self, preview=False):
		val = config.user_config[self.domain][self.key]
		for it, choice in itertools.izip(self.preview_list, self.choices_list):
			it.name = self.translation_dict.get(choice)
			if val == it.args[0]:
				it.display_type = '%s_checked' % choice
			else:
				it.display_type = '%s_not_checked' % choice
		return self.preview_list



class VideoParametersSetupItem(ParametersSetupItem):

	depth = 3

	def __init__(self, *args, **kw):
		ParametersSetupItem.__init__(self, *args, **kw)
		self.preview_list = [LanguageUserConfigSetupItem(domain='video', key='language', choices_list=config.HMI_VIDEO['languages'], name='Default audio track', type_='setupitem')]
		return None



class YoutubeFormatParametersSetupItem(UserConfigSetupItem):

	translation_dict = youtube_format_dict


class YoutubeParametersSetupItem(ParametersSetupItem):

	depth = 3
	def __init__(self, *args, **kw):
		ParametersSetupItem.__init__(self, *args, **kw)
		self.preview_list = [LanguageUserConfigSetupItem(domain='video', key='youtube_languages', choices_list=config.HMI_VIDEO['youtube_languages'], name=_('Default search language'), type_='setupitem'),
		YoutubeFormatParametersSetupItem(domain='video', key='youtube_formats', choices_list=config.HMI_VIDEO['youtube_formats'], name=_('Default video format'), type_='setupitem')]
		return None


class DailyMotionFormatParametersSetupItem(UserConfigSetupItem):

	translation_dict = dailymotion_format_dict


class DailyMotionParametersSetupItem(ParametersSetupItem):

	depth = 3
	def __init__(self, *args, **kw):
		ParametersSetupItem.__init__(self, *args, **kw)
		self.preview_list = [LanguageUserConfigSetupItem(domain='video', key='dailymotion_languages', choices_list=config.HMI_VIDEO['dailymotion_languages'], name=_('Default search language'), type_='setupitem'),
		DailyMotionFormatParametersSetupItem(domain='video', key='dailymotion_formats', choices_list=config.HMI_VIDEO['dailymotion_formats'], name=_('Default video format'), type_='setupitem')]
		return None


class TVReplayHDParametersSetupItem(UserConfigSetupItem):

	translation_dict = UnicodeDict({True: 'Yes', False: 'No'})


class TVReplayParametersSetupItem(ParametersSetupItem):

	depth = 3
	def __init__(self, *args, **kw):
		ParametersSetupItem.__init__(self, *args, **kw)
		self.preview_list = [TVReplayHDParametersSetupItem(name='TVReplay HD videos', menu=self.menu, domain='video', key='tvreplay_hd', choices_list=sorted(UnicodeDict({True: 'Yes', False: 'No'}), reverse=False))]
		return None
