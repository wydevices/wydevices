# -*- coding: utf-8 -*- 
#
# Description:
#
# Advenced Parameters Demo Setup Item Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from pygui.item.parameters.core import ActionItem
from peewee.notifier import Task
from pygui.shared import pygui_globs
from pygui.config import user_config


class DeleteDemoItem(ActionItem):
	
	def __init__(self, name, type_='setupitem'):
		ActionItem.__init__(self, name, type_, action=self.remove_demo_mode)
		return None

	def remove_demo_mode(self):
		user_config['advanced']['demo_mode'] = False
		user_config['advanced']['start_on_demo_mode'] = False
		user_config.save()
		pygui_globs['menustack'].back_to_home()
		return None



class LaunchDemoItem(ActionItem):
	
	def __init__(self, name, type_='setupitem'):
		ActionItem.__init__(self, name, type_, action=self.demo_mode)
		return None

	def demo_mode(self):
		from pygui.input.interface import EventPlayer
		from pygui.eventmanager import event_map
		from Queue import Full
		from pygui.window import KeystrokeWindow
		config.resume_video = False
		config.resume_dvd = False
		self.ks = KeystrokeWindow()
		user_config['advanced']['start_on_demo_mode'] = True
		user_config.save()
		stack = pygui_globs['menustack']
		home_menu = stack.get_home()
		if home_menu:
			stack.back_to_menu(home_menu)
			home_menu.select(m.choices[0])
		else:
			print 'DEMO DOES NOT SUPPORT UNIVERSE_SWITCHER FOR NOW !!!'
			return None
		self.ks.show()
		def _post_event(key, timeout=None):
			try:
				self.ks.set_key(str(key))
				Task(self.ks.set_key, '').start(2)
				event_map[key].post(dict(count=1, timeout=timeout))
			except Full:
				print 'DEMO EVENT DROPPED'
			return None
		self.event_player = EventPlayer(_post_event, '/etc/params/demo.replay', loop=True)
		self.event_player.start()
		pygui_globs['demomode'] = self
		return None

	def stop(self):
		self.ks.hide()
		self.event_player.stop()
		pygui_globs['demomode'] = None
		pygui_globs['menustack'].back_to_home()
		config.resume_video = True
		config.resume_dvd = True
		user_config['advanced']['start_on_demo_mode'] = False
		user_config.save()
		return None
