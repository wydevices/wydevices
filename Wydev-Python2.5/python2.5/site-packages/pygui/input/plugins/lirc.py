# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definition Definition of Lirc control plugin
#
#
#
# Changes:
#
# 2014-03-24
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

from __future__ import absolute_import

from peewee.notifier import Task
from peewee.gettime import time
from peewee.debug import GET_LOGGER
from Queue import Full
from pygui.input import DIRECTFB_MAP
from socket import socket, AF_UNIX, SOCK_STREAM
import threading

log = GET_LOGGER(__name__)


# Plugin for stdin control.
class PluginInterface(threading.Thread):

	def __init__(self, *args):
		threading.Thread.__init__(self)
		try:
			self.lircd = socket(AF_UNIX, SOCK_STREAM)
			self.lircd.connect('/dev/lircd')
		except:
			log.error("Can't load lirc plugin")
			del self.lircd
		else:
			self.kbmap_get = DIRECTFB_MAP.get
			self.setDaemon(True)
			self.setName('LircPlugin')
			Task(self.start).start(1.0)
		return None

	def run(self):
		while True:
			try:
				code, rep, keycode, garbage = self.lircd.recv(512).split(None, 3)
				rep = int(rep, 16)
				if 0 < rep < 5 or (rep and keycode[0] == 'P'):
					keycode = None					
			except Exception, e:
				log.error('Invalid keycode %s // %s %s', e, rep, keycode, garbage)
				keycode = None
			mapped = (self.kbmap_get(keycode.upper()) if keycode else None)
			if keycode is not None and mapped is not None:
				try:
					ts = time() + 0.20000000000000001
					mapped.post(dict(count=1, timeout=ts))
				except Full:
					pass
				except KeyError:
					log.warn('Unmapped key: %s.', keycode)
		return None
