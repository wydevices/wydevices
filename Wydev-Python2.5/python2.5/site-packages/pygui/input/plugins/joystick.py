# -*- coding: utf-8 -*- 
#
# Description:
#
# Joystick Input Plugin Class Definition
#
#
#
# Changes:
#
# 2014-04-03
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


import threading
from struct import unpack, calcsize
import struct
import pygui.eventmanager.events as events
from peewee.notifier import descriptor_watch
from peewee.debug import GET_LOGGER, PRINT_EXCEPTION

log = GET_LOGGER(__name__)


# Input plugin for joystick device based on linux input event interface.
# Used for now for uwand rcu
class PluginInterface(Thread):

	JS_EVENT_BUTTON = 1
	JS_EVENT_AXIS = 2
	JS_EVENT_INIT = 128
	JS_EVENT = 'IhBB'
	JS_EVENT_SIZE = calcsize(JS_EVENT)
	
	def __init__(self, *args):
		threading.Thread.__init__(self)
		log.debug('Preparing joystick plugin...')
		self.setDaemon(True)
		self.setName('JoystickPlugin')
		self.dev = open('/dev/input/js0')
		self.pos = [0, 0]
		self.max_val = 32768
		self.button = events.BUTTON0.post
		self.mouse = events.MOUSE.post
		self.start_pos = None
		descriptor_watch(self.dev.fileno(), self.handle)
		return None

	def _adapt_ratio(self, val):
		return int(100 + (val - self.max_val) * 0.00152587890625)

	def handle(self):
		try:
			evt = self.dev.read(self.JS_EVENT_SIZE)
			time, value, type, number = unpack(self.JS_EVENT, evt)
			evt = type & ~self.JS_EVENT_INIT
			if evt == self.JS_EVENT_AXIS:
				if number == 0:
					self.pos[0] = self._adapt_ratio(value)
				elif number == 1:
					self.pos[1] = self._adapt_ratio(value)
				x, y = self.pos
				if self.start_pos is None:
					self.mouse(dict(x=x, y=y, timeout=None, clicked=None))
				else:
					self.button(dict(x=x, y=y, start_x=self.start_pos[0], start_y=self.start_pos[1]))
					self.mouse(dict(x=x, y=y, timeout=None, clicked=None))
			elif evt == self.JS_EVENT_BUTTON:
				if value:
					self.start_pos = self.pos + []
				else:
					self.start_pos = None
		except:
			PRINT_EXCEPTION()
		return None
