# -*- coding: utf-8 -*- 
#
# Description:
#
# Progress Bar Widget Definition
#
#
#
# Changes:
#
# 2014-03-25
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

from __future__ import absolute_import

import wyvas
from peewee.formatters import int_to_percent
from peewee.debug import GET_LOGGER

log = GET_LOGGER(__name__)


class Progressbar(Container):
	
	def __init__(self):
		wyvas.Container.__init__(self)
		self._bar_name = None
		self._indicator_name = None
		self.min = 0
		self.max = 100
		self.position = 1
		for bar in self.get_list_obj_by_name(self._bar_name):
			bar.resize(width=self.position)
		for indicator in self.get_list_obj_by_name(self._indicator_name):
			indicator.move(hcenter=self.position)
		return None

	def update(self, signal, sender, value):
		self.set(**value)
		return None

	initialize = update

	def set_bar(self, bar=None):
		self._bar_name = bar

	def set_indicator(self, indicator=None):
		self._indicator_name = indicator
		return None

	def step(self):
		self.position += 1
		self._redraw(1)
		return None

	def set(self, pos=None, max=None, min=None):
		if min:
			self.min = min
		if max:
			self.max = max
		delta = abs(self.position - pos) / self.max
		self.position = (1 if not pos else pos)
		self._redraw(delta)
		return None

	def _redraw(self, delta=0):
		if not self.max:
			return None
		computed_pos = int_to_percent(min(100, (self.position - self.min) * 100.0 / (self.max - self.min)))
		log.info('Progressbar redraw (pos: %s, delta: %s)', self.position, delta)
		for bar in self.get_list_obj_by_name(self._bar_name):
			bar.resize(width=computed_pos)
		for indicator in self.get_list_obj_by_name(self._indicator_name):
			indicator.move(hcenter=computed_pos)
		return None
