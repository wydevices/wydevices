# -*- coding: utf-8 -*- 
#
# Description:
#
#  Definition
#
#
#
# Changes:
#
# 2012-01-10
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

from __future__ import absolute_import

from pygui.gui.widget.listing.ui_items import UIItem
from peewee.debug import GET_LOGGER
from wyvas import Image

log = GET_LOGGER(__name__)


class ImageItem(UIItem):
	
	__slots__ = ['_selected', '_marked', '_position', '_edited', 'widget', 'style', '_not_selected_widget', '_selected_widget']

	def reset(self, item, selected, position=None):
		UIItem.reset(self, item, selected)
		if item is not None:
			not_sel, sel = UIItem._get_images_paths(self, item)
			self._selected_widget.load(sel)
			self._not_selected_widget.load(not_sel)
		else:
			self.widget.set_color(a=0)
		return None

	def _create(self):
		img_sel = Image()
		img_not_sel = Image()
		style = self.style
		img_not_sel.resize(*style['icon_size'])
		img_sel.resize(*style['selected_icon_size'])
		preserve_icon_size = style['preserve_icon_size']
		img_sel.set_keep_real_size(preserve_icon_size)
		img_not_sel.set_keep_real_size(preserve_icon_size)
		return (img_not_sel, img_sel)

	def _set_selected(self, selected, animate=True):
		UIItem._set_selected(self, selected, animate)
		duration = self.style['duration'] if animate else 0
		if selected:
			w, h = self.style['selected_icon_size']
		else:
			w, h = self.style['icon_size']
		self._selected_widget.animate('size', width=w, height=h, duration=duration)
		self._not_selected_widget.animate('size', width=w, height=h, duration=duration)
		return None
