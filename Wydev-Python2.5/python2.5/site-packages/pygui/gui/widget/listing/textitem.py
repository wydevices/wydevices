# -*- coding: utf-8 -*- 
#
# Description:
#
# Gui Widget Listing Text Item Class Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import
from pygui.gui.widget.listing.ui_items import UIItem
from pygui.facilities.l10n import omnicode
try:
	from wyvas import __version__ as wyvas_version
	if 'cython' not in wyvas_version:
		raise ImportError
	from wyvas import TextBlock
except ImportError:
	from pygui.gui.widget import TextBlock


class TextItem(UIItem):

	__slots__ = ['_selected', '_marked', '_position', '_edited', 'widget', 'style', '_item_name', '_not_selected_widget', '_selected_widget', 'text_not_sel', 'text_sel', 'selected_style_string', 'not_selected_style_string']

	def reset(self, item, selected, position=None):
		if item is not None:
			self._item_name = item.name
			self._update_text(position)
		else:
			self._item_name = None
			self.widget.set_color(a=0)
		UIItem.reset(self, item, selected, position)
		self.text_sel.set_scroll((self.style['autoscroll'] if selected else False))
		return None

	def set_position(self, position):
		if position != self._position:
			self._position = position
			if self._item_name is not None:
				self._update_text(position)
		return None

	def _update_text(self, position):
		if position is not None and self.style['enumerated']:
			name = '%d. %s' % (position, self._item_name)
		else:
			name = omnicode(self._item_name)
		try:
			self._selected_widget.set_text(name)
			self._not_selected_widget.set_text(name)
		except:
			name = name.encode('ascii', 'replace')
			self._selected_widget.set_text(name)
			self._not_selected_widget.set_text(name)
		return None

	def _create(self):
		self._item_name = None
		style = self.style
		maxlen = style['maxlen']
		text = TextBlock(max_width=maxlen)
		text.set_color(color=style['text_color'])
		text_size = style['text_size']
		self._not_selected_kwargs.update(width=text_size[0], height=text_size[1])
		text_selected = TextBlock(max_width=maxlen)
		text_selected.set_color(color=style['selected_text_color'])
		text_size = style['selected_text_size']
		self._selected_kwargs.update(width=text_size[0], height=text_size[1])
		text_selected.set_style(style=style['selected_font_style'])
		text.set_style(style=style['font_style'])
		self.text_not_sel = text
		self.text_sel = text_selected
		return (text, text_selected)

	def _set_selected(self, selected, *args, **kw):
		UIItem._set_selected(self, selected, *args, **kw)
		self.text_sel.set_scroll((self.style['autoscroll'] if selected else False))
		return None

	def destroy(self):
		self._item_name = None
		self.text_sel.set_text('')
		self.text_not_sel.set_text('')
		self.text_sel.set_scroll(False)
		return UIItem.destroy(self)
