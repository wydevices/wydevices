# -*- coding: utf-8 -*- 
#
# Description:
#
# Shared Variables Class Definitions
#
#
#
# Changes:
#
# 2011-10-02
# Initial Commit
#
#
# Copyright 2010-2012, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

__all__ = ['pygui_globs']

import sys
from peewee.debug import log, log_level
import pygui.config as config



class NotYetProvidedError(KeyError):
	__module__ = __name__



class _Globals(object):

	__module__ = __name__
	provided_resource = dict()

	def __setitem__(self, name, value):
		log.debug('%s given.' % name)
		self.provided_resource[name] = value
		if len(self.provided_resource) > 10:
			log.warning('BE CAREFUL ! Too many elements in shared namespace !')
		return None

	def __getitem__(self, name):
		log.debug('acquire %s.', name)
		try:
			res = self.provided_resource[name]
			log.debug('%s acquired.', name)
			return res
		except KeyError:
			raise NotYetProvidedError('%s is not available' % name)
		return None

	def __delitem__(self, name):
		log.debug('remove %s.' % name)
		try:
			self.provided_resource.pop(name)
			log.debug('%s removed.', name)
		except KeyError:
			raise NotYetProvidedError('%s is not available' % name)
		return None

	__contains__ = provided_resource.__contains__
	__iter__ = provided_resource.__iter__


log.debug('import shared variables provider')
if config.DEBUG or log_level:
	pygui_globs = _Globals()
else:
	pygui_globs = {}
