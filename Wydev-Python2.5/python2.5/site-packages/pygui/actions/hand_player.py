# -*- coding: utf-8 -*- 
#
# Description:
#
# Player Hand Actions Definitions
#
#
#
# Changes:
#
# 2012-04-11
# Initial Commit
#
# 2012-04-29
# Add "Edit" entries to Records hand menu.
# Allow cut part of video
# Launch video playback, then select parts with mark button.
# When finished use hand menu to start video editing.
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

from __future__ import absolute_import

name = 'Player'
position = None
image = 'hand_player'
category = 'player'
default = False
unique = True

import pygui.config as config
from pygui.menu.players.recedit_player import RecEditPlayer
from pygui.actions.jobs.common import rotate_left, rotate_right
from pygui.actions.jobs.player import DisplayFormatActionItem, SubtitlesActionItem, SubtitlesSizeActionItem, AudioSubstreamsActionItem, TransitionsActionItem, RepeatAudioActionItem, RandomModeActionItem
from pygui.actions.jobs.player import play_embedded_audio, play_embedded_video, play_embedded_image
from pygui.actions.jobs.player import RepeatVideoActionItem, PlayModeVideoActionItem
from pygui.actions.jobs.recedit import RecEditDeleteMarkItem, RecEditVideoNameItem, RecEditBufferSizeItem, RecEditDeleteRecordItem, RecEditStartProcessItem
from pygui.item.core import ActionItem
from pygui.shared import pygui_globs



def is_available(context):
	return True



def get_action_info_list(context):
	menu = context['menu']
	menu_type = menu.type
	selected_item = context['selected']
	act = []
	if isinstance(context['menu'], RecEditPlayer):
		act.append(RecEditDeleteMarkItem(name=_('Delete last mark'), type_='action', args=[context]))
		act.append(RecEditVideoNameItem(name=_('Edit video name'), type_='action', args=[context]))
		act.append(RecEditBufferSizeItem(name=_('Buffer size'), menu=context['menu']))
		act.append(RecEditDeleteRecordItem(name=_('Delete record'), menu=context['menu']))
		act.append(RecEditStartProcessItem(name=_('Start process'), type_='action', args=[context]))
		return act
	if 'video' in menu_type:
		act.append(DisplayFormatActionItem(menu, _('Display format')))
	if selected_item.type in ('audio',):
		act.append(RepeatAudioActionItem(name=_('Repeat'), player=menu, type_='action'))
		act.append(RandomModeActionItem(name=_('Random'), player=menu, type_='action'))
	if selected_item.type in ('video',):
		act.append(SubtitlesActionItem(selected_item, menu, _('Subtitles')))
		act.append(SubtitlesSizeActionItem(selected_item, menu, _('Subtitles size')))
		act.append(AudioSubstreamsActionItem(selected_item, menu, _('Audio language')))
		if selected_item['backend'] not in ('wyrecord',):
			act.append(PlayModeVideoActionItem(name=_('Play mode'), player=menu, type_='action'))
		act.append(RepeatVideoActionItem(name=_('Repeat'), player=menu, type_='action'))
	tmp_left = ActionItem(_('Left rotation'), type_='action', action=rotate_left, args=[context])
	tmp_right = ActionItem(_('Right rotation'), type_='action', action=rotate_right, args=[context])
	if selected_item.type in ('image',):
		act.append(TransitionsActionItem(selected_item, menu, _('Transitions')))
		act.append(ActionItem(_('Left rotation'), type_='action', action=rotate_left, args=[context]))
		act.append(ActionItem(_('Right rotation'), type_='action', action=rotate_right, args=[context]))
	if selected_item.type in ('net',):
		act.append(ActionItem(_('Play embedded audio'), type_='action', action=play_embedded_audio, args=[context]))
		act.append(ActionItem(_('Play embedded video'), type_='action', action=play_embedded_video, args=[context]))
		act.append(ActionItem(_('Play embedded image'), type_='action', action=play_embedded_image, args=[context]))
	return act

