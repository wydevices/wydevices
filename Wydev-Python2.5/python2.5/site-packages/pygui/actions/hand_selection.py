# -*- coding: utf-8 -*- 
#
# Description:
#
# Actions Hand Selection Class Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

name = 'Selected'
image = 'hand_selected'
category = 'navigator'
position = 4
default = True
unique = False

from pygui.actions.jobs.fs import execute_delete, execute_rename, execute_eject
from pygui.actions.jobs.marker import execute_burn_marker_list
from pygui.actions.jobs.marker import execute_copy_marked_items
from pygui.actions.jobs.records import execute_cancel_record, execute_rename_record
from pygui.config import plugins, user_config
from pygui.item.core import ActionItem
from pygui.item.mediaitem import Playlist


def is_available(context):
	selected = context['selected']
	if selected is None:
		return False
	if context['menu'].type in ('tv_navigator',) and not isinstance(selected, Playlist):
		return False
	return True
	

def get_action_info_list(context):
	menu_type = context['menu'].type
	from pygui.markerlist import markerlists
	fl = markerlists().get(context['menu'].universe)
	if fl is not None:
		fl.menu = context['menu']
	act = []
	if user_config['security']['parent_mode'] or not user_config['security']['parental_control']:
		if menu_type in ('tv_navigator',):
			selected = context['selected']
			if isinstance(selected, Playlist):
				act.append(ActionItem(_('Rename'), type_='action', action=execute_rename, args=[context]))
				act.append(ActionItem(_('Delete'), type_='action', action=execute_delete, args=[context, fl]))
			return act
		if menu_type in ('scheduled_navigator',):
			act.append(ActionItem(_('Rename'), type_='action', action=execute_rename_record, args=[context]))
			act.append(ActionItem(_('Delete'), type_='action', action=execute_cancel_record, args=[context]))
			return act
		if context['selected']['backend'] != 'upnp':
			act.append(ActionItem(_('Rename'), type_='action', action=execute_rename, args=[context]))
			act.append(ActionItem(_('Delete'), type_='action', action=execute_delete, args=[context, fl]))
	if 'transcode' in plugins and context['selected'].type in ('video',):
		from pygui.shared import pygui_globs
		psp_path = pygui_globs['psp_path']
		if psp_path:
			from pygui.actions.jobs.transcode import transcode
			context['psp_path'] = psp_path
			act.append(ActionItem(_('Transcode to PSP\xe2\x84\xa2'), type_='action', action=transcode, args=[context]))
	return act
