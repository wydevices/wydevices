# -*- coding: utf-8 -*- 
#
# Description:
#
# Net Actons Jobs Class Definition
#
#
#
# Changes:
#
# 2014-04-07
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.


from __future__ import absolute_import

from peewee.debug import GET_LOGGER
from peewee.messages import send as louie_send
from pygui.config import user_config
from pygui.window.keyboardwindow import KeyboardWindow
from wymedia.wmplus import set_param
try:
	from wymedia.wmplus import free_cache
except ImportError:
	def free_cache():
		raise NotImplementedError('Internet services are not enabled in wymedia.')

log = GET_LOGGER(__name__)


class LoginPasswordLauncher(object):

	def __init__(self):
		self._login = None
		self._password = None
		return None

	# Prompt the user for his Internet services login and/or password.
	# 
	# what_to_launch chooses what the user is prompted for:
	#     - 0: New login
	#     - 1: New password
	#     - 2: New login, then new password
	def launch(self, what_to_launch=2):
		self.what_to_launch = what_to_launch
		if self.what_to_launch in (0, 2):
			self._set_new_login()
		else:
			self._set_new_password()
		return None

	def _set_new_password(self, win=None):
		if win is not None:
			if self.what_to_launch == 2:
				self._login = win.text
			win.hide()
		kbd = KeyboardWindow(title=_('Enter your password'), confirm_action=self._validate)
		kbd.show()
		return None

	def _set_new_login(self):
		if self.what_to_launch == 2:
			_confirm_action = self._set_new_password
		else:
			_confirm_action = self._validate
		kbd = KeyboardWindow(title=_('Enter your login'), confirm_action=_confirm_action)
		kbd.show()
		return None

	def _validate(self, win=None):
		if win is not None:
			if self.what_to_launch in (0, 2):
				self._password = win.text
			else:
				self._login = win.text
			win.hide()
		if self._login is not None:
			user_config['net']['login'] = self._login
			log.info("'user' param set for net services'")
			set_param('user', self._login)
		if self._password is not None:
			user_config['net']['password'] = self._password
			log.info("'pass' param set for net services'")
			set_param('pass', self._password)
		user_config.save()
		louie_send('refresh_root', sender='navigator')
		return None



def change_login_pwd_net(context, stack):
	LoginPasswordLauncher().launch(2)
	stack.back_one_menu()
	return None


def refresh_net_content(context):
	free_cache()
	context['hand_menu'].hide()
	louie_send('refresh_root', sender='navigator')
	return None
