# -*- coding: utf-8 -*- 
#
# Description:
#
# Time Manager Class & Date Decorators Definitions
#
#
#
# Changes:
#
# 2012-04-15
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

from __future__ import absolute_import

import os
from peewee.debug import PRINT_EXCEPTION
from peewee.dbus import peewee_dbus
from peewee.misc_utils import MetaSingleton

__all__ = ['TimeManager']

localtime_redist_path = '/etc/params/localtime'
localtime_normal_path = '/etc/localtime'
timezone = []
zoneinfo_dir = '/usr/share/zoneinfo/'
WYCLOCK_MANUAL_SETTER = 1
WYCLOCK_AUTO_SETTER = 3



class TimeManager(object):

	__metaclass__ = MetaSingleton

	def __init__(self):
		_wyclock = peewee_dbus.reference('com.wyplay.wycrs', '/com/wyplay/wycrs/wyclock', 'com.wyplay.wycrs')
		self._set_time_setter = _wyclock.method('SetTimeSetter', 'i', '')
		self._get_time_setter = _wyclock.method('GetTimeSetter', '', 'i')
		self.set_time_signal = peewee_dbus.signal('/com/wyplay/peewee', 'SetTime', 'x')
		self._timezones = []
		return None

	time_setter = property((lambda self: self._get_time_setter()), (lambda self, time: self._set_time_setter(time)))

	def reset(self):
		self._timezones = []
		return None

	def set_time(self, time):
		self.set_time_signal(time)
		return None

	# function used to get a list of available countries in zone.tab file.
	# zone.tab is provided by timezone-data package.
	# Provided strings can be used as TZ timezone code.
	def get_timezones(self):
		if self._timezones:
			return self._timezones
		try:
			f = open(os.path.join(zoneinfo_dir, 'zone.tab'))
		except Exception, e:
			PRINT_EXCEPTION(e)
			return []
		for _f in f:
			_array = _f.split()
			if _array[0][0] in ('#',):
				continue
			self._timezones.append(_array[2])
		f.close()
		self._timezones.sort()
		return self._timezones

	def set_timezone(self, timezone):
		localtime_path = localtime_normal_path
		if os.path.lexists(localtime_redist_path):
			localtime_path = localtime_redist_path
		try:
			os.unlink(localtime_path)
			os.symlink(os.path.join('/usr/share/zoneinfo', timezone), localtime_path)
			os.putenv('TZ', timezone)
		except Exception:
			PRINT_EXCEPTION()
		return None
