# -*- coding: utf-8 -*- 
#
# Description:
#
# HDD Decorators Definitions
#
#
#
# Changes:
#
# 2012-04-15
# Initial Commit
#
#
# Copyright 2010-2014, WyDev Team.
# Author: Polo35 (polo35580@hotmail.fr)
#
# Licenced under Academic Free License version 3.0
# Review WyGui README & LICENSE files for further details.

from __future__ import absolute_import

import os
from peewee.debug import GET_LOGGER

log = GET_LOGGER('system')



# Format is MMDDhhmmYYYY
# Function not used at all
def set_date(day, month, year, hour, min, write=True):
	from time import mktime, ctime
	date_str = [str(elt).rjust(2, '0') for elt in (month, day, hour, min)]
	year = (str(year) if len(str(year)) == 4 else '20' + str(year).rjust(2, '0'))
	date_str.append(year)
	if write:
		os.system('date -s %s' % date_str)
	log.info('System date changed')
	return date_str

# Return free space available from the given path, or N/A if this path does not exist.
def get_free_available_space(path):
	from peewee.formatters import bytes_to_human
	try:
		part = os.statvfs(path)
	except OSError:
		return _('N/A')
	else:
		return bytes_to_human(part.f_bfree * part.f_bsize)

# Return total space from the given path, or N/A if this path does not exist.
def get_space(path):
	from peewee.formatters import bytes_to_human
	try:
		part = os.statvfs(path)
	except OSError:
		return _('N/A')
	else:
		return bytes_to_human(part.f_blocks * part.f_bsize)
